{"version":3,"file":"static/js/9267.a1d70099.chunk.js","mappings":"6WASMA,G,SAAgC,CAEpC,EAAG,+CAEH,SAAU,+CAEV,GAAI,gDAEJ,GAAI,2CAEJ,IAAK,oDAEL,IAAK,+CAEL,MAAO,iDAEP,MAAO,gDAEP,MAAO,4CAEP,KAAM,4CAEN,WAAY,8CAEZ,KAAM,6CAEN,IAAK,gDAGDC,EAAuC,CAE3C,EAAG,6CAEH,IAAK,6CAEL,GAAI,6CAEJ,MAAO,6CAEP,WAAY,6CAEZ,MAAO,6CAEP,GAAI,6CAEJ,MAAO,6CAEP,IAAK,6CAEL,SAAU,6CAEV,KAAM,6CAEN,KAAM,6CAEN,IAAK,8CAEDC,EAAuB,CAAC,CAC5BC,WAAW,EACXC,OAAQ,CAAC,CACPC,SAAS,EACTC,aAAc,UACdC,KAAM,UACNC,KAAM,YAERD,KAAM,UACNC,KAAM,SACL,CACDJ,OAAQ,CAAC,CACPE,aAAc,QACdC,KAAM,UACNC,KAAM,UAERD,KAAM,iBACNE,QAAS,CAAC,CACRH,aAAc,UACdC,KAAM,GACNC,KAAM,YAERE,gBAAiB,OACjBF,KAAM,YACL,CACDJ,OAAQ,CAAC,CACPE,aAAc,QACdC,KAAM,QACNC,KAAM,UAERD,KAAM,cACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,aAGFG,EAAa,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAKjB,SAAAA,IAAc,IAAAK,EAQX,OARWC,EAAAA,EAAAA,GAAA,KAAAN,GACZK,EAAAF,EAAAI,KAAA,OACAC,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAAAJ,GAAO,kBAAmBL,EAAcU,kBACvDF,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAAAJ,GAAO,KAAM,gBAC5BG,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAAAJ,GAAO,SAAS,IAC/BG,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAAAJ,GAAO,OAAQ,eAE5BA,EAAKM,OAAQ,EACdN,CACH,CAiJyB,OAjJxBO,EAAAA,EAAAA,GAAAZ,EAAA,EAAAa,IAAA,UAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,EAAcC,GAAI,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVJ,EAAKK,MAAMC,WAAWrC,EAA6B,CAAAiC,EAAAE,KAAA,cACjD,IAAIG,MAAM,+BAA8B,cAAAL,EAAAE,KAAA,EAExBI,KAAKC,iBAAiBT,GAAK,OAApC,OAAfQ,KAAKE,WAAUR,EAAAS,KAAAT,EAAAE,KAAG,EACLI,KAAKI,aAAY,cAAAV,EAAAW,OAAA,SAAAX,EAAAS,MAAA,wBAAAT,EAAAY,OAAA,GAAAf,EAAA,UAC/B,gBAAAgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,EAPA,IAOA,CAAAxB,IAAA,mBAAAC,MAAA,eAAAwB,GAAAtB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAqB,EAAuBC,GAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlB,EAAA,OAAAb,EAAAA,EAAAA,KAAAI,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACiB,OAA5CI,KAAKsB,eAAiBV,EAAOU,eAAeD,EAAAzB,KAAA,EACvBgB,EAAOU,eAAeC,YAAW,OAEd,GAFlCV,EAAMQ,EAAAlB,KACNW,EAAcF,EAAOE,YACrBC,EAAcH,EAAOf,MAAMC,QAC5Be,EAAQ,CAAFQ,EAAAzB,KAAA,cACH,IAAIG,MAAM,8DAA6D,cAAAsB,EAAAzB,KAAA,GAEnDiB,EAAOW,aAAY,QAA5B,GAAAH,EAAAlB,OACGY,EAAW,CAAAM,EAAAzB,KAAA,eACzB,IAAIG,MAAM,wDAAuD,WAEpEe,EAAa,CAAFO,EAAAzB,KAAA,eACR,IAAIG,MAAM,2BAA0B,WAEvCgB,EAAa,CAAFM,EAAAzB,KAAA,eACR,IAAIG,MAAM,2BAA0B,QAGmC,GAAzEkB,EAAwBvD,EAAqCqD,IAD7DC,EAAYvD,EAA8BsD,KAE7BE,EAAqB,CAAAI,EAAAzB,KAAA,eAChC,IAAIG,MAAM,uBAAsB,QAKtC,OAHImB,EAAa,IAAIO,IAAJ,CAAkB,CACnCC,OAAAA,EACAC,iBAAkBd,IAClBQ,EAAAzB,KAAA,GACiBgC,IAAAA,OAAmB,CACpCV,WAAYA,EACZJ,YAAAA,IACA,QAqD6C,OAxDzCK,EAAIE,EAAAlB,KAIJiB,EAAU,IAAIS,EAAAA,YAAYb,IAC1Bd,EAAa,IAAI4B,EAAAA,iBAAiBX,EAAMC,EAASP,EAAOkB,WACnDC,YAAW,eAAAC,GAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4C,EAAMC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxD,EAAAA,EAAAA,KAAAI,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAapC,OAXMwC,EAAW,IAAIV,EAAAA,GAAoBT,EAAuBtD,GAC1D0E,EAAOD,EAASW,UAAUC,mBAAmB,cAAe,CAACtB,EAAAA,EAAyBS,KACtFG,EAAKrB,EACG,IACI,EACA,IACF,IACC,EACXsB,EAAWb,EAAAA,EACXc,EAAiBd,EAAAA,EAEvBoB,EAAAlD,KAAA,GACqBuB,EAAK8B,kBAAkB,CAC1CC,oBAAqB,CACnBZ,GAAAA,EACApD,MAZU,IAaViE,UAZc,EAadd,KAAAA,EACAe,QAZY,IAaZC,UAdc,IAedC,SAba,EAcbf,SAAAA,EACAC,eAAAA,KAEF,QAZU,OAANC,EAAMK,EAAA3C,KAAA2C,EAAAlD,KAAG,GAeUuB,EAAKoC,mBAAmBd,GAAO,QAAxC,OAAVC,EAAUI,EAAA3C,KAAA2C,EAAAlD,KAAG,GACSuB,EAAKqC,oBAAoBd,GAAW,QAA7C,OAAbC,EAAaG,EAAA3C,KAAA2C,EAAAlD,KAAG,GAChBwB,EAAQqC,UAAUtC,EAAKf,aAAcsC,EAAYD,EAAQE,GAAc,QAGlE,OAAAG,EAAAnD,KAAA,GAAAmD,EAAAlD,KAAA,GAEiBwB,EAAQsC,iBAAiBhB,GAAW,QAA7C,KAATE,EAASE,EAAA3C,MACDwD,gBAAiB,CAAFb,EAAAlD,KAAA,gBAAAkD,EAAAlD,KAAA,GACN,QADMiD,EACrBhC,EAAOkB,gBAAQ,IAAAc,OAAA,EAAfA,EAAiBe,mBAAmBhB,EAAUe,iBAAgB,eAAAb,EAAAzC,OAAA,oBAAAyC,EAAAlD,KAAA,iBAAAkD,EAAAnD,KAAA,GAAAmD,EAAAe,GAAAf,EAAA,yBAAAA,EAAAlD,KAAA,GAIlE,IAAIkE,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,IAAK,IAAC,QAAAjB,EAAAlD,KAAA,wBAAAkD,EAAAzC,OAAA,SAIlD,MAAI,yBAAAyC,EAAAxC,OAAA,GAAA4B,EAAA,oBACZ,gBAAA+B,GAAA,OAAAhC,EAAAzB,MAAA,KAAAC,UAAA,EA/CqB,GAkDtBT,KAAKkE,kBAAoBtD,EAAOU,eAAeD,EAAAhB,OAAA,SACxCH,GAAU,yBAAAmB,EAAAf,OAAA,GAAAK,EAAA,UAClB,gBAAAwD,GAAA,OAAAzD,EAAAF,MAAA,KAAAC,UAAA,EAtFA,IAsFA,CAAAxB,IAAA,aAAAC,MAAA,eAAAkF,GAAAhF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA+E,IAAA,OAAAhF,EAAAA,EAAAA,KAAAI,MAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,OAEqC,OADnCI,KAAKE,gBAAaqE,EAClBvE,KAAKkE,uBAAoBK,EAAUD,EAAAjE,OAAA,cAC5BkE,GAAS,wBAAAD,EAAAhE,OAAA,GAAA+D,EAAA,UACjB,yBAAAD,EAAA5D,MAAA,KAAAC,UAAA,EALA,IAKA,CAAAxB,IAAA,aAAAC,MAAA,eAAAsF,GAAApF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAmF,IAAA,IAAA5D,EAAA,OAAAxB,EAAAA,EAAAA,KAAAI,MAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EACuBI,KAAKuB,YAAW,OAAzB,OAANV,EAAM6D,EAAAvE,KAAAuE,EAAA9E,KAAG,EACFiB,EAAOT,aAAY,cAAAsE,EAAArE,OAAA,SAAAqE,EAAAvE,MAAA,wBAAAuE,EAAApE,OAAA,GAAAmE,EAAA,UACjC,yBAAAD,EAAAhE,MAAA,KAAAC,UAAA,EAJA,IAIA,CAAAxB,IAAA,aAAAC,MAAA,eAAAyF,GAAAvF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAsF,IAAA,OAAAvF,EAAAA,EAAAA,KAAAI,MAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,cAAAiF,EAAAjF,KAAA,EACgBI,KAAKuB,YAAW,cAAAsD,EAAAxE,OAAA,SAAAwE,EAAA1E,KAAEqB,cAAU,wBAAAqD,EAAAvE,OAAA,GAAAsE,EAAA,UAC3C,yBAAAD,EAAAnE,MAAA,KAAAC,UAAA,EAHA,IAGA,CAAAxB,IAAA,cAAAC,MAAA,eAAA4F,GAAA1F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAyF,IAAA,IAAAhD,EAAA,OAAA1C,EAAAA,EAAAA,KAAAI,MAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAC0BI,KAAKuB,YAAW,OAAU,GAA5CQ,EAAQiD,EAAA7E,KAA4B4B,SAC3B,CAAFiD,EAAApF,KAAA,cACL,IAAIG,MAAM,yBAAwB,cAAAiF,EAAA3E,OAAA,SAEnC0B,GAAQ,wBAAAiD,EAAA1E,OAAA,GAAAyE,EAAA,UAChB,yBAAAD,EAAAtE,MAAA,KAAAC,UAAA,EAPA,IAOA,CAAAxB,IAAA,YAAAC,MAAA,eAAA+F,GAAA7F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA4F,IAAA,OAAA7F,EAAAA,EAAAA,KAAAI,MAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,UACOI,KAAKE,WAAY,CAAFiF,EAAAvF,KAAA,cACZ,IAAIG,MAAM,+CAA8C,cAAAoF,EAAA9E,OAAA,SAEzDL,KAAKE,YAAU,wBAAAiF,EAAA7E,OAAA,GAAA4E,EAAA,UACvB,yBAAAD,EAAAzE,MAAA,KAAAC,UAAA,EANA,IAMA,CAAAxB,IAAA,cAAAC,MAAA,eAAAkG,GAAAhG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA+F,IAAA,IAAAC,EAAA,OAAAjG,EAAAA,EAAAA,KAAAI,MAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAA2F,EAAA5F,KAAA,EAAA4F,EAAA3F,KAAA,EAE0BI,KAAKI,aAAY,OAA1B,OAAPkF,EAAOC,EAAApF,KAAAoF,EAAAlF,OAAA,WACJiF,GAAO,cAAAC,EAAA5F,KAAA,EAAA4F,EAAA1B,GAAA0B,EAAA,SAAAA,EAAAlF,OAAA,UAET,GAAK,yBAAAkF,EAAAjF,OAAA,GAAA+E,EAAA,kBAEf,yBAAAD,EAAA5E,MAAA,KAAAC,UAAA,EARA,IAQA,CAAAxB,IAAA,oBAAAC,MACD,SAAkBsG,GACQ,IAApBA,EAASC,OACXzF,KAAK0F,KAAK,cAENF,EAAS,IACXxF,KAAK0F,KAAK,SAAU,CAClBJ,QAAS5D,EAAAA,WAAwB8D,EAAS,KAIlD,GAAC,CAAAvG,IAAA,eAAAC,MACD,WACEc,KAAK0F,KAAK,aACZ,GAAC,CAAAzG,IAAA,cAAAC,MACD,WACE,MAAM,IAAIa,MAAM,mDAClB,GAAC,CAAAd,IAAA,eAAAC,MACD,WAAgB,GAAC,CAAAD,IAAA,iBAAAC,MAAA,eAAAyG,GAAAvG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACjB,SAAAsG,IAAA,OAAAvG,EAAAA,EAAAA,KAAAI,MAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,wBAAAiG,EAAAvF,OAAA,GAAAsF,EAAA,KAAyB,yBAAAD,EAAAnF,MAAA,KAAAC,UAAA,EADR,MACQrC,CAAA,CA/JR,CAAS0H,EAAAA,IAiK5BlH,EAAAA,EAAAA,GAAgBR,EAAe,kBAAmC,kBAAM2H,OAAOC,KAAKvI,EAA8B,CAAhD,G","sources":["../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { ethers } from 'ethers';\nimport { SafeService, SafeEthersSigner } from '@safe-global/safe-ethers-adapters';\nimport safeCoreSdk from '@safe-global/safe-core-sdk';\nimport safeEthersLib from '@safe-global/safe-ethers-lib';\nimport 'eventemitter3';\n\n// excerpt from https://docs.safe.global/api-supported-networks#safe-transaction-service\nconst CHAIN_ID_TO_GNOSIS_SERVER_URL = {\n  // mainnet\n  1: \"https://safe-transaction-mainnet.safe.global\",\n  // Sepolia\n  11155111: \"https://safe-transaction-sepolia.safe.global\",\n  // optimism\n  10: \"https://safe-transaction-optimism.safe.global\",\n  // bsc\n  56: \"https://safe-transaction-bsc.safe.global\",\n  // gnosis\n  100: \"https://safe-transaction-gnosis-chain.safe.global\",\n  // polygon\n  137: \"https://safe-transaction-polygon.safe.global\",\n  // avalanche\n  43114: \"https://safe-transaction-avalanche.safe.global\",\n  // arbitrum\n  42161: \"https://safe-transaction-arbitrum.safe.global\",\n  // celo\n  42220: \"https://safe-transaction-celo.safe.global\",\n  // Base mainnet\n  8453: \"https://safe-transaction-base.safe.global\",\n  // aurora\n  1313161554: \"https://safe-transaction-aurora.safe.global\",\n  //  Polygon zkEVM\n  1101: \"https://safe-transaction-zkevm.safe.global\",\n  //  ZkSync Mainnet\n  324: \"https://safe-transaction-zksync.safe.global\"\n};\n\nconst CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS = {\n  // mainnet\n  1: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // polygon\n  137: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // bsc\n  56: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // arbitrum\n  42161: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // aurora\n  1313161554: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // avalanche\n  43114: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // optimism\n  10: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // celo\n  42220: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // gnosis chain - https://docs.safe.global/smart-account-supported-networks/v1.3.0#gnosis\n  100: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // Sepolia - https://docs.safe.global/smart-account-supported-networks/v1.3.0#sepolia\n  11155111: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // base mainnet - https://docs.safe.global/smart-account-supported-networks/v1.3.0#base\n  8453: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // Polygon zkEVM - https://docs.safe.global/smart-account-supported-networks/v1.3.0#polygon-zkevm\n  1101: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // ZkSync Mainnet - https://docs.safe.global/smart-account-supported-networks/v1.3.0#zksync-mainnet\n  324: \"0x357147caf9C0cCa67DfA0CF5369318d8193c8407\"\n};\nconst SIGN_MESSAGE_LIB_ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"msgHash\",\n    type: \"bytes32\"\n  }],\n  name: \"SignMsg\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"message\",\n    type: \"bytes\"\n  }],\n  name: \"getMessageHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"signMessage\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst __IS_SERVER__ = \"object\" === \"undefined\";\nclass SafeConnector extends Connector {\n  // config\n\n  // private options: SafeOptions;\n\n  constructor() {\n    super();\n    _defineProperty(this, \"supportedChains\", SafeConnector.supportedChains);\n    _defineProperty(this, \"id\", \"safe-wallet\");\n    _defineProperty(this, \"ready\", !__IS_SERVER__);\n    _defineProperty(this, \"name\", \"Safe Wallet\");\n    {\n      this.ready = true;\n    }\n  }\n  async connect(args) {\n    if (!(args.chain.chainId in CHAIN_ID_TO_GNOSIS_SERVER_URL)) {\n      throw new Error(\"Chain not supported by Safe\");\n    }\n    this.safeSigner = await this.createSafeSigner(args);\n    return await this.getAddress();\n  }\n  async createSafeSigner(params) {\n    this.personalWallet = params.personalWallet;\n    const signer = await params.personalWallet.getSigner();\n    const safeAddress = params.safeAddress;\n    const safeChainId = params.chain.chainId;\n    if (!signer) {\n      throw new Error(\"cannot create Gnosis Safe signer without a personal signer\");\n    }\n    const signerChainId = await signer.getChainId();\n    if (signerChainId !== safeChainId) {\n      throw new Error(\"chainId of personal signer has to match safe chainId\");\n    }\n    if (!safeAddress) {\n      throw new Error(\"safeAddress is required\");\n    }\n    if (!safeChainId) {\n      throw new Error(\"safeChainId is required\");\n    }\n    const serverUrl = CHAIN_ID_TO_GNOSIS_SERVER_URL[safeChainId];\n    const signMessageLibAddress = CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS[safeChainId];\n    if (!serverUrl || !signMessageLibAddress) {\n      throw new Error(\"Chain not supported\");\n    }\n    const ethAdapter = new safeEthersLib({\n      ethers,\n      signerOrProvider: signer\n    });\n    const safe = await safeCoreSdk.create({\n      ethAdapter: ethAdapter,\n      safeAddress\n    });\n    const service = new SafeService(serverUrl);\n    const safeSigner = new SafeEthersSigner(safe, service, signer.provider);\n    safeSigner.signMessage = async message => {\n      // Encode the request to the signMessage function of the SafeMessageLib\n      const contract = new ethers.BaseContract(signMessageLibAddress, SIGN_MESSAGE_LIB_ABI);\n      const data = contract.interface.encodeFunctionData(\"signMessage\", [ethers.utils.hashMessage(message)]);\n      const to = signMessageLibAddress;\n      const value = \"0\";\n      const operation = 1; // 1 indicates a delegatecall\n      const safeTxGas = 50000;\n      const baseGas = 50000;\n      const gasPrice = 0;\n      const gasToken = ethers.constants.AddressZero;\n      const refundReceiver = ethers.constants.AddressZero;\n\n      // Create the safe transaction to approve the signature\n      const safeTx = await safe.createTransaction({\n        safeTransactionData: {\n          to,\n          value,\n          operation,\n          data,\n          baseGas,\n          safeTxGas,\n          gasPrice,\n          gasToken,\n          refundReceiver\n        }\n      });\n\n      // Sign and propose the safe transaction\n      const safeTxHash = await safe.getTransactionHash(safeTx);\n      const safeSignature = await safe.signTransactionHash(safeTxHash);\n      await service.proposeTx(safe.getAddress(), safeTxHash, safeTx, safeSignature);\n\n      // Poll while we wait for the safe transaction to reach minimum confirmations\n      while (true) {\n        try {\n          const txDetails = await service.getSafeTxDetails(safeTxHash);\n          if (txDetails.transactionHash) {\n            await signer.provider?.waitForTransaction(txDetails.transactionHash);\n            break;\n          }\n        } catch (e) {}\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      }\n\n      // For on-chain signatures, safe expects just \"0x\" as the signature\n      return \"0x\";\n    };\n\n    // set the personal signer as \"previous connector\" so that we can re-connect to it later when disconnecting\n    this.previousConnector = params.personalWallet;\n    return safeSigner;\n  }\n  async disconnect() {\n    this.safeSigner = undefined;\n    this.previousConnector = undefined;\n    return undefined;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return await signer.getAddress();\n  }\n  async getChainId() {\n    return (await this.getSigner()).getChainId();\n  }\n  async getProvider() {\n    const provider = (await this.getSigner()).provider;\n    if (!provider) {\n      throw new Error(\"No provider available\");\n    }\n    return provider;\n  }\n  async getSigner() {\n    if (!this.safeSigner) {\n      throw new Error(\"not connected - please call connect() first\");\n    }\n    return this.safeSigner;\n  }\n  async isConnected() {\n    try {\n      const account = await this.getAddress();\n      return !!account;\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: ethers.utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  switchChain() {\n    throw new Error(\"Safe connector does not support switching chains\");\n  }\n  updateChains() {}\n  async setupListeners() {}\n}\n_defineProperty(SafeConnector, \"supportedChains\", /* @__PURE__ */(() => Object.keys(CHAIN_ID_TO_GNOSIS_SERVER_URL))());\n\nexport { SafeConnector };\n"],"names":["CHAIN_ID_TO_GNOSIS_SERVER_URL","CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS","SIGN_MESSAGE_LIB_ABI","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","SafeConnector","_Connector","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","supportedChains","ready","_createClass","key","value","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","wrap","_context","prev","next","chain","chainId","Error","this","createSafeSigner","safeSigner","sent","getAddress","abrupt","stop","_x","apply","arguments","_createSafeSigner","_callee3","params","signer","safeAddress","safeChainId","serverUrl","signMessageLibAddress","ethAdapter","safe","service","_context3","personalWallet","getSigner","getChainId","safeEthersLib","ethers","signerOrProvider","safeCoreSdk","SafeService","SafeEthersSigner","provider","signMessage","_ref","_callee2","message","contract","data","to","gasToken","refundReceiver","safeTx","safeTxHash","safeSignature","txDetails","_signer$provider","_context2","interface","encodeFunctionData","createTransaction","safeTransactionData","operation","baseGas","safeTxGas","gasPrice","getTransactionHash","signTransactionHash","proposeTx","getSafeTxDetails","transactionHash","waitForTransaction","t0","Promise","resolve","setTimeout","_x3","previousConnector","_x2","_disconnect","_callee4","_context4","undefined","_getAddress","_callee5","_context5","_getChainId","_callee6","_context6","_getProvider","_callee7","_context7","_getSigner","_callee8","_context8","_isConnected","_callee9","account","_context9","accounts","length","emit","_setupListeners","_callee10","_context10","Connector","Object","keys"],"sourceRoot":""}