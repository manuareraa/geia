{"version":3,"file":"static/js/3141.c4761917.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { utils } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { E as EmbeddedWalletSdk, U as UserWalletStatus, c as AuthProvider } from '../../../../dist/embedded-wallet-9c935e47.browser.esm.js';\nimport 'eventemitter3';\nimport '@paperxyz/sdk-common-utilities';\nimport 'ethers/lib/utils';\nimport '@thirdweb-dev/sdk';\n\nclass EmbeddedWalletConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", walletIds.paper);\n    _defineProperty(this, \"name\", \"Embedded Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"user\", null);\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getEmbeddedWalletSDK() {\n    if (!this._embeddedWalletSdk) {\n      this._embeddedWalletSdk = new EmbeddedWalletSdk({\n        clientId: this.options.clientId,\n        chain: \"Ethereum\",\n        onAuthSuccess: this.options.onAuthSuccess\n      });\n    }\n    return this._embeddedWalletSdk;\n  }\n  async connect(args) {\n    // backwards compatibility - options should really be required here\n    if (!args) {\n      // default to iframe flow\n      const result = await this.authenticate({\n        strategy: \"iframe\"\n      });\n      if (!result.user) {\n        throw new Error(\"Error connecting User\");\n      }\n      this.user = result.user;\n    } else {\n      if (!args.authResult) {\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\n      }\n      if (!args.authResult.user) {\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\n      }\n      this.user = args.authResult.user;\n    }\n    if (args?.chainId) {\n      this.switchChain(args.chainId);\n    }\n    return this.getAddress();\n  }\n  async disconnect() {\n    const paper = this._embeddedWalletSdk;\n    await paper?.auth.logout();\n    this._signer = undefined;\n    this._embeddedWalletSdk = undefined;\n    this.user = null;\n  }\n  async getAddress() {\n    if (!this.user) {\n      throw new Error(\"Embedded Wallet is not connected\");\n    }\n    return await this.getSigner().then(signer => signer.getAddress());\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (this._signer) {\n      return this._signer;\n    }\n    const user = await this.getUser();\n    const signer = await user.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n    });\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    this._signer = signer;\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n    try {\n      // update chain in wallet\n      await this.user?.wallet.setChain({\n        chain: \"Ethereum\"\n      }); // just pass Ethereum no matter what chain we are going to connect\n      // update signer\n      this._signer = await this.user?.wallet.getEthersJsSigner({\n        rpcEndpoint: chain.rpc[0] || \"\"\n      });\n      this.emit(\"change\", {\n        chain: {\n          id: chainId,\n          unsupported: false\n        }\n      });\n    } catch (e) {\n      console.warn(\"Failed to switch chain\", e);\n    }\n  }\n  async setupListeners() {\n    return Promise.resolve();\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  async getUser() {\n    if (!this.user || !this.user.wallet || !this.user.wallet.getEthersJsSigner // when serializing, functions are lost, need to rehydrate\n    ) {\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\n      const user = await embeddedWalletSdk.getUser();\n      switch (user.status) {\n        case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n        default:\n          {\n            // if logged out or unitialized, we can't get a signer, so throw an error\n            throw new Error(\"Embedded Wallet is not authenticated, please authenticate first\");\n          }\n      }\n    }\n    return this.user;\n  }\n  async getEmail() {\n    const user = await this.getUser();\n    return user.authDetails.email;\n  }\n  async getPhoneNumber() {\n    const user = await this.getUser();\n    return user.authDetails.phoneNumber;\n  }\n  async getRecoveryInformation() {\n    const user = await this.getUser();\n    return user.authDetails;\n  }\n  async sendVerificationEmail(_ref) {\n    let {\n      email\n    } = _ref;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendVerificationSms(_ref2) {\n    let {\n      phoneNumber\n    } = _ref2;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n  async authenticate(params) {\n    const ewSDK = this.getEmbeddedWalletSDK();\n    const strategy = params.strategy;\n    switch (strategy) {\n      case \"email_verification\":\n        {\n          return await ewSDK.auth.verifyEmailLoginOtp({\n            email: params.email,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"phone_number_verification\":\n        {\n          return await ewSDK.auth.verifySmsLoginOtp({\n            phoneNumber: params.phoneNumber,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"apple\":\n      case \"facebook\":\n      case \"google\":\n        {\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\n          return ewSDK.auth.loginWithOauth({\n            oauthProvider,\n            closeOpenedWindow: params.closeOpenedWindow,\n            openedWindow: params.openedWindow\n          });\n        }\n      case \"jwt\":\n        {\n          return ewSDK.auth.loginWithCustomJwt({\n            jwt: params.jwt,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"auth_endpoint\":\n        {\n          return ewSDK.auth.loginWithCustomAuthEndpoint({\n            payload: params.payload,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"iframe_email_verification\":\n        {\n          return ewSDK.auth.loginWithEmailOtp({\n            email: params.email\n          });\n        }\n      case \"iframe\":\n        {\n          return ewSDK.auth.loginWithModal();\n        }\n      default:\n        assertUnreachable(strategy);\n    }\n  }\n}\nfunction assertUnreachable(x) {\n  throw new Error(\"Invalid param: \" + x);\n}\nconst oauthStrategyToAuthProvider = {\n  google: AuthProvider.GOOGLE,\n  facebook: AuthProvider.FACEBOOK,\n  apple: AuthProvider.APPLE\n};\n\nexport { EmbeddedWalletConnector };\n"],"names":["EmbeddedWalletConnector","_Connector","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","walletIds","paper","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accounts","wrap","_context","prev","next","length","onDisconnect","emit","account","utils","stop","_x","apply","arguments","chainId","id","normalizeChainId","unsupported","chains","findIndex","c","chain","_callee2","_context2","_createClass","key","value","this","_embeddedWalletSdk","EmbeddedWalletSdk","clientId","onAuthSuccess","_connect","_callee3","args","result","_context3","authenticate","strategy","sent","user","Error","authResult","switchChain","abrupt","getAddress","_x2","_disconnect","_callee4","_context4","auth","logout","_signer","undefined","_getAddress","_callee5","_context5","getSigner","then","signer","_isConnected","_callee6","addr","_context6","t0","_getProvider","_callee7","_context7","provider","_getSigner","_callee8","_context8","getUser","wallet","getEthersJsSigner","rpcEndpoint","rpc","_isAuthorized","_callee9","_context9","_switchChain","_callee10","_this$user","_this$user2","_context10","find","setChain","console","warn","_x3","_setupListeners","_callee11","_context11","Promise","resolve","_getUser","_callee12","embeddedWalletSdk","_context12","getEmbeddedWalletSDK","status","UserWalletStatus","LOGGED_IN_WALLET_INITIALIZED","_getEmail","_callee13","_context13","authDetails","email","_getPhoneNumber","_callee14","_context14","phoneNumber","_getRecoveryInformation","_callee15","_context15","_sendVerificationEmail","_callee16","_ref","ewSDK","_context16","sendEmailLoginOtp","_x4","_sendVerificationSms","_callee17","_ref2","_context17","sendSmsLoginOtp","_x5","_authenticate","_callee18","params","oauthProvider","_context18","verifyEmailLoginOtp","otp","verificationCode","recoveryCode","verifySmsLoginOtp","oauthStrategyToAuthProvider","loginWithOauth","closeOpenedWindow","openedWindow","loginWithCustomJwt","jwt","encryptionKey","loginWithCustomAuthEndpoint","payload","loginWithEmailOtp","loginWithModal","assertUnreachable","_x6","Connector","x","google","AuthProvider","GOOGLE","facebook","FACEBOOK","apple","APPLE"],"sourceRoot":""}