{"version":3,"file":"static/js/7806.068f277d.chunk.js","mappings":";8hBAAA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAEAI,EAAAJ,EAAA,OASAK,EAAAL,EAAA,OACAM,EAAAN,EAAA,OACAO,EAAAP,EAAA,OAIMQ,EAAMC,OAAO,GAWNC,EAAO,WAqClB,SAAAA,IAA8F,IAAlFC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGJ,EAAKO,EAAOH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGJ,EAAKQ,EAAWJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGP,EAAAY,cAAeC,EAAQN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGP,EAAAc,eAAcC,EAAA,KAAAV,GAC5FW,KAAKV,MAAQA,EACbU,KAAKN,QAAUA,EACfM,KAAKL,YAAcA,EACnBK,KAAKH,SAAWA,EAEhBG,KAAKC,WACP,CAbC,OAaAC,EAAAb,EAAA,EAAAc,IAAA,YAAAC,MAEO,WACN,GAAIJ,KAAKV,MAAQH,EACf,MAAM,IAAIkB,MAAM,mCAElB,GAAIL,KAAKN,QAAUP,EACjB,MAAM,IAAIkB,MAAM,qCAElB,GAAgC,KAA5BL,KAAKL,YAAYH,OACnB,MAAM,IAAIa,MAAM,wCAElB,GAA6B,KAAzBL,KAAKH,SAASL,OAChB,MAAM,IAAIa,MAAM,oCAEpB,GAEA,CAAAF,IAAA,MAAAC,MAGA,WACE,MAAO,EACL,EAAArB,EAAAuB,wBAAuBN,KAAKV,QAC5B,EAAAP,EAAAuB,wBAAuBN,KAAKN,SAC5BM,KAAKL,YACLK,KAAKH,SAET,GAEA,CAAAM,IAAA,YAAAC,MAGA,WACE,OAAOG,OAAOC,KAAK9B,EAAA+B,IAAIC,QAAO,EAAA3B,EAAA4B,aAAYX,KAAKY,QACjD,GAEA,CAAAT,IAAA,aAAAC,MAGA,WACE,OAAQJ,KAAKH,SAASgB,OAAO7B,EAAAc,eAC/B,GAEA,CAAAK,IAAA,UAAAC,MAKA,WACE,OAAOJ,KAAKN,UAAYP,GAAOa,KAAKV,QAAUH,GAAOa,KAAKH,SAASgB,OAAO7B,EAAAc,eAC5E,IAAC,EAAAK,IAAA,kBAAAC,MAxFD,SAAuBU,GACrB,IAAQxB,EAA0CwB,EAA1CxB,MAAOI,EAAmCoB,EAAnCpB,QAASC,EAA0BmB,EAA1BnB,YAAaE,EAAaiB,EAAbjB,SAErC,OAAO,IAAIR,OACCI,IAAVH,GAAsB,EAAAP,EAAAgC,iBAAe,EAAAhC,EAAAiC,UAAS1B,SAAUG,OAC5CA,IAAZC,GAAwB,EAAAX,EAAAgC,iBAAe,EAAAhC,EAAAiC,UAAStB,SAAYD,OAC5CA,IAAhBE,GAA4B,EAAAZ,EAAAiC,UAASrB,QAAeF,OACvCA,IAAbI,GAAyB,EAAAd,EAAAiC,UAASnB,QAAYJ,EAElD,GAAC,CAAAU,IAAA,2BAAAC,MAEM,SAAgCa,GACrC,IAAMC,GAAS,EAAAnC,EAAAoC,aAAYzC,EAAA+B,IAAIW,OAAOC,WAAWb,KAAKS,KAEtD,IAAKK,MAAMC,QAAQL,GACjB,MAAM,IAAIb,MAAM,mDAGlB,OAAOL,KAAKwB,gBAAgBN,EAC9B,GAAC,CAAAf,IAAA,kBAAAC,MAEM,SAAuBc,GAC5B,IAAAO,EAAAC,EAAgDR,EAAM,GAA/C5B,EAAKmC,EAAA,GAAE/B,EAAO+B,EAAA,GAAE9B,EAAW8B,EAAA,GAAE5B,EAAQ4B,EAAA,GAE5C,OAAO,IAAIpC,GAAQ,EAAAN,EAAAgC,gBAAezB,IAAQ,EAAAP,EAAAgC,gBAAerB,GAAUC,EAAaE,EAClF,KAACR,CAAA,CA/BiB,GAApBsC,EAAAA,QAAAtC,EAoGasC,EAAAA,eAAiB,SAAUC,GACtC,KACE,EAAA3C,EAAA4C,gBAAeD,GACf,MAAOE,GACP,OAAO,EAGT,MAAO,sBAAsBC,KAAKH,EACpC,EAcaD,EAAAA,kBAAoB,SAC/BC,EACAI,IAEA,EAAA/C,EAAAgD,mBAAkBL,GAClB,IAAMM,GAAU,EAAAhD,EAAAiD,gBAAeP,GAAYQ,cAEvCC,EAAS,QACU5C,IAAnBuC,IAEFK,GADgB,EAAAtD,EAAAgC,iBAAe,EAAAhC,EAAAiC,UAASgB,IACvBM,WAAa,MAOhC,IAJA,IAAMC,EAAMhC,OAAOC,KAAK6B,EAASH,EAAS,QACpCM,GAAO,EAAA1D,EAAA2D,aAAW,EAAA7D,EAAA8D,WAAUH,IAC9BI,EAAM,KAEDC,EAAI,EAAGA,EAAIV,EAAQ1C,OAAQoD,IAC9BC,SAASL,EAAKI,GAAI,KAAO,EAC3BD,GAAOT,EAAQU,GAAGE,cAElBH,GAAOT,EAAQU,GAInB,OAAOD,CACT,EAOahB,EAAAA,uBAAyB,SACpCC,EACAI,GAEA,OAAO,EAAAL,EAAAoB,gBAAenB,KAAe,EAAAD,EAAAqB,mBAAkBpB,EAAYI,KAAoBJ,CACzF,EAOaD,EAAAA,gBAAkB,SAAUnB,EAAclB,GAIrD,OAHA,EAAAL,EAAAgE,gBAAezC,IACf,EAAAvB,EAAAgE,gBAAe3D,IAEX,EAAAP,EAAAgC,gBAAezB,KAAWF,OAAO,GAG5BmB,OAAOC,MAAK,EAAA5B,EAAA8D,WAAUhE,EAAA+B,IAAIC,QAAO,EAAA3B,EAAA4B,aAAY,CAACH,EAAM,UAAiB0C,OAAO,IAI9E3C,OAAOC,MAAK,EAAA5B,EAAA8D,WAAUhE,EAAA+B,IAAIC,QAAO,EAAA3B,EAAA4B,aAAY,CAACH,EAAMlB,OAAW4D,OAAO,GAC/E,EAQavB,EAAAA,iBAAmB,SAAUnB,EAAc2C,EAAcC,GAKpE,IAJA,EAAAnE,EAAAgE,gBAAezC,IACf,EAAAvB,EAAAgE,gBAAeE,IACf,EAAAlE,EAAAgE,gBAAeG,GAEK,KAAhB5C,EAAKhB,OACP,MAAM,IAAIa,MAAM,oCAElB,GAAoB,KAAhB8C,EAAK3D,OACP,MAAM,IAAIa,MAAM,oCAGlB,IAAM6B,GAAU,EAAAtD,EAAA8D,WACdnC,OAAO8C,OAAO,CAAC9C,OAAOC,KAAK,KAAM,OAAQA,EAAM2C,GAAM,EAAAvE,EAAA8D,WAAUU,MAGjE,OAAO,EAAArE,EAAAiC,UAASkB,GAASgB,OAAO,GAClC,EAKavB,EAAAA,eAAiB,SAAU2B,GACtC,OAAOzE,EAAA0E,UAAUC,MAAMC,kBAAkBH,EAC3C,EAQa3B,EAAAA,cAAgB,SAAU+B,GAA4C,IAAzBC,EAAApE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAExD,IADA,EAAAN,EAAAgE,gBAAeS,GACU,KAArBA,EAAUlE,OAGZ,IAEE,OADAX,EAAA0E,UAAUK,gBAAgBC,QAAQtD,OAAO8C,OAAO,CAAC9C,OAAOC,KAAK,CAAC,IAAKkD,MAC5D,EACP,MAAO5B,GACP,OAAO,EAIX,IAAK6B,EACH,OAAO,EAGT,IAEE,OADA9E,EAAA0E,UAAUK,gBAAgBC,QAAQH,IAC3B,EACP,MAAO5B,GACP,OAAO,EAEX,EAQaH,EAAAA,aAAe,SAAUmC,GAAyC,IAAzBH,EAAApE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAKpD,IAJA,EAAAN,EAAAgE,gBAAea,GACXH,GAA8B,KAAlBG,EAAOtE,SACrBsE,EAASvD,OAAOC,KAAK3B,EAAA0E,UAAUK,gBAAgBC,QAAQC,GAAQC,YAAW,GAAOb,MAAM,KAEnE,KAAlBY,EAAOtE,OACT,MAAM,IAAIa,MAAM,sCAGlB,OAAOE,OAAOC,MAAK,EAAA5B,EAAA8D,WAAUoB,IAASZ,OAAO,GAC/C,EACavB,EAAAA,gBAAkBA,EAAAqC,aAMlBrC,EAAAA,gBAAkB,SAAU2B,GAGvC,OAFA,EAAArE,EAAAgE,gBAAeK,GAER/C,OAAOC,KACZ3B,EAAA0E,UAAUK,gBAAgBK,eAAeX,GAAYS,YAAW,GAAOb,MAAM,GAEjF,EAMavB,EAAAA,iBAAmB,SAAU2B,GACxC,OAAO,EAAA3B,EAAAuC,kBAAgB,EAAAvC,EAAAwC,iBAAgBb,GACzC,EAKa3B,EAAAA,aAAe,SAAU+B,GAKpC,OAJA,EAAAzE,EAAAgE,gBAAeS,GACU,KAArBA,EAAUlE,SACZkE,EAAYnD,OAAOC,KAAK3B,EAAA0E,UAAUK,gBAAgBC,QAAQH,GAAWK,YAAW,GAAOb,MAAM,KAExFQ,CACT,EAKa/B,EAAAA,YAAc,WACzB,IACMyC,GAAO,EAAArF,EAAAsF,OADS,IAEtB,OAAO,EAAAtF,EAAAuF,aAAYF,EACrB,EAgBA,SAAgBG,EAAoBC,GAClC,IAAAC,EAAA/C,EAAgD8C,EAAI,GAA7ClF,EAAKmF,EAAA,GAAE/E,EAAO+E,EAAA,GAAE9E,EAAW8E,EAAA,GAAE5E,EAAQ4E,EAAA,GAC5C,MAAO,CACLnF,EACAI,EACoC,KAApC,EAAAX,EAAAoC,aAAYxB,GAAaH,OAAeR,EAAAY,cAAgBD,EACvB,KAAjC,EAAAZ,EAAAoC,aAAYtB,GAAUL,OAAeR,EAAAc,eAAiBD,EAE1D,CAnBa8B,EAAAA,cAAgB,SAAUC,GACrC,KACE,EAAA3C,EAAA4C,gBAAeD,GACf,MAAOE,GACP,OAAO,EAIT,OADiB,EAAAH,EAAA+C,iBACG9C,CACtB,EAEAD,EAAAA,oBAAA4C,EAUA,IAAMI,EAAgB,IAAItD,WAAW,GACrCM,EAAAA,kBAAA,SAAkC6C,GAChC,IAAAI,EAAAlD,EAAgD8C,EAAI,GAA7ClF,EAAKsF,EAAA,GAAElF,EAAOkF,EAAA,GAAEjF,EAAWiF,EAAA,GAAE/E,EAAQ+E,EAAA,GAC5C,MAAO,CACLtF,EACAI,GACA,EAAAX,EAAAoC,aAAYxB,GAAakB,OAAO7B,EAAAY,eAAiB+E,EAAgBhF,GACjE,EAAAZ,EAAAoC,aAAYtB,GAAUgB,OAAO7B,EAAAc,gBAAkB6E,EAAgB9E,EAEnE,EAOA8B,EAAAA,iBAAA,SAAiC6C,GAA2C,IACpEK,IAD6DtF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACjCgF,EAAoBC,GAAQA,EAC9D,OAAO,EAAAzF,EAAAoC,aAAYzC,EAAA+B,IAAIC,OAAOmE,GAChC,kJCzXA,IAAAC,EAAAnG,EAAA,OAOAI,EAAAJ,EAAA,OAKaoG,EAAO,WAGlB,SAAAA,EAAYxC,GACV,GADqBxC,EAAA,KAAAgF,GACF,KAAfxC,EAAI/C,OACN,MAAM,IAAIa,MAAM,0BAElBL,KAAKuC,IAAMA,CACb,CAsEC,OApEDrC,EAAA6E,EAAA,EAAA5E,IAAA,SAAAC,MAyEA,SAAO8B,GACL,OAAOlC,KAAKuC,IAAI1B,OAAOqB,EAAQK,IACjC,GAEA,CAAApC,IAAA,SAAAC,MAGA,WACE,OAAOJ,KAAKa,OAAOkE,EAAQC,OAC7B,GAEA,CAAA7E,IAAA,8BAAAC,MAIA,WACE,IAAM8B,GAAU,EAAAnD,EAAAgC,gBAAef,KAAKuC,KAC9B0C,EAAW7F,OAAO,GAClB8F,EAAW9F,OAAO,UACxB,OAAO8C,GAAW+C,GAAY/C,GAAWgD,CAC3C,GAEA,CAAA/E,IAAA,WAAAC,MAGA,WACE,MAAO,KAAOJ,KAAKuC,IAAID,SAAS,MAClC,GAEA,CAAAnC,IAAA,WAAAC,MAGA,WACE,OAAOG,OAAOC,KAAKR,KAAKuC,IAC1B,IAAC,EAAApC,IAAA,OAAAC,MAxGD,WACE,OAAO,IAAI2E,GAAQ,EAAAhG,EAAAsF,OAAM,IAC3B,GAEA,CAAAlE,IAAA,aAAAC,MAIA,SAAkB+E,GAChB,KAAK,EAAAL,EAAA/B,gBAAeoC,GAClB,MAAM,IAAI9E,MAAM,mBAElB,OAAO,IAAI0E,GAAQ,EAAAhG,EAAAiC,UAASmE,GAC9B,GAEA,CAAAhF,IAAA,gBAAAC,MAIA,SAAqB0D,GACnB,IAAKvD,OAAO6E,SAAStB,GACnB,MAAM,IAAIzD,MAAM,+BAGlB,OAAO,IAAI0E,GADC,EAAAD,EAAAd,cAAaF,GAE3B,GAEA,CAAA3D,IAAA,iBAAAC,MAIA,SAAsBkD,GACpB,IAAK/C,OAAO6E,SAAS9B,GACnB,MAAM,IAAIjD,MAAM,gCAGlB,OAAO,IAAI0E,GADC,EAAAD,EAAAO,kBAAiB/B,GAE/B,GAEA,CAAAnD,IAAA,WAAAC,MAKA,SAAgBI,EAAelB,GAC7B,GAAqB,kBAAVA,EACT,MAAM,IAAIe,MAAM,iCAElB,OAAO,IAAI0E,GAAQ,EAAAD,EAAAQ,iBAAgB9E,EAAK+B,KAAK,EAAAxD,EAAAwG,gBAAejG,IAC9D,GAEA,CAAAa,IAAA,YAAAC,MAMA,SAAiBI,EAAe2C,EAAcC,GAC5C,IAAK7C,OAAO6E,SAASjC,GACnB,MAAM,IAAI9C,MAAM,gCAElB,IAAKE,OAAO6E,SAAShC,GACnB,MAAM,IAAI/C,MAAM,oCAElB,OAAO,IAAI0E,GAAQ,EAAAD,EAAAU,kBAAiBhF,EAAK+B,IAAKY,EAAMC,GACtD,KAAC2B,CAAA,CA9EiB,GAApBpD,EAAAA,QAAAoD,sCCZA,IAAAU,EAAA9G,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAA+G,EAAA/G,EAAAA,OAAAA,QAAAgH,EAAAhH,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoH,EAAApH,EAAAA,OAAAA,QAiB0B,SAAAqH,IA6BzB,OA7ByBA,EAAAF,EAAAL,IAAAQ,MAA1B,SAAAC,EACEC,EACAC,EACAC,GAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnB,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAT,GAAA,EAAAC,GAAA,EAAAM,EAAAC,KAAA,EAAAL,EAAAjB,IAAAQ,MAAA,SAAAS,IAAA,IAAAO,EAAA,OAAAxB,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAGQ,GAAJC,EAAIL,EAAAxG,MAAA8G,EAAAH,KAAA,IAEbE,EAAKzH,OAAS,GAAC,CAAA0H,EAAAF,KAAA,QAEjBC,EAAKE,KAAKhB,EAASE,GAAKa,EAAAF,KAAA,sBAAAE,EAAAF,KAAA,EAElB,IAAII,SAAc,SAACC,EAASC,GAChCL,EAAKE,KAAKhB,EAASE,GAAM,SAACC,GACpBA,EACFgB,EAAOhB,GAEPe,GAEJ,GACF,IAAE,OAAAH,EAAAF,KAAA,iBAAAE,EAAAH,KAAA,GAAAG,EAAAK,GAAAL,EAAA,SAGJZ,EAAKY,EAAAK,GAAa,yBAAAL,EAAAM,OAAA,GAAAd,EAAA,kBAAAC,EAAAZ,EAjBGK,GAAK,cAAAU,EAAAE,KAAA,EAAAL,EAAAK,OAAA,YAAAT,IAAAK,EAAAE,EAAAW,MAAAC,MAAA,CAAAZ,EAAAE,KAAA,gBAAAF,EAAAa,cAAAjB,IAAA,eAAAH,GAAA,EAAAO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAAAN,GAAA,EAAAC,EAAAK,EAAAc,GAAA,WAAAd,EAAAC,KAAA,GAAAD,EAAAC,KAAA,IAAAR,GAAA,MAAAI,EAAAkB,OAAA,CAAAf,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAAAL,EAAAkB,SAAA,WAAAf,EAAAC,KAAA,IAAAP,EAAE,CAAFM,EAAAE,KAAA,eAAAP,EAAA,eAAAK,EAAAgB,OAAA,mBAAAhB,EAAAgB,OAAA,gBAoB1BxB,EAAO,CAAFQ,EAAAE,KAAA,eACDV,EAAK,yBAAAQ,EAAAU,OAAA,GAAAtB,EAAA,sCAEd6B,MAAA,KAAAxI,UAAA,iFAEYyI,EAAsC,SAAAC,GAAArC,EAAAoC,EAAAC,GAAA,IAAAC,EAAArC,EAAAmC,GAAA,SAAAA,IAAA,OAAAjI,EAAA,KAAAiI,GAAAE,EAAAH,MAAA,KAAAxI,UAAA,CAkKhD,OAlKgDW,EAAA8H,EAAA,EAAA7H,IAAA,OAAAC,MACjD,SAAwB+H,GAA4C,QAAAC,EAAAC,EAAA9I,UAAAC,OAAtB8I,EAAsB,IAAAhH,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAtBD,EAAsBC,EAAA,GAAAhJ,UAAAgJ,GAClE,IAAKlC,EAAkBiC,EAAI,GAAhBE,EAAYF,EAAI,GACrBG,EAAOzI,KAET0I,EAAwC,QAA/BN,EAAIK,EAAaE,QAAQR,UAAM,IAAAC,EAAAA,EAAI,GAsBhD,YAnBiB3I,IAAb+I,GAA0C,oBAATnC,IACnCmC,EAAWnC,EACXA,OAAO5G,GAIK,gBAAV0I,GAAqC,mBAAVA,IAC7B9B,EAAO,CACL8B,MAAO9B,EACPuC,GAAIJ,GAGNA,OAAW/I,GA3DoB,SAQXoJ,EAAAC,EAAAC,GAAA,OAAA/C,EAAA+B,MAAC,KAADxI,UAAA,CAwDtByJ,CAAYP,GADZC,EAAYpH,MAAMC,QAAQmH,GAAaA,EAAY,CAACA,IACxBxF,QAASmD,GAAM4C,KAAKT,GAAUU,MAAMV,GAEzDC,EAAKU,cAAchB,GAAS,CACrC,GAAC,CAAAhI,IAAA,OAAAC,MAED,SAAwB+H,EAAmBiB,GACzC,IACIC,EADEZ,EAAOzI,KAGb,GAAwB,oBAAboJ,EACT,MAAM,IAAIE,UAAU,+BAkBtB,OAbED,EADED,EAAS5J,QAAU,EACjB,SAAUsC,EAAMkF,GAClByB,EAAKc,eAAepB,EAAOkB,GACtBD,EAAStH,EAAGkF,EACnB,EAEI,SAAUlF,GACZ2G,EAAKc,eAAepB,EAAOkB,GACtBD,EAAStH,EAAGuH,EACnB,EAGFZ,EAAKe,GAAGrB,EAAOkB,GAERZ,CACT,GAAC,CAAAtI,IAAA,QAAAC,MAED,SAAyB+H,EAAmBiB,GAAc,IAAAK,EACpDf,EAAwC,QAA/Be,EAAIzJ,KAAa2I,QAAQR,UAAM,IAAAsB,EAAAA,EAAI,GAGhD,GAAwB,oBAAbL,EACT,MAAM,IAAIE,UAAU,+BAUtB,OANKhI,MAAMC,QAAQmH,KACf1I,KAAa2I,QAAQR,GAASO,EAAY,CAACA,IAG/CA,EAAUgB,QAAQN,GAEXpJ,IACT,GAAC,CAAAG,IAAA,SAAAC,MAED,SAA0B+H,EAAmBwB,EAAcP,GACzD,OAAOpJ,KAAK4J,cAAczB,EAAOwB,EAAQP,EAC3C,GAAC,CAAAjJ,IAAA,QAAAC,MAED,SAAyB+H,EAAmBwB,EAAcP,GACxD,OAAOpJ,KAAK4J,cAAczB,EAAOwB,EAAQP,EAAU,QACrD,GAAC,CAAAjJ,IAAA,gBAAAC,MAEO,SACN+H,EACAwB,EACAP,EACAQ,GAAsB,IAAAC,EAGlBjH,EACAkH,EAFApB,EAAwC,QAA/BmB,EAAI7J,KAAa2I,QAAQR,UAAM,IAAA0B,EAAAA,EAAI,GAG1CE,EAAwB,UAAlBH,EAA4B,EAAI,EAG5C,GAAwB,oBAAbR,EACT,MAAM,IAAIE,UAAU,+BAEtB,GAAsB,oBAAXK,EACT,MAAM,IAAIL,UAAU,6BAUtB,IANKhI,MAAMC,QAAQmH,KACf1I,KAAa2I,QAAQR,GAASO,EAAY,CAACA,IAG/CoB,EAAQpB,EAAUlJ,OAEboD,EAAI8F,EAAUlJ,OAAQoD,KACzB,GAAI8F,EAAU9F,KAAO+G,EAAQ,CAC3BG,EAAQlH,EAAImH,EACZ,MAMJ,OAFArB,EAAUsB,OAAOF,EAAO,EAAGV,GAEpBpJ,IACT,GAAC,CAAAG,IAAA,KAAAC,MAED,SAAsB+H,EAAmBiB,GACvC,OAAA1D,EAAAC,EAAAqC,EAAAiC,WAAA,WAAA9C,KAAA,KAAgBgB,EAAOiB,EACzB,GAAC,CAAAjJ,IAAA,cAAAC,MAED,SAA+B+H,EAAmBiB,GAChD,OAAA1D,EAAAC,EAAAqC,EAAAiC,WAAA,oBAAA9C,KAAA,KAAyBgB,EAAOiB,EAClC,GAAC,CAAAjJ,IAAA,kBAAAC,MAED,SAAmC+H,EAAmBiB,GACpD,OAAA1D,EAAAC,EAAAqC,EAAAiC,WAAA,wBAAA9C,KAAA,KAA6BgB,EAAOiB,EACtC,GAAC,CAAAjJ,IAAA,sBAAAC,MAED,SAAuC+H,EAAmBiB,GACxD,OAAA1D,EAAAC,EAAAqC,EAAAiC,WAAA,4BAAA9C,KAAA,KAAiCgB,EAAOiB,EAC1C,GAAC,CAAAjJ,IAAA,qBAAAC,MAED,SAAmB+H,GACjB,OAAAzC,EAAAC,EAAAqC,EAAAiC,WAAA,2BAAA9C,KAAA,KAAgCgB,EAClC,GAAC,CAAAhI,IAAA,iBAAAC,MAED,SAAkC+H,EAAmBiB,GACnD,OAAA1D,EAAAC,EAAAqC,EAAAiC,WAAA,uBAAA9C,KAAA,KAA4BgB,EAAOiB,EACrC,GAAC,CAAAjJ,IAAA,aAAAC,MAED,WACE,OAAAsF,EAAAC,EAAAqC,EAAAiC,WAAA,mBAAA9C,KAAA,KACF,GAAC,CAAAhH,IAAA,YAAAC,MAED,SAA6B+H,GAC3B,OAAAzC,EAAAC,EAAAqC,EAAAiC,WAAA,kBAAA9C,KAAA,KAAuBgB,EACzB,GAAC,CAAAhI,IAAA,gBAAAC,MAED,SAAc+H,GACZ,OAAAzC,EAAAC,EAAAqC,EAAAiC,WAAA,sBAAA9C,KAAA,KAA2BgB,EAC7B,GAAC,CAAAhI,IAAA,kBAAAC,MAED,WACE,OAAAsF,EAAAC,EAAAqC,EAAAiC,WAAA,wBAAA9C,KAAA,KACF,GAAC,CAAAhH,IAAA,kBAAAC,MAED,SAAgB8J,GACd,OAAAxE,EAAAC,EAAAqC,EAAAiC,WAAA,wBAAA9C,KAAA,KAA6B+C,EAC/B,KAAClC,CAAA,CAlKgD,CAvCnDrJ,EAAA,OAuC2DwL,cAA3DxI,EAAAA,kBAAAqG,oeChDA,IAAA/I,EAAAN,EAAA,OACAO,EAAAP,EAAA,OAeagD,EAAAA,SAAW,SAAUiB,GAChC,IAAKwH,OAAOC,cAAczH,IAAMA,EAAI,EAClC,MAAM,IAAIvC,MAAM,qCAADgD,OAAsCT,IAEvD,MAAO,KAAPS,OAAYT,EAAEN,SAAS,IACzB,EAOaX,EAAAA,YAAc,SAAUiB,GACnC,IAAM0H,GAAM,EAAA3I,EAAA4I,UAAS3H,GACrB,OAAOrC,OAAOC,MAAK,EAAAtB,EAAAsL,WAAUF,EAAIpH,MAAM,IAAK,MAC9C,EAMavB,EAAAA,MAAQ,SAAU8I,GAC7B,OAAOlK,OAAOmK,YAAYD,GAAOE,KAAK,EACxC,EAUA,IAAMC,EAAY,SAAUC,EAAarL,EAAgBsL,GACvD,IAAMvI,GAAM,EAAAZ,EAAA0C,OAAM7E,GAClB,OAAIsL,EACED,EAAIrL,OAASA,GACfqL,EAAIE,KAAKxI,GACFA,GAEFsI,EAAI3H,MAAM,EAAG1D,GAEhBqL,EAAIrL,OAASA,GACfqL,EAAIE,KAAKxI,EAAK/C,EAASqL,EAAIrL,QACpB+C,GAEFsI,EAAI3H,OAAO1D,EAEtB,EASamC,EAAAA,cAAgB,SAAUkJ,EAAarL,GAElD,OADA,EAAAP,EAAAgE,gBAAe4H,GACRD,EAAUC,EAAKrL,GAAQ,EAChC,EASamC,EAAAA,eAAiB,SAAUkJ,EAAarL,GAEnD,OADA,EAAAP,EAAAgE,gBAAe4H,GACRD,EAAUC,EAAKrL,GAAQ,EAChC,EAOA,IAAMwL,EAAa,SAAUC,GAE3B,IADA,IAAIC,EAAQD,EAAE,GACPA,EAAEzL,OAAS,GAA0B,MAArB0L,EAAM5I,YAE3B4I,GADAD,EAAIA,EAAE/H,MAAM,IACF,GAEZ,OAAO+H,CACT,EAOatJ,EAAAA,YAAc,SAAUsJ,GAEnC,OADA,EAAAhM,EAAAgE,gBAAegI,GACRD,EAAWC,EACpB,EAOatJ,EAAAA,WAAa,SAAUsJ,GAElC,OADA,EAAAhM,EAAAkM,eAAcF,GACPD,EAAWC,EACpB,EAOatJ,EAAAA,eAAiB,SAAUsJ,GAGtC,OAFA,EAAAhM,EAAAgD,mBAAkBgJ,GAClBA,GAAI,EAAA/L,EAAAiD,gBAAe8I,GACX,KAAOD,EAAWC,EAC5B,EAoBatJ,EAAAA,SAAW,SAAUyJ,GAChC,GAAU,OAANA,QAAoB3L,IAAN2L,EAChB,OAAO7K,OAAOmK,YAAY,GAG5B,GAAInK,OAAO6E,SAASgG,GAClB,OAAO7K,OAAOC,KAAK4K,GAGrB,GAAI9J,MAAMC,QAAQ6J,IAAMA,aAAa/J,WACnC,OAAOd,OAAOC,KAAK4K,GAGrB,GAAiB,kBAANA,EAAgB,CACzB,KAAK,EAAAlM,EAAAmM,aAAYD,GACf,MAAM,IAAI/K,MAAM,8GAADgD,OACiG+H,IAGlH,OAAO7K,OAAOC,MAAK,EAAAtB,EAAAsL,YAAU,EAAAtL,EAAAiD,gBAAeiJ,IAAK,OAGnD,GAAiB,kBAANA,EACT,OAAO,EAAAzJ,EAAA2J,aAAYF,GAGrB,GAAiB,kBAANA,EAAgB,CACzB,GAAIA,EAAIhM,OAAO,GACb,MAAM,IAAIiB,MAAM,oDAADgD,OAAqD+H,IAEtE,IAAIG,EAAIH,EAAE9I,SAAS,IAEnB,OADIiJ,EAAE/L,OAAS,IAAG+L,EAAI,IAAMA,GACrBhL,OAAOC,KAAK+K,EAAG,OAGxB,GAAIH,EAAEI,QAEJ,OAAOjL,OAAOC,KAAK4K,EAAEI,WAGvB,GAAIJ,EAAEpK,SACJ,OAAOT,OAAOC,KAAK4K,EAAEpK,YAGvB,MAAM,IAAIX,MAAM,eAClB,EAcA,SAAgBU,EAAewB,GAC7B,IAAM+H,GAAM,EAAA3I,EAAA2C,aAAY/B,GACxB,MAAY,OAAR+H,EACKlL,OAAO,GAETA,OAAOkL,EAChB,CAKA,SAAgB/E,EAAekG,GAC7B,OAAO,EAAA9J,EAAAX,UAAS,KAAOyK,EAAInJ,SAAS,IACtC,CArBaX,EAAAA,YAAc,SAAUY,GAEnC,MAAO,MADPA,GAAM,EAAAZ,EAAAX,UAASuB,IACGD,SAAS,MAC7B,EAKAX,EAAAA,eAAAZ,EAWAY,EAAAA,eAAA4D,EASa5D,EAAAA,YAAc,SAAUY,GACnC,IAAMmJ,EAAMtB,OAAOrJ,EAAewB,IAClC,IAAK6H,OAAOC,cAAcqB,GAAM,MAAM,IAAIrL,MAAM,0BAChD,OAAOqL,CACT,EAMa/J,EAAAA,WAAa,SAAU8J,GAClC,OAAOrM,OAAOuM,OAAO,IAAK5K,EAAe0K,GAC3C,EAMa9J,EAAAA,WAAa,SAAU8J,GAClC,OAAOlG,EAAenG,OAAOwM,QAAQ,IAAKH,GAC5C,EAKa9J,EAAAA,aAAe,SAAUwD,GACpC,MAAmB,kBAARA,IAIJ,EAAAjG,EAAA2M,eAAc1G,GAHZA,EAGyB,KAAOA,CAC3C,EAUAxD,EAAAA,MAAA,SAAsBmK,GAA+C,IAAtBC,EAAAxM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,GAC3DyM,EAAYzL,OAAO6E,SAAS0G,GAAUA,EAAOxJ,SAAS,OAASwJ,EACrE,OAAIE,EAAUxM,QAAUuM,EACfC,EAEFA,EAAU9I,MAAM,EAAG6I,GAAa,QACzC,EAmBapK,EAAAA,OAAS,SAAU2I,GAG9B,IADAA,GAAM,EAAApL,EAAAiD,gBAAemI,IACb9K,OAAS,IAAM,EACrB,MAAM,IAAIa,MAAM,2DAIlB,OAFkBE,OAAOC,KAAK8J,EAAI2B,QALd,iBAKmC,IAAK,OAE3C3J,SAAS,OAC5B,EAOaX,EAAAA,SAAW,SAAUuK,GAChC,GAAI3L,OAAO6E,SAAS8G,GAClB,MAAO,KAAP7I,OAAY6I,EAAG5J,SAAS,QACnB,GAAI4J,aAAc5K,MAAO,CAE9B,IADA,IAAM6K,EAAQ,GACLvJ,EAAI,EAAGA,EAAIsJ,EAAG1M,OAAQoD,IAC7BuJ,EAAMC,MAAK,EAAAzK,EAAA0K,UAASH,EAAGtJ,KAEzB,OAAOuJ,EAEX,EAeaxK,EAAAA,wBAA0B,SAAUT,GAC/C,IAAK,IAALoL,EAAA,EAAAC,EAAqBC,OAAOC,QAAQvL,GAAOoL,EAAAC,EAAA/M,OAAA8M,IAAE,CAAxC,IAAAI,EAAAhL,EAAA6K,EAAAD,GAAA,GAAOK,EAACD,EAAA,GAAEtB,EAACsB,EAAA,GACd,QAAUjN,IAAN2L,GAAmBA,EAAE5L,OAAS,GAAc,IAAT4L,EAAE,GACvC,MAAM,IAAI/K,MAAM,GAADgD,OAAIsJ,EAAC,2CAAAtJ,OAA0C+H,EAAE9I,SAAS,SAG/E,EAQAX,EAAAA,YAAA,SAAgBR,EAAYyL,GAC1B,OAAKtL,MAAMC,QAAQqL,GAGZA,EAAIC,KAAI,SAAC5B,GAAC,OAAK9J,EAAY8J,EAAE,IAF3B1K,OAAOC,KAAKoM,EAGvB,EAQAjL,EAAAA,YAAA,SAAgBhB,EAAYiM,GAC1B,OAAKtL,MAAMC,QAAQqL,GAGZA,EAAIC,KAAI,SAAC5B,GAAC,OAAKtK,EAAYsK,EAAE,IAF3B5J,WAAWb,KAAQ,OAAHoM,QAAG,IAAHA,EAAAA,EAAO,GAGlC,EAKajL,EAAAA,YAAc,SAAC8J,GAC1B,MAAO,KAAOA,EAAInJ,SAAS,GAC7B,EAOAX,EAAAA,uBAAA,SAAuCvB,GACrC,OAAO,EAAAuB,EAAAmL,aAAYvH,EAAenF,GACpC,EAEAuB,EAAAA,oBAAA,SAAoCvB,GAClC,OAAO,EAAAuB,EAAAmL,cAAY,EAAAnL,EAAA2J,aAAYlL,GACjC,0WCvYA,IAAA2M,EAAApO,EAAA,OACAE,EAAAF,EAAA,OAKagD,EAAAA,WAAavC,OAAO,sBAKpBuC,EAAAA,YAAcvC,OACzB,sEAQWuC,EAAAA,mBAAqBvC,OAChC,kFAGWuC,EAAAA,gBAAkB9C,EAAA0E,UAAUyJ,MAAMzB,EAClC5J,EAAAA,sBAAwB9C,EAAA0E,UAAUyJ,MAAMzB,EAAInM,OAAO,GAKnDuC,EAAAA,WAAavC,OACxB,uEAMWuC,EAAAA,iBAAmB,mEAKnBA,EAAAA,eAAiBoL,EAAAxM,OAAOC,KAAKmB,EAAAsL,iBAAkB,OAK/CtL,EAAAA,sBACX,mEAKWA,EAAAA,oBAAsBoL,EAAAxM,OAAOC,KAAKmB,EAAAuL,sBAAuB,OAKzDvL,EAAAA,gBAAkB,mEAKlBA,EAAAA,cAAgBoL,EAAAxM,OAAOC,KAAKmB,EAAAwL,gBAAiB,OAK7CxL,EAAAA,iBAAmBoL,EAAAxM,OAAOC,KAAK,CAAC,MAEhCmB,EAAAA,4BAA8B,+LC/D9BA,EAAAA,cAAgB,SAACyL,GAC5B,OAAOA,EAAQ5N,OAAS,GAAqC,KAAhC4N,EAAQA,EAAQ5N,OAAS,EACxD,EAEamC,EAAAA,eAAiB,SAACyL,EAAqB3C,GAClD,IAAK,IAAI4C,EAAK,EAAGC,EAAK,EAAGA,EAAKF,EAAQ5N,OAAQ6N,GAAM,EAAGC,GAAM,EAC3D7C,EAAM4C,GAAOD,EAAQE,IAAO,EAAKF,EAAQE,EAAK,EAElD,EAEa3L,EAAAA,sBAAwB,SAACyL,GACpC,IAAIG,EAAa,GACb,EAAA5L,EAAA6L,eAAcJ,KAChBG,EAAa,EAEbH,EAAUA,EAAQK,SAAS,EAAGL,EAAQ5N,OAAS,IAEjD,IAAM+C,EAAM,IAAIlB,WAAW+L,EAAQ5N,OAAS,EAAI,GAYhD,OAVA+C,EAAI,GAAKgL,GAAc,EAGM,KAAP,EAAjBH,EAAQ5N,UACX+C,EAAI,IAAM,GACVA,EAAI,IAAM6K,EAAQ,GAClBA,EAAUA,EAAQK,SAAS,KAG7B,EAAA9L,EAAA+L,gBAAeN,EAAS7K,EAAIkL,SAAS,IAC9BlL,CACT,EAEaZ,EAAAA,eAAiB,SAACwD,GAG7B,IAFA,IAAMwI,EAAiB,EAAbxI,EAAI3F,OAAa,EACrB4N,EAAU,IAAI/L,WAAWsM,GACtB/K,EAAI,EAAGA,EAAIuC,EAAI3F,OAAQoD,IAAK,CACnC,IAAMgL,EAAIzI,EAAIvC,GACdwK,EAAY,EAAJxK,GAASgL,EAAI,GACrBR,EAAY,EAAJxK,EAAQ,GAAKgL,EAAI,GAK3B,OADAR,EAAQO,EAAI,GAAK,GACVP,CACT,EAEazL,EAAAA,sBAAwB,SAACkM,GACpC,GAAuB,IAAnBA,EAAQrO,OACV,OAAOqO,EAET,IAAIC,GAAO,EAAAnM,EAAAoM,gBAAeF,GAEtBC,EAAK,GAAK,IACZA,EAAOA,EAAKL,SAAS,EAAGK,EAAKtO,OAAS,IAIxC,IAAMwO,EAAO,GAAe,EAAVF,EAAK,IACvB,OAAOA,EAAKL,SAASO,EACvB,oKClEA,IAAA9O,EAAAP,EAAA,OAMagD,EAAAA,kBAAoB,SAAUsM,GACzC,KAAK,EAAA/O,EAAAmM,aAAY4C,GAAQ,CACvB,IAAMpD,EAAM,oEAAHxH,OAAuE4K,GAChF,MAAM,IAAI5N,MAAMwK,GAEpB,EAMalJ,EAAAA,eAAiB,SAAUsM,GACtC,IAAK1N,OAAO6E,SAAS6I,GAAQ,CAC3B,IAAMpD,EAAM,mDAAHxH,OAAsD4K,GAC/D,MAAM,IAAI5N,MAAMwK,GAEpB,EAMalJ,EAAAA,cAAgB,SAAUsM,GACrC,IAAK3M,MAAMC,QAAQ0M,GAAQ,CACzB,IAAMpD,EAAM,0DAAHxH,OAA6D4K,GACtE,MAAM,IAAI5N,MAAMwK,GAEpB,EAMalJ,EAAAA,eAAiB,SAAUsM,GACtC,GAAqB,kBAAVA,EAAoB,CAC7B,IAAMpD,EAAM,oDAAHxH,OAAuD4K,GAChE,MAAM,IAAI5N,MAAMwK,GAEpB,6pBCzCAqD,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GAKAuM,EAAAvP,EAAA,OAAAgD,GACA,IAAAzC,EAAAP,EAAA,OACE6N,OAAAA,eAAAA,EAAAA,qBAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAmP,kBAAkB,IAClB7B,OAAAA,eAAAA,EAAAA,YAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAoP,SAAS,IACT9B,OAAAA,eAAAA,EAAAA,WAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAqP,QAAQ,IACR/B,OAAAA,eAAAA,EAAAA,gBAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAsP,aAAa,IACbhC,OAAAA,eAAAA,EAAAA,UAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAuP,OAAO,IACPjC,OAAAA,eAAAA,EAAAA,gBAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAA2M,aAAa,IACbW,OAAAA,eAAAA,EAAAA,cAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAmM,WAAW,IACXmB,OAAAA,eAAAA,EAAAA,YAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAsL,SAAS,IACTgC,OAAAA,eAAAA,EAAAA,iBAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAiD,cAAc,IACdqK,OAAAA,eAAAA,EAAAA,UAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAAAlP,EAAAwP,OAAO,IAETR,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,qCChCA,SAAgBkK,EAAc1G,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAI9E,MAAM,8DAADgD,cAAsE8B,IAGvF,MAAkB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,EAC/B,oMANAxD,EAAAA,cAAAkK,EAyBA,SAAgBrB,EAAUpK,GACxB,IAAI6K,EAAI7K,EAER,GAAiB,kBAAN6K,EACT,MAAM,IAAI5K,MAAM,qDAADgD,cAA6D4H,IAK9E,OAFIA,EAAEzL,OAAS,IAAGyL,EAAI,IAAH5H,OAAO4H,IAEnBA,CACT,CAtBatJ,EAAAA,eAAiB,SAACwD,GAC7B,GAAmB,kBAARA,EACT,MAAM,IAAI9E,MAAM,0DAADgD,cAAkE8B,IAEnF,OAAO0G,EAAc1G,GAAOA,EAAIjC,MAAM,GAAKiC,CAC7C,EAOAxD,EAAAA,UAAA6I,EAiBA7I,EAAAA,cAAA,SAA8BwD,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAI9E,MAAM,iEAADgD,cAAyE8B,IAG1F,OAAO5E,OAAOoO,WAAWxJ,EAAK,OAChC,EAUAxD,EAAAA,mBAAA,SACEiN,EACAC,EACAC,GAEA,IAAgC,IAA5BxN,MAAMC,QAAQqN,GAChB,MAAM,IAAIvO,MAAM,mFAADgD,cAC6EuL,EAAQ,MAGtG,IAA8B,IAA1BtN,MAAMC,QAAQsN,GAChB,MAAM,IAAIxO,MAAM,iFAADgD,cAC2EwL,EAAM,MAIlG,OAAOA,GAAgB,IAATC,EAAgB,OAAS,UAAS,SAAC1O,GAAK,OAAKwO,EAASG,QAAQ3O,IAAU,CAAC,GACzF,EAQAuB,EAAAA,QAAA,SAAwB2I,GACtB,IAAInF,EAAM,GACNvC,EAAI,EACF+K,EAAIrD,EAAI9K,OAId,IAF4B,OAAxB8K,EAAI0E,UAAU,EAAG,KAAapM,EAAI,GAE/BA,EAAI+K,EAAG/K,GAAK,EAAG,CACpB,IAAMqM,EAAOpM,SAASyH,EAAI4E,OAAOtM,EAAG,GAAI,IACxCuC,GAAOgK,OAAOC,aAAaH,GAG7B,OAAO9J,CACT,EASAxD,EAAAA,SAAA,SAAyB0N,GACvB,IAAMlK,EAAM5E,OAAOC,KAAK6O,EAAa,QAErC,MAAO,KAAPhM,OAAYmH,EAAUrF,EAAI7C,SAAS,QAAQ2J,QAAQ,WAAY,IACjE,EASAtK,EAAAA,UAAA,SAA0B0N,GAExB,IADA,IAAI/E,EAAM,GACD1H,EAAI,EAAGA,EAAIyM,EAAY7P,OAAQoD,IAAK,CAC3C,IACM2I,EADO8D,EAAYC,WAAW1M,GACrBN,SAAS,IACxBgI,GAAOiB,EAAE/L,OAAS,EAAI,IAAH6D,OAAOkI,GAAMA,EAGlC,MAAO,KAAPlI,OAAYiH,EACd,EAaA3I,EAAAA,QAAA,SAAwB4N,EAAkCpP,EAAaqP,GACrE,IAAKlO,MAAMC,QAAQgO,GACjB,MAAM,IAAIlP,MAAM,+DAADgD,cAAuEkM,IAExF,GAAmB,kBAARpP,EACT,MAAM,IAAIE,MAAM,iEAADgD,cAC2DkM,IAM5E,IAFA,IAAME,EAAS,GAEN7M,EAAI,EAAGA,EAAI2M,EAAO/P,OAAQoD,IAAK,CACtC,IAAIxC,EAAQmP,EAAO3M,GAAGzC,GACtB,IAAmB,IAAfqP,GAAwBpP,GAErB,GAAqB,kBAAVA,EAChB,MAAM,IAAIC,MAAM,kDAADgD,cAA0DjD,SAFzEA,EAAQ,GAIVqP,EAAOrD,KAAKhM,GAGd,OAAOqP,CACT,EASA9N,EAAAA,YAAA,SAA4BvB,EAAeZ,GACzC,QAAqB,kBAAVY,IAAuBA,EAAMsP,MAAM,wBAExB,qBAAXlQ,GAA0BA,EAAS,GAAKY,EAAMZ,SAAW,EAAI,EAAIA,EAG9E,qLChNA,IACamQ,EAAI,WAAjB,SAAAA,IAAA5P,EAAA,KAAA4P,GACU,KAAAC,QAAkB,EAClB,KAAAC,qBAAoD,EAsC9D,CADG,OAnCD3P,EAAAyP,EAAA,EAAAxP,IAAA,UAAAC,MAAA,eAAA0P,EAAAhK,EAAAL,IAAAQ,MAIO,SAAAC,IAAA,IAAA6J,EAAA,YAAAtK,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,YACDhH,KAAK4P,QAAU,GAAC,CAAA1I,EAAAF,KAAA,QACD,OAAjBhH,KAAK4P,SAAW,EAAC1I,EAAA8I,OAAA,SACV5I,QAAQC,SAAQ,IAAK,cAAAH,EAAA8I,OAAA,SAKvB,IAAI5I,SAAiB,SAAC6I,GAAQ,OAAKF,EAAKF,qBAAqBzD,KAAK6D,EAAS,KAAC,wBAAA/I,EAAAM,OAAA,GAAAtB,EAAA,UACpF,yBAAA4J,EAAA/H,MAAA,KAAAxI,UAAA,EAbD,IAeA,CAAAY,IAAA,UAAAC,MAIO,WAGL,GAFAJ,KAAK4P,SAAW,EAEZ5P,KAAK4P,QAAU,GAAK5P,KAAK6P,qBAAqBrQ,OAAS,EAEzD0Q,QAAQC,KAAK,wEACR,GAAqB,IAAjBnQ,KAAK4P,SAAiB5P,KAAK6P,qBAAqBrQ,OAAS,EAAG,CAGrEQ,KAAK4P,SAAW,EAEhB,IAAMQ,EAAepQ,KAAK6P,qBAAqBQ,QAC3CD,GACFA,GAAa,GAGnB,KAACT,CAAA,CAvCc,GAAjBhO,EAAAA,KAAAgO,0KCDA,IAAAW,EAAA3R,EAAA,MAMa4R,EAAiB,eAAAC,EAAA1K,EAAAL,IAAAQ,MAAG,SAAAC,EAAOuK,EAAalB,GAAiB,IAAA7D,EAAA,OAAAjG,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,GAClD,EAAAsJ,EAAAI,SAAMD,EAAK,CAC3BE,QAAS,CACP,eAAgB,oBAElBC,KAAM,OACNvK,KAAM,CACJwK,OAAQtB,EAAOsB,OACftB,OAAQA,EAAOA,OACfuB,QAAS,MACTC,GAAI,KAEN,OAXO,OAAHrF,EAAGxE,EAAAO,KAAAP,EAAA8I,OAAA,SAaFtE,EAAI+D,QAAM,wBAAAvI,EAAAM,OAAA,GAAAtB,EAAA,KAClB,gBAf6B2C,EAAAC,GAAA,OAAA0H,EAAAzI,MAAA,KAAAxI,UAAA,KAAjBoC,EAAAA,kBAAiB4O,EAiBjB5O,EAAAA,YAAc,SAACqP,GAA0B,IAAAC,EACpD,GAAwB,kBAAbD,EACT,OAAOA,EACF,QAAkCvR,KAAtB,OAARuR,QAAQ,IAARA,GAAoB,QAAZC,EAARD,EAAUE,kBAAU,IAAAD,OAAA,EAApBA,EAAsBR,KAC/B,OAAOO,EAASE,WAAWT,IAE3B,MAAM,IAAIpQ,MAAM,kDAEpB,mMC/BA,IAAAzB,EAAAD,EAAA,OACAE,EAAAF,EAAA,OAEAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAM,EAAAN,EAAA,OA4BA,SAASwS,EAAqB/F,EAAWgG,GACvC,OAAIhG,IAAMhM,OAAO,IAAMgM,IAAMhM,OAAO,GAAWgM,OAE/B3L,IAAZ2R,EACKhG,EAAIhM,OAAO,IAEbgM,GAAKgG,EAAUhS,OAAO,GAAKA,OAAO,IAC3C,CAEA,SAASiS,EAAmBC,GAC1B,OAAOA,IAAalS,OAAO,IAAMkS,IAAalS,OAAO,EACvD,CAzBAuC,EAAAA,OAAA,SAAuB4P,EAAiBjO,EAAoB8N,GAC1D,IAAMI,EAAM3S,EAAA0E,UAAUkO,KAAKF,EAASjO,GAC9Bf,EAAMiP,EAAIE,oBAShB,MAAO,CAAEC,EARCpR,OAAOC,KAAK+B,EAAIW,MAAM,EAAG,KAQvB0O,EAPFrR,OAAOC,KAAK+B,EAAIW,MAAM,GAAI,KAOrBkI,OAJD3L,IAAZ2R,EACIhS,OAAOoS,EAAIF,SAAY,IACvBlS,OAAOoS,EAAIF,SAAY,IAAMlS,OAAOgS,GAAWhS,OAAO,GAG9D,EAoBauC,EAAAA,UAAY,SACvB4P,EACAnG,EACAuG,EACAC,EACAR,GAEA,IAAMS,EAAYtR,OAAO8C,OAAO,EAAC,EAAAtE,EAAA+S,eAAcH,EAAG,KAAK,EAAA5S,EAAA+S,eAAcF,EAAG,KAAM,IACxEN,EAAWH,EAAqB/F,EAAGgG,GACzC,IAAKC,EAAmBC,GACtB,MAAM,IAAIjR,MAAM,6BAGlB,IACM0R,EADMlT,EAAA0E,UAAUyO,UAAUC,YAAYJ,GAAWK,eAAe9H,OAAOkH,IACpDa,iBAAiBZ,GAC1C,OAAOhR,OAAOC,KAAKuR,EAAahO,YAAW,GAAOb,MAAM,GAC1D,EAOavB,EAAAA,SAAW,SAAUyJ,EAAWuG,EAAWC,EAAWR,GAEjE,IAAKC,EADYF,EAAqB/F,EAAGgG,IAEvC,MAAM,IAAI/Q,MAAM,6BAIlB,OAAO,EAAAtB,EAAAuF,aAAY/D,OAAO8C,OAAO,EAAC,EAAAtE,EAAA+S,eAAcH,EAAG,KAAK,EAAA5S,EAAA+S,eAAcF,EAAG,KAAK,EAAA7S,EAAAiC,UAASoK,KACzF,EAOazJ,EAAAA,aAAe,SAAUyJ,EAAWuG,EAAWC,EAAWR,GAErE,IAAKC,EADYF,EAAqB/F,EAAGgG,IAEvC,MAAM,IAAI/Q,MAAM,6BAGlB,IAAI+R,EAAKR,EAMT,OALKxG,EAAIhM,OAAO,KAAOgM,EAAIhM,OAAO,KAAOA,OAAO,IAAOgM,IAAMhM,OAAO,IAAMgM,IAAMhM,OAAO,QACrFgT,EAAK7R,OAAOC,KAAKoR,IACd,IAAM,MAGJ,EAAA7S,EAAAuF,aAAY/D,OAAO8C,OAAO,EAAC,EAAAtE,EAAA+S,eAAcH,EAAG,KAAK,EAAA5S,EAAA+S,eAAcM,EAAI,MAC5E,EAUazQ,EAAAA,WAAa,SAAU6P,GAClC,IAEIG,EACAC,EACAxG,EAJE7I,GAAc,EAAAxD,EAAAiC,UAASwQ,GAK7B,GAAIjP,EAAI/C,QAAU,GAChBmS,EAAIpP,EAAIW,MAAM,EAAG,IACjB0O,EAAIrP,EAAIW,MAAM,GAAI,IAClBkI,GAAI,EAAArM,EAAAgC,gBAAewB,EAAIW,MAAM,SACxB,IAAmB,KAAfX,EAAI/C,OAOb,MAAM,IAAIa,MAAM,4BALhBsR,EAAIpP,EAAIW,MAAM,EAAG,IACjB0O,EAAIrP,EAAIW,MAAM,GAAI,IAClBkI,EAAIhM,QAAO,EAAAL,EAAAsT,aAAY9P,EAAIW,MAAM,GAAI,MAAQ,GAC7C0O,EAAE,IAAM,IAUV,OAJIxG,EAAI,KACNA,GAAQhM,OAAO,KAGV,CACLgM,EAAAA,EACAuG,EAAAA,EACAC,EAAAA,EAEJ,EAOajQ,EAAAA,iBAAmB,SAC9ByJ,EACAuG,EACAC,GAEgB,IADhBU,IAAA/S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACA6R,EAAgB7R,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEhB,GAAiB,KAAbkS,EAAEnS,QAA8B,KAAboS,EAAEpS,OACvB,OAAO,EAGT,IAAK6R,EAAmBF,EAAqB/F,EAAGgG,IAC9C,OAAO,EAGT,IAAMmB,GAAU,EAAAxT,EAAAgC,gBAAe4Q,GACzBa,GAAU,EAAAzT,EAAAgC,gBAAe6Q,GAE/B,QACEW,IAAYnT,OAAO,IACnBmT,GAAWvT,EAAAyT,iBACXD,IAAYpT,OAAO,IACnBoT,GAAWxT,EAAAyT,oBAKTH,GAAoBE,GAAWxT,EAAA0T,sBAKrC,EAQa/Q,EAAAA,oBAAsB,SAAUgR,IAC3C,EAAA1T,EAAAgE,gBAAe0P,GACf,IAAMtQ,EAAS9B,OAAOC,KAAK,iCAAD6C,OAAoCsP,EAAQnT,QAAU,SAChF,OAAOe,OAAOC,MAAK,EAAA5B,EAAA8D,WAAUnC,OAAO8C,OAAO,CAAChB,EAAQsQ,KACtD,oHCjMA,IAuDYC,EAvDZ7T,EAAAJ,EAAA,OACAO,EAAAP,EAAA,QAsDA,SAAYiU,GACVA,EAAAA,EAAA,mBACAA,EAAAA,EAAA,mBACAA,EAAAA,EAAA,mBACAA,EAAAA,EAAA,wCACD,CALD,CAAYA,EAAAjR,EAAAiR,aAAAjR,EAAAA,WAAU,KA0BtBA,EAAAA,OAAA,SACEsM,EACA4E,GAEA,GAAc,OAAV5E,EACF,OAAO,KAET,QAAcxO,IAAVwO,EAAJ,CAIA,GAAqB,kBAAVA,KAAuB,EAAA/O,EAAAmM,aAAY4C,GAC5C,MAAM,IAAI5N,MAAM,sDAADgD,OAAuD4K,IACjE,GAAqB,kBAAVA,IAAuB7D,OAAOC,cAAc4D,GAC5D,MAAM,IAAI5N,MACR,+FAIJ,IAAMyS,GAAS,EAAA/T,EAAAiC,UAASiN,GAExB,OAAQ4E,GACN,KAAKD,EAAWrS,OACd,OAAOuS,EACT,KAAKF,EAAWxT,OACd,OAAO,EAAAL,EAAAgC,gBAAe+R,GACxB,KAAKF,EAAWxI,OACd,IAAM2I,GAAS,EAAAhU,EAAAgC,gBAAe+R,GAC9B,GAAIC,EAAS3T,OAAOgL,OAAO4I,kBACzB,MAAM,IAAI3S,MACR,gGAGJ,OAAO+J,OAAO2I,GAEhB,KAAKH,EAAWK,kBACd,OAAO,EAAAlU,EAAAuF,aAAYwO,GACrB,QACE,MAAM,IAAIzS,MAAM,uBAEtB,0GCxHasB,EAAAA,YAAcvC,OAAO,2KCDlC,IAAA8T,EAAAvU,EAAA,OACAI,EAAAJ,EAAA,OACAwU,EAAAxU,EAAA,OA+BayU,EAAU,WAMrB,SAAAA,EACkBtJ,EACAuJ,EACAnR,EAIAoR,GAAcvT,EAAA,KAAAqT,GANd,KAAAtJ,MAAAA,EACA,KAAAuJ,eAAAA,EACA,KAAAnR,QAAAA,EAIA,KAAAoR,OAAAA,CACf,CAoDF,OApDGpT,EAAAkT,EAAA,EAAAjT,IAAA,MAAAC,MAsDJ,WACE,OAAOgT,EAAWG,cAAcvT,KAClC,GAAC,CAAAG,IAAA,UAAAC,MAED,WACE,MAAO,CACL0J,MAAO9J,KAAK8J,MACZuJ,eAAgBrT,KAAKqT,eACrBnR,QAASlC,KAAKkC,QAAQK,IACtB+Q,OAAQtT,KAAKsT,OAEjB,GAAC,CAAAnT,IAAA,SAAAC,MAED,WACE,MAAO,CACL0J,OAAO,EAAA/K,EAAAyU,aAAYxT,KAAK8J,OACxBuJ,gBAAgB,EAAAtU,EAAAyU,aAAYxT,KAAKqT,gBACjCnR,QAAS,KAAOlC,KAAKkC,QAAQK,IAAID,SAAS,OAC1CgR,QAAQ,EAAAvU,EAAAyU,aAAYxT,KAAKsT,QAE7B,IAAC,EAAAnT,IAAA,qBAAAC,MAxEM,SAA0BqT,GAC/B,IACSC,EAILD,EAJF3J,MACgB6J,EAGdF,EAHFJ,eACSO,EAEPH,EAFFvR,QACQ2R,EACNJ,EADFH,OAOF,OAAO,IAAIF,GALG,EAAAD,EAAAW,QAAOJ,EAAWP,EAAAP,WAAWxT,SACpB,EAAA+T,EAAAW,QAAOH,EAAoBR,EAAAP,WAAWxT,QAC7C,IAAI8T,EAAAnO,SAAQ,EAAAoO,EAAAW,QAAOF,EAAaT,EAAAP,WAAWrS,UAC5C,EAAA4S,EAAAW,QAAOD,EAAYV,EAAAP,WAAWxT,QAG/C,GAAC,CAAAe,IAAA,kBAAAC,MAEM,SAAuB2T,GAC5B,GAA+B,IAA3BA,EAAgBvU,OAClB,MAAMa,MAAM,oDAADgD,OAAqD0Q,EAAgBvU,SAElF,IAAAwU,EAAAtS,EAAiDqS,EAAe,GAAzDjK,EAAKkK,EAAA,GAAEX,EAAcW,EAAA,GAAE9R,EAAO8R,EAAA,GAAEV,EAAMU,EAAA,GAC7C,OAAOZ,EAAWa,mBAAmB,CAAEnK,MAAAA,EAAOuJ,eAAAA,EAAgBnR,QAAAA,EAASoR,OAAAA,GACzE,GAEA,CAAAnT,IAAA,gBAAAC,MAKO,SAAqB8T,GAC1B,IAAQpK,EAA2CoK,EAA3CpK,MAAOuJ,EAAoCa,EAApCb,eAAgBnR,EAAoBgS,EAApBhS,QAASoR,EAAWY,EAAXZ,OAoBxC,MAAO,EAlBL,EAAAH,EAAAW,QAAOhK,EAAOqJ,EAAAP,WAAWxT,UAAYA,OAAO,GACxCmB,OAAO4T,MAAM,IACb,EAAAhB,EAAAW,QAAOhK,EAAOqJ,EAAAP,WAAWrS,SAE7B,EAAA4S,EAAAW,QAAOT,EAAgBF,EAAAP,WAAWxT,UAAYA,OAAO,GACjDmB,OAAO4T,MAAM,IACb,EAAAhB,EAAAW,QAAOT,EAAgBF,EAAAP,WAAWrS,QAEpC2B,aAAmBgR,EAAAnO,QACK7C,EAASK,KAEnB,EAAA4Q,EAAAW,QAAO5R,EAASiR,EAAAP,WAAWrS,SAG3C,EAAA4S,EAAAW,QAAOR,EAAQH,EAAAP,WAAWxT,UAAYA,OAAO,GACzCmB,OAAO4T,MAAM,IACb,EAAAhB,EAAAW,QAAOR,EAAQH,EAAAP,WAAWrS,QAGlC,KAAC6S,CAAA,CAlEoB,GAAvBzR,EAAAA,WAAAyR,6IChCA,IAAAgB,EAAAzV,EAAA,OACAG,EAAAH,EAAA,OACA0V,EAAA1V,EAAA,OAIA,SAAgB2V,EAAQ9R,GACtB,MAAO,CACLA,KAAAA,EACA+R,KAAM,SAACpU,GAAe,QAAAkI,EAAA9I,UAAAC,OAAKgV,EAAkB,IAAAlT,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAlBiM,EAAkBjM,EAAA,GAAAhJ,UAAAgJ,GAAA,OAAK,EAAA6L,EAAAG,MAAK/R,EAAMrC,EAAKrB,EAAA2V,YAAW1M,WAAC,EAAGyM,GAAM,EACvFE,YAAA5V,EAAA4V,YAEJ,CANA/S,EAAAA,QAAA2S,EASA3S,EAAAA,YAAA,SAA4BgT,EAAoBC,GAC9C,IAAMC,EAAS,SAACrS,GAAW,OAAK,EAAA6R,EAAAS,aAAWC,EAAAA,EAAC,CAAC,EAAIJ,GAAaL,EAAQ9R,IAAQ,EAC9E,OAAOgK,OAAOwI,OAAMD,EAAAA,EAAC,CAAC,EAAIF,EAAOD,IAAQ,IAAEC,OAAAA,IAC7C,4ICjBA,IAAAI,EAAAtW,EAAA,KACAuW,EAAAvW,EAAA,OACMQ,EAAMC,OAAO,GACb+V,EAAM/V,OAAO,GAiCnBuC,EAAAA,KAAA,SAAyCyT,EAAwBC,GAC/D,IAAMC,EAAkB,SAACC,EAAoBC,GAC3C,IAAMC,EAAMD,EAAKE,SACjB,OAAOH,EAAYE,EAAMD,CAC3B,EACMG,EAAO,SAACC,GAGZ,MAAO,CAAEC,QAFOC,KAAKC,KAAKV,EAAOO,GAAK,EAEpBI,WADFF,KAAAG,IAAG,EAAML,EAAI,GAE/B,EACA,MAAO,CACLN,gBAAAA,EAEAY,aAAY,SAACC,EAAQ5K,GAGnB,IAFA,IAAI6K,EAAIhB,EAAEiB,KACNC,EAAOH,EACJ5K,EAAIpM,GACLoM,EAAI4J,IAAKiB,EAAIA,EAAErM,IAAIuM,IACvBA,EAAIA,EAAEC,SACNhL,IAAM4J,EAER,OAAOiB,CACT,EAYAI,iBAAgB,SAACL,EAAQP,GAKvB,IAJA,IAAAa,EAAgCd,EAAKC,GAA7BC,EAAOY,EAAPZ,QAASG,EAAUS,EAAVT,WACXU,EAAc,GAChBN,EAAOD,EACPrI,EAAOsI,EACFO,EAAS,EAAGA,EAASd,EAASc,IAAU,CAC/C7I,EAAOsI,EACPM,EAAOtK,KAAK0B,GAEZ,IAAK,IAAIlL,EAAI,EAAGA,EAAIoT,EAAYpT,IAC9BkL,EAAOA,EAAK/D,IAAIqM,GAChBM,EAAOtK,KAAK0B,GAEdsI,EAAItI,EAAKyI,QACX,CACA,OAAOG,CACT,EASAE,KAAI,SAAChB,EAAWiB,EAAkBtL,GAYhC,IATA,IAAAuL,EAAgCnB,EAAKC,GAA7BC,EAAOiB,EAAPjB,QAASG,EAAUc,EAAVd,WAEbI,EAAIhB,EAAEiB,KACNU,EAAI3B,EAAE4B,KAEJC,EAAO7X,OAAO0W,KAAAG,IAAA,EAAKL,GAAI,GACvBsB,EAASpB,KAAAG,IAAG,EAAKL,GACjBuB,EAAU/X,OAAOwW,GAEde,EAAS,EAAGA,EAASd,EAASc,IAAU,CAC/C,IAAMS,EAAST,EAASX,EAEpBqB,EAAQjN,OAAOmB,EAAI0L,GAGvB1L,IAAM4L,EAIFE,EAAQrB,IACVqB,GAASH,EACT3L,GAAK4J,GAWP,IAAMmC,EAAUF,EACVG,EAAUH,EAAStB,KAAK0B,IAAIH,GAAS,EACrCI,EAAQd,EAAS,IAAM,EACvBe,EAAQL,EAAQ,EACR,IAAVA,EAEFN,EAAIA,EAAEhN,IAAIuL,EAAgBmC,EAAOZ,EAAYS,KAE7ClB,EAAIA,EAAErM,IAAIuL,EAAgBoC,EAAOb,EAAYU,IAEjD,CAMA,MAAO,CAAEnB,EAAAA,EAAGW,EAAAA,EACd,EAEAY,WAAU,SAACC,EAAMC,EAA6BtM,EAAWuM,GAEvD,IAAMlC,EAAYgC,EAAEG,cAAgB,EAEhCC,EAAOH,EAAezJ,IAAIwJ,GAO9B,OANKI,IACHA,EAAOhY,KAAKwW,iBAAiBoB,EAAGhC,GACtB,IAANA,GACFiC,EAAeI,IAAIL,EAAGE,EAAUE,KAG7BhY,KAAK4W,KAAKhB,EAAGoC,EAAMzM,EAC5B,EAEJ,EAgBA5J,EAAAA,cAAA,SAAqCuW,GAgBnC,OAfA,EAAAjD,EAAAkD,eAAcD,EAAME,KACpB,EAAAlD,EAAAmD,gBACEH,EACA,CACE3M,EAAG,SACH+M,EAAG,SACHC,GAAI,QACJC,GAAI,SAEN,CACEC,WAAY,gBACZC,YAAa,kBAIVlM,OAAOwI,OAAMD,EAAAA,EAAAA,EAAC,CAAC,GACjB,EAAAE,EAAA0D,SAAQT,EAAM3M,EAAG2M,EAAMO,aACvBP,GACA,CAAE9B,EAAG8B,EAAME,GAAGQ,QAErB,8NCxMA,IAAA3D,EAAAtW,EAAA,KAEAuW,EAAAvW,EAAA,OA2BA,IAAMka,EAAQ3D,EAAA4D,gBAGd,SAASC,EAAM3Y,EAAeZ,GAC5B,GAAIY,EAAQ,GAAKA,GAAS,GAAM,EAAIZ,EAClC,MAAM,IAAIa,MAAM,yBAADgD,OAA0BjD,EAAK,YAAAiD,OAAW7D,IAG3D,IADA,IAAMkM,EAAMpK,MAAMd,KAAK,CAAEhB,OAAAA,IAAUmL,KAAK,GAC/B/H,EAAIpD,EAAS,EAAGoD,GAAK,EAAGA,IAC/B8I,EAAI9I,GAAa,IAARxC,EACTA,KAAW,EAEb,OAAO,IAAIiB,WAAWqK,EACxB,CAEA,SAASsN,EAAO/N,EAAe2C,GAE7B,IADA,IAAMhB,EAAM,IAAIvL,WAAW4J,EAAEzL,QACpBoD,EAAI,EAAGA,EAAIqI,EAAEzL,OAAQoD,IAC5BgK,EAAIhK,GAAKqI,EAAErI,GAAKgL,EAAEhL,GAEpB,OAAOgK,CACT,CAEA,SAASqM,EAAOzD,GACd,KAAK,EAAAN,EAAAgE,SAAQ1D,GAAO,MAAM,IAAInV,MAAM,sBACtC,CACA,SAAS8Y,EAAM3D,GACb,IAAKpL,OAAOC,cAAcmL,GAAO,MAAM,IAAInV,MAAM,kBACnD,CAIA,SAAgB+Y,EACdvO,EACAwO,EACAC,EACAC,GAEAN,EAAOpO,GACPoO,EAAOI,GACPF,EAAMG,GAEFD,EAAI7Z,OAAS,MAAK6Z,EAAME,GAAE,EAAArE,EAAAT,cAAY,EAAAS,EAAAsE,aAAY,qBAAsBH,KAC5E,IAAmBI,EAAqCF,EAAhDG,UAAiCC,EAAeJ,EAAzBK,SACzBC,EAAM/D,KAAKC,KAAKuD,EAAaG,GACnC,GAAII,EAAM,IAAK,MAAM,IAAIxZ,MAAM,sBAC/B,IAAMyZ,GAAY,EAAA5E,EAAAT,aAAY4E,EAAKN,EAAMM,EAAI7Z,OAAQ,IAC/Cua,EAAQhB,EAAM,EAAGY,GACjBK,EAAYjB,EAAMO,EAAY,GAC9B1L,EAAI,IAAItM,MAAkBuY,GAC1BI,EAAMV,GAAE,EAAArE,EAAAT,aAAYsF,EAAOlP,EAAKmP,EAAWjB,EAAM,EAAG,GAAIe,IAC9DlM,EAAE,GAAK2L,GAAE,EAAArE,EAAAT,aAAYwF,EAAKlB,EAAM,EAAG,GAAIe,IACvC,IAAK,IAAIlX,EAAI,EAAGA,GAAKiX,EAAKjX,IAAK,CAC7B,IAAM0F,EAAO,CAAC0Q,EAAOiB,EAAKrM,EAAEhL,EAAI,IAAKmW,EAAMnW,EAAI,EAAG,GAAIkX,GACtDlM,EAAEhL,GAAK2W,EAAErE,EAAAT,YAAW1M,WAAC,EAAGO,GAC1B,CAEA,OAD4B4M,EAAAT,YAAW1M,WAAC,EAAG6F,GAChB1K,MAAM,EAAGoW,EACtC,CAOA,SAAgBY,EACdrP,EACAwO,EACAC,EACA3M,EACA4M,GAOA,GALAN,EAAOpO,GACPoO,EAAOI,GACPF,EAAMG,GAGFD,EAAI7Z,OAAS,IAAK,CACpB,IAAM2a,EAAQrE,KAAKC,KAAM,EAAIpJ,EAAK,GAClC0M,EAAME,EAAE1E,OAAO,CAAEsF,MAAAA,IAASC,QAAO,EAAAlF,EAAAsE,aAAY,sBAAsBY,OAAOf,GAAKgB,QACjF,CACA,GAAIf,EAAa,OAASD,EAAI7Z,OAAS,IACrC,MAAM,IAAIa,MAAM,0CAClB,OACEkZ,EAAE1E,OAAO,CAAEsF,MAAOb,IACfc,OAAOvP,GACPuP,OAAOrB,EAAMO,EAAY,IAEzBc,OAAOf,GACPe,OAAOrB,EAAMM,EAAI7Z,OAAQ,IACzB6a,QAEP,CAUA,SAAgBC,EAAczP,EAAiB0P,EAAeC,IAC5D,EAAAtF,EAAAmD,gBAAemC,EAAS,CACtBnB,IAAK,qBACLjD,EAAG,SACHqE,EAAG,gBACH9N,EAAG,gBACHnK,KAAM,SAER,IAAQ4T,EAAqCoE,EAArCpE,EAAGzJ,EAAkC6N,EAAlC7N,EAAG8N,EAA+BD,EAA/BC,EAAGjY,EAA4BgY,EAA5BhY,KAAMkY,EAAsBF,EAAtBE,OAAaC,EAASH,EAAdnB,IAC/BJ,EAAOpO,GACPsO,EAAMoB,GACN,IAIIK,EAJEvB,EAxHR,SAAqBwB,GACnB,IAAI,EAAA3F,EAAAgE,SAAQ2B,GAAM,OAAOA,EACzB,GAAmB,kBAARA,EAAkB,OAAO,EAAA3F,EAAAsE,aAAYqB,GAChD,MAAM,IAAIxa,MAAM,mCAClB,CAoHcya,CAAYH,GAClBI,EAAQ3E,EAAE9T,SAAS,GAAG9C,OACtBwb,EAAIlF,KAAKC,MAAMgF,EAAQpO,GAAK,GAC5BsO,EAAeV,EAAQE,EAAIO,EAEjC,GAAe,QAAXN,EACFE,EAAMxB,EAAmBvO,EAAKwO,EAAK4B,EAAczY,QAC5C,GAAe,QAAXkY,EACTE,EAAMV,EAAmBrP,EAAKwO,EAAK4B,EAActO,EAAGnK,OAC/C,IAAe,mBAAXkY,EAIT,MAAM,IAAIra,MAAM,iCAFhBua,EAAM/P,CAGR,CAEA,IADA,IAAMqQ,EAAI,IAAI5Z,MAAMiZ,GACX3X,EAAI,EAAGA,EAAI2X,EAAO3X,IAAK,CAE9B,IADA,IAAMd,EAAI,IAAIR,MAAMmZ,GACXU,EAAI,EAAGA,EAAIV,EAAGU,IAAK,CAC1B,IAAMC,EAAaJ,GAAKG,EAAIvY,EAAI6X,GAC1BY,EAAKT,EAAInN,SAAS2N,EAAYA,EAAaJ,GACjDlZ,EAAEqZ,IAAK,EAAAlG,EAAAqG,KAAIzC,EAAMwC,GAAKjF,EACxB,CACA8E,EAAEtY,GAAKd,CACT,CACA,OAAOoZ,CACT,CA3GAvZ,EAAAA,mBAAAyX,EAiCAzX,EAAAA,mBAAAuY,EAqCAvY,EAAAA,cAAA2Y,EAuCA3Y,EAAAA,WAAA,SAAmD4Z,EAAU1O,GAE3D,IAAM2O,EAAQ3O,EAAIA,KAAI,SAACjK,GAAC,OAAKtB,MAAMd,KAAKoC,GAAG6Y,SAAS,IACpD,OAAO,SAACC,EAAMC,GACZ,IAAAC,EAAiCJ,EAAM3O,KAAI,SAACgP,GAAG,OAC7CA,EAAIC,QAAO,SAACC,EAAKnZ,GAAC,OAAK2Y,EAAMxR,IAAIwR,EAAMS,IAAID,EAAKL,GAAI9Y,EAAE,GAAC,IACxDqZ,EAAAva,EAAAka,EAAA,GAFMM,EAAID,EAAA,GAAEE,EAAIF,EAAA,GAAEG,EAAIH,EAAA,GAAEI,EAAIJ,EAAA,GAK7B,OAFAP,EAAIH,EAAMe,IAAIJ,EAAMC,GACpBR,EAAIJ,EAAMS,IAAIL,EAAGJ,EAAMe,IAAIF,EAAMC,IAC1B,CAAEX,EAAAA,EAAGC,EAAAA,EACd,CACF,EAmBAha,EAAAA,aAAA,SACE4a,EACAC,EACAC,GAEA,GAA0B,oBAAfD,EAA2B,MAAM,IAAInc,MAAM,gCACtD,MAAO,CAGLqc,YAAW,SAAC7R,EAAiB2P,GAC3B,IAAMU,EAAIZ,EAAczP,EAAK,EAACkK,EAAAA,EAAA,GAAO0H,GAAG,IAAEpD,IAAKoD,EAAIpD,KAAQmB,IACrDmC,EAAKJ,EAAMK,WAAWJ,EAAWtB,EAAE,KACnC2B,EAAKN,EAAMK,WAAWJ,EAAWtB,EAAE,KACnCtD,EAAI+E,EAAG5S,IAAI8S,GAAIC,gBAErB,OADAlF,EAAEmF,iBACKnF,CACT,EAIAoF,cAAa,SAACnS,EAAiB2P,GAC7B,IAAMU,EAAIZ,EAAczP,EAAK,EAACkK,EAAAA,EAAA,GAAO0H,GAAG,IAAEpD,IAAKoD,EAAIQ,WAAczC,IAC3D5C,EAAI2E,EAAMK,WAAWJ,EAAWtB,EAAE,KAAK4B,gBAE7C,OADAlF,EAAEmF,iBACKnF,CACT,EAEJ,wVCnOA,IAAA1C,EAAAvW,EAAA,OAUMQ,EAAMC,OAAO,GAAI+V,EAAM/V,OAAO,GAAI8d,EAAM9d,OAAO,GAAI+d,EAAM/d,OAAO,GAEhEge,EAAMhe,OAAO,GAAIie,EAAMje,OAAO,GAAIke,EAAMle,OAAO,GAEzCA,OAAO,GAAWA,OAAO,IAGrC,SAAgBkc,EAAIrQ,EAAW2C,GAC7B,IAAM6B,EAASxE,EAAI2C,EACnB,OAAO6B,GAAUtQ,EAAMsQ,EAAS7B,EAAI6B,CACtC,CAQA,SAAgBwG,EAAIxK,EAAa8R,EAAeC,GAC9C,GAAIA,GAAUre,GAAOoe,EAAQpe,EAAK,MAAM,IAAIkB,MAAM,6BAClD,GAAImd,IAAWrI,EAAK,OAAOhW,EAE3B,IADA,IAAIuM,EAAMyJ,EACHoI,EAAQpe,GACToe,EAAQpI,IAAKzJ,EAAOA,EAAMD,EAAO+R,GACrC/R,EAAOA,EAAMA,EAAO+R,EACpBD,IAAUpI,EAEZ,OAAOzJ,CACT,CAaA,SAAgB+R,EAAOC,EAAgBF,GACrC,GAAIE,IAAWve,GAAOqe,GAAUre,EAC9B,MAAM,IAAIkB,MAAM,6CAADgD,OAA8Cqa,EAAM,SAAAra,OAAQma,IAQ7E,IAJA,IAAIvS,EAAIqQ,EAAIoC,EAAQF,GAChB5P,EAAI4P,EAEJ9B,EAAIvc,EAAKwc,EAAIxG,EAAK+F,EAAI/F,EAAK/J,EAAIjM,EAC5B8L,IAAM9L,GAAK,CAEhB,IAAMwe,EAAI/P,EAAI3C,EACR0G,EAAI/D,EAAI3C,EACRwP,EAAIiB,EAAIR,EAAIyC,EACZpS,EAAIoQ,EAAIvQ,EAAIuS,EAElB/P,EAAI3C,EAAGA,EAAI0G,EAAG+J,EAAIR,EAAGS,EAAIvQ,EAAG8P,EAAIT,EAAGrP,EAAIG,CACzC,CAEA,GADYqC,IACAuH,EAAK,MAAM,IAAI9U,MAAM,0BACjC,OAAOib,EAAII,EAAG8B,EAChB,CAUA,SAAgBI,EAAchG,GAM5B,IAEIiG,EAAWC,EAAWC,EAFpBC,GAAapG,EAAIzC,GAAO+H,EAK9B,IAAKW,EAAIjG,EAAIzC,EAAK2I,EAAI,EAAGD,EAAIX,IAAQ/d,EAAK0e,GAAKX,EAAKY,KAGpD,IAAKC,EAAIb,EAAKa,EAAInG,GAAK3B,EAAI8H,EAAGC,EAAWpG,KAAOA,EAAIzC,EAAK4I,KAGzD,GAAU,IAAND,EAAS,CACX,IAAMG,GAAUrG,EAAIzC,GAAOiI,EAC3B,OAAO,SAAwBhF,EAAe7M,GAC5C,IAAM2S,EAAO9F,EAAGnC,IAAI1K,EAAG0S,GACvB,IAAK7F,EAAG+F,IAAI/F,EAAGgG,IAAIF,GAAO3S,GAAI,MAAM,IAAIlL,MAAM,2BAC9C,OAAO6d,CACT,CACF,CAGA,IAAMG,GAAUR,EAAI1I,GAAO+H,EAC3B,OAAO,SAAwB9E,EAAe7M,GAE5C,GAAI6M,EAAGnC,IAAI1K,EAAGyS,KAAe5F,EAAG3C,IAAI2C,EAAGkG,KAAM,MAAM,IAAIje,MAAM,2BAO7D,IANA,IAAIsR,EAAImM,EAEJzU,EAAI+O,EAAGnC,IAAImC,EAAG4D,IAAI5D,EAAGkG,IAAKP,GAAIF,GAC9BnC,EAAItD,EAAGnC,IAAI1K,EAAG8S,GACdzQ,EAAIwK,EAAGnC,IAAI1K,EAAGsS,IAEVzF,EAAG+F,IAAIvQ,EAAGwK,EAAGkG,MAAM,CACzB,GAAIlG,EAAG+F,IAAIvQ,EAAGwK,EAAG/B,MAAO,OAAO+B,EAAG/B,KAGlC,IADA,IAAIoE,EAAI,EACC8D,EAAKnG,EAAGgG,IAAIxQ,GAAI6M,EAAI9I,IACvByG,EAAG+F,IAAII,EAAInG,EAAGkG,KADY7D,IAE9B8D,EAAKnG,EAAGgG,IAAIG,GAGd,IAAMC,EAAKpG,EAAGnC,IAAI5M,EAAG8L,GAAO/V,OAAOuS,EAAI8I,EAAI,IAC3CpR,EAAI+O,EAAGgG,IAAII,GACX9C,EAAItD,EAAG4D,IAAIN,EAAG8C,GACd5Q,EAAIwK,EAAG4D,IAAIpO,EAAGvE,GACdsI,EAAI8I,CACN,CACA,OAAOiB,CACT,CACF,CAEA,SAAgB+C,EAAO7G,GAMrB,GAAIA,EAAIwF,IAAQD,EAAK,CAKnB,IAAMc,GAAUrG,EAAIzC,GAAOiI,EAC3B,OAAO,SAAsBhF,EAAe7M,GAC1C,IAAM2S,EAAO9F,EAAGnC,IAAI1K,EAAG0S,GAEvB,IAAK7F,EAAG+F,IAAI/F,EAAGgG,IAAIF,GAAO3S,GAAI,MAAM,IAAIlL,MAAM,2BAC9C,OAAO6d,CACT,CACF,CAGA,GAAItG,EAAI0F,IAAQD,EAAK,CACnB,IAAMqB,GAAM9G,EAAIyF,GAAOC,EACvB,OAAO,SAAsBlF,EAAe7M,GAC1C,IAAMoT,EAAKvG,EAAG4D,IAAIzQ,EAAG2R,GACf9R,EAAIgN,EAAGnC,IAAI0I,EAAID,GACfE,EAAKxG,EAAG4D,IAAIzQ,EAAGH,GACfxI,EAAIwV,EAAG4D,IAAI5D,EAAG4D,IAAI4C,EAAI1B,GAAM9R,GAC5B8S,EAAO9F,EAAG4D,IAAI4C,EAAIxG,EAAGyG,IAAIjc,EAAGwV,EAAGkG,MACrC,IAAKlG,EAAG+F,IAAI/F,EAAGgG,IAAIF,GAAO3S,GAAI,MAAM,IAAIlL,MAAM,2BAC9C,OAAO6d,CACT,CACF,CA0BA,OAAON,EAAchG,EACvB,CArLAjW,EAAAA,IAAA2Z,EAWA3Z,EAAAA,IAAAsU,EAaAtU,EAAAA,KAAA,SAAqB+Z,EAAW6B,EAAeC,GAE7C,IADA,IAAI9R,EAAMgQ,EACH6B,KAAUpe,GACfuM,GAAOA,EACPA,GAAO8R,EAET,OAAO9R,CACT,EAGA/J,EAAAA,OAAA8b,EAgCA9b,EAAAA,cAAAic,EAwDAjc,EAAAA,OAAA8c,EA8Da9c,EAAAA,aAAe,SAAC8J,EAAa+R,GAAc,OAAMlC,EAAI7P,EAAK+R,GAAUrI,KAASA,CAAG,EA6C7F,IAAM2J,EAAe,CACnB,SAAU,UAAW,MAAO,MAAO,MAAO,OAAQ,MAClD,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,OAAQ,OAAQ,OAAQ,QAsB1B,SAAgBC,EAAShI,EAActL,EAAQ8R,GAG7C,GAAIA,EAAQpe,EAAK,MAAM,IAAIkB,MAAM,sBACjC,GAAIkd,IAAUpe,EAAK,OAAO4X,EAAEuH,IAC5B,GAAIf,IAAUpI,EAAK,OAAO1J,EAG1B,IAFA,IAAI2K,EAAIW,EAAEuH,IACNhI,EAAI7K,EACD8R,EAAQpe,GACToe,EAAQpI,IAAKiB,EAAIW,EAAEiF,IAAI5F,EAAGE,IAC9BA,EAAIS,EAAEqH,IAAI9H,GACViH,IAAUpI,EAEZ,OAAOiB,CACT,CAMA,SAAgB4I,EAAiBjI,EAAckI,GAC7C,IAAMC,EAAM,IAAI5d,MAAM2d,EAAKzf,QAErB2f,EAAiBF,EAAKnD,QAAO,SAACC,EAAKtQ,EAAK7I,GAC5C,OAAImU,EAAEqI,IAAI3T,GAAasQ,GACvBmD,EAAItc,GAAKmZ,EACFhF,EAAEiF,IAAID,EAAKtQ,GACpB,GAAGsL,EAAEuH,KAECe,EAAWtI,EAAEuI,IAAIH,GAOvB,OALAF,EAAKM,aAAY,SAACxD,EAAKtQ,EAAK7I,GAC1B,OAAImU,EAAEqI,IAAI3T,GAAasQ,GACvBmD,EAAItc,GAAKmU,EAAEiF,IAAID,EAAKmD,EAAItc,IACjBmU,EAAEiF,IAAID,EAAKtQ,GACpB,GAAG4T,GACIH,CACT,CAgBA,SAAgBvG,EAAQpN,EAAWkN,GAEjC,IAAM+G,OAA6B/f,IAAfgZ,EAA2BA,EAAalN,EAAEjJ,SAAS,GAAG9C,OAE1E,MAAO,CAAEiZ,WAAY+G,EAAa9G,YADd5C,KAAKC,KAAKyJ,EAAc,GAE9C,CA8GA,SAAgBC,EAAoBC,GAClC,GAA0B,kBAAfA,EAAyB,MAAM,IAAIrf,MAAM,8BACpD,IAAMsf,EAAYD,EAAWpd,SAAS,GAAG9C,OACzC,OAAOsW,KAAKC,KAAK4J,EAAY,EAC/B,CASA,SAAgBC,EAAiBF,GAC/B,IAAMlgB,EAASigB,EAAoBC,GACnC,OAAOlgB,EAASsW,KAAKC,KAAKvW,EAAS,EACrC,CA5MAmC,EAAAA,cAAA,SAAiC4Z,GAC/B,IAMM5F,EAAOmJ,EAAahD,QAAO,SAACjP,EAAKgP,GAErC,OADAhP,EAAIgP,GAAO,WACJhP,CACT,GATgB,CACd+L,MAAO,SACPiH,KAAM,SACNC,MAAO,gBACPC,KAAM,kBAMR,OAAO,EAAA7K,EAAAmD,gBAAekD,EAAO5F,EAC/B,EAQAhU,EAAAA,MAAAod,EAoBApd,EAAAA,cAAAqd,EAmBArd,EAAAA,MAAA,SAAyBoV,EAAciJ,EAAQC,GAC7C,OAAOlJ,EAAEiF,IAAIgE,EAAoB,kBAARC,EAAmBxC,EAAOwC,EAAKlJ,EAAE6B,OAAS7B,EAAEuI,IAAIW,GAC3E,EAGAte,EAAAA,WAAA,SAA8BoV,GAC5B,IAAMmJ,GAAiBnJ,EAAE6B,MAAQzD,GAAO+H,EACxC,OAAO,SAACxB,GACN,IAAMtF,EAAIW,EAAEd,IAAIyF,EAAGwE,GACnB,OAAOnJ,EAAEoH,IAAI/H,EAAGW,EAAEV,OAASU,EAAEoH,IAAI/H,EAAGW,EAAEuH,IACxC,CACF,EAGA3c,EAAAA,QAAAgX,EAoBAhX,EAAAA,MAAA,SACEiX,EACAuH,GAEmC,IADnCC,EAAI7gB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACJ8gB,EAAA9gB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiC,CAAC,EAElC,GAAIqZ,GAASzZ,EAAK,MAAM,IAAIkB,MAAM,iCAADgD,OAAkCuV,IACnE,IAAA0H,EAAiD3H,EAAQC,EAAOuH,GAA5CJ,EAAIO,EAAhB7H,WAA+BqH,EAAKQ,EAAlB5H,YAC1B,GAAIoH,EAAQ,KAAM,MAAM,IAAIzf,MAAM,mDAClC,IAAMkgB,EAAQ9B,EAAO7F,GACf7B,EAAuBvK,OAAOwI,OAAO,CACzC4D,MAAAA,EACAmH,KAAAA,EACAD,MAAAA,EACAD,MAAM,EAAA3K,EAAAsL,SAAQT,GACd1J,KAAMlX,EACNmf,IAAKnJ,EACLN,OAAQ,SAACpJ,GAAG,OAAK6P,EAAI7P,EAAKmN,EAAM,EAChC6H,QAAS,SAAChV,GACR,GAAmB,kBAARA,EACT,MAAM,IAAIpL,MAAM,+CAADgD,cAAuDoI,IACxE,OAAOtM,GAAOsM,GAAOA,EAAMmN,CAC7B,EACAwG,IAAK,SAAC3T,GAAG,OAAKA,IAAQtM,CAAG,EACzBuhB,MAAO,SAACjV,GAAG,OAAMA,EAAM0J,KAASA,CAAG,EACnCM,IAAK,SAAChK,GAAG,OAAK6P,GAAK7P,EAAKmN,EAAM,EAC9BuF,IAAK,SAAC6B,EAAKC,GAAG,OAAKD,IAAQC,CAAG,EAE9B7B,IAAK,SAAC3S,GAAG,OAAK6P,EAAI7P,EAAMA,EAAKmN,EAAM,EACnC7O,IAAK,SAACiW,EAAKC,GAAG,OAAK3E,EAAI0E,EAAMC,EAAKrH,EAAM,EACxCiG,IAAK,SAACmB,EAAKC,GAAG,OAAK3E,EAAI0E,EAAMC,EAAKrH,EAAM,EACxCoD,IAAK,SAACgE,EAAKC,GAAG,OAAK3E,EAAI0E,EAAMC,EAAKrH,EAAM,EACxC3C,IAAK,SAACxK,EAAK8R,GAAK,OAAKwB,EAAMhI,EAAGtL,EAAK8R,EAAM,EACzCjB,IAAK,SAAC0D,EAAKC,GAAG,OAAK3E,EAAI0E,EAAMvC,EAAOwC,EAAKrH,GAAQA,EAAM,EAGvD+H,KAAM,SAAClV,GAAG,OAAKA,EAAMA,CAAG,EACxBmV,KAAM,SAACZ,EAAKC,GAAG,OAAKD,EAAMC,CAAG,EAC7BY,KAAM,SAACb,EAAKC,GAAG,OAAKD,EAAMC,CAAG,EAC7Ba,KAAM,SAACd,EAAKC,GAAG,OAAKD,EAAMC,CAAG,EAE7BX,IAAK,SAAC7T,GAAG,OAAKgS,EAAOhS,EAAKmN,EAAM,EAChCmI,KAAMV,EAAMU,MAAS,SAACxV,GAAC,OAAKgV,EAAMxJ,EAAGxL,EAAE,EACvCyV,YAAa,SAACC,GAAG,OAAKjC,EAAcjI,EAAGkK,EAAI,EAG3CC,KAAM,SAACjW,EAAG2C,EAAGwH,GAAC,OAAMA,EAAIxH,EAAI3C,CAAC,EAC7BkW,QAAS,SAAC1V,GAAG,OAAM2U,GAAO,EAAAlL,EAAAkM,iBAAgB3V,EAAKqU,IAAS,EAAA5K,EAAAmM,iBAAgB5V,EAAKqU,EAAM,EACnFwB,UAAW,SAAC7W,GACV,GAAIA,EAAMjL,SAAWsgB,EACnB,MAAM,IAAIzf,MAAM,0BAADgD,OAA2Byc,EAAK,UAAAzc,OAASoH,EAAMjL,SAChE,OAAO4gB,GAAO,EAAAlL,EAAAqM,iBAAgB9W,IAAS,EAAAyK,EAAA4D,iBAAgBrO,EACzD,IAEF,OAAO+B,OAAOwI,OAAO+B,EACvB,EAEApV,EAAAA,UAAA,SAA6ByW,EAAejC,GAC1C,IAAKiC,EAAGsI,MAAO,MAAM,IAAIrgB,MAAM,4BAC/B,IAAM6d,EAAO9F,EAAG2I,KAAK5K,GACrB,OAAOiC,EAAGsI,MAAMxC,GAAQA,EAAO9F,EAAG3C,IAAIyI,EACxC,EAEAvc,EAAAA,WAAA,SAA8ByW,EAAejC,GAC3C,IAAKiC,EAAGsI,MAAO,MAAM,IAAIrgB,MAAM,4BAC/B,IAAM6d,EAAO9F,EAAG2I,KAAK5K,GACrB,OAAOiC,EAAGsI,MAAMxC,GAAQ9F,EAAG3C,IAAIyI,GAAQA,CACzC,EAQAvc,EAAAA,oBAAA,SACEa,EACAgf,GACY,IAAZpB,EAAI7gB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGEkiB,GADNjf,GAAO,EAAA0S,EAAAwM,aAAY,cAAelf,IACbhD,OACfmiB,EAAShJ,EAAQ6I,GAAY9I,YAAc,EACjD,GAAIiJ,EAAS,IAAMF,EAAUE,GAAUF,EAAU,KAC/C,MAAM,IAAIphB,MAAM,iCAADgD,OAAkCse,EAAM,8BAAAte,OAA6Boe,IAEtF,OAAOnG,EADK8E,GAAO,EAAAlL,EAAAqM,iBAAgB/e,IAAQ,EAAA0S,EAAA4D,iBAAgBtW,GAC3Cgf,EAAarM,GAAOA,CACtC,EAQAxT,EAAAA,oBAAA8d,EAaA9d,EAAAA,iBAAAie,EAkBAje,EAAAA,eAAA,SAA+BxB,EAAiBuf,GAAgC,IAAZU,EAAI7gB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChEqiB,EAAMzhB,EAAIX,OACVqiB,EAAWpC,EAAoBC,GAC/BiC,EAAS/B,EAAiBF,GAEhC,GAAIkC,EAAM,IAAMA,EAAMD,GAAUC,EAAM,KACpC,MAAM,IAAIvhB,MAAM,YAADgD,OAAase,EAAM,8BAAAte,OAA6Bue,IACjE,IAEME,EAAUxG,EAFJ8E,GAAO,EAAAlL,EAAA4D,iBAAgB3Y,IAAO,EAAA+U,EAAAqM,iBAAgBphB,GAEjCuf,EAAavK,GAAOA,EAC7C,OAAOiL,GAAO,EAAAlL,EAAAkM,iBAAgBU,EAASD,IAAY,EAAA3M,EAAAmM,iBAAgBS,EAASD,EAC9E,wZC9dA,IAAM1iB,EAAMC,OAAO,GACb+V,EAAM/V,OAAO,GACb8d,EAAM9d,OAAO,GAWnB,SAAgB8Z,EAAQjO,GACtB,OACEA,aAAa5J,YACP,MAAL4J,GAA0B,kBAANA,GAAyC,eAAvBA,EAAE8W,YAAYC,IAEzD,CALArgB,EAAAA,QAAAuX,EAQA,IAAM+I,EAAwB3gB,MAAMd,KAAK,CAAEhB,OAAQ,MAAO,SAAC0iB,EAAGtf,GAAC,OAC7DA,EAAEN,SAAS,IAAI6f,SAAS,EAAG,IAAI,IAKjC,SAAgB1f,EAAWgI,GACzB,IAAKyO,EAAQzO,GAAQ,MAAM,IAAIpK,MAAM,uBAGrC,IADA,IAAIiK,EAAM,GACD1H,EAAI,EAAGA,EAAI6H,EAAMjL,OAAQoD,IAChC0H,GAAO2X,EAAMxX,EAAM7H,IAErB,OAAO0H,CACT,CAEA,SAAgB8X,EAAoB3W,GAClC,IAAMnB,EAAMmB,EAAInJ,SAAS,IACzB,OAAoB,EAAbgI,EAAI9K,OAAa,IAAH6D,OAAOiH,GAAQA,CACtC,CAEA,SAAgB+X,EAAY/X,GAC1B,GAAmB,kBAARA,EAAkB,MAAM,IAAIjK,MAAM,mCAAqCiK,GAElF,OAAOlL,OAAe,KAARkL,EAAa,IAAM,KAAHjH,OAAQiH,GACxC,CAnBA3I,EAAAA,WAAAc,EAUAd,EAAAA,oBAAAygB,EAKAzgB,EAAAA,YAAA0gB,EAOA,IAAMC,EAAS,CAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC7D,SAASC,EAAcC,GACrB,OAAIA,GAAQR,EAAOC,IAAMO,GAAQR,EAAOE,GAAWM,EAAOR,EAAOC,GAC7DO,GAAQR,EAAOG,IAAMK,GAAQR,EAAOI,GAAWI,GAAQR,EAAOG,GAAK,IACnEK,GAAQR,EAAOK,IAAMG,GAAQR,EAAOM,GAAWE,GAAQR,EAAOK,GAAK,SAAvE,CAEF,CAKA,SAAgBI,EAAWzY,GACzB,GAAmB,kBAARA,EAAkB,MAAM,IAAIjK,MAAM,mCAAqCiK,GAClF,IAAM0Y,EAAK1Y,EAAI9K,OACTyjB,EAAKD,EAAK,EAChB,GAAIA,EAAK,EAAG,MAAM,IAAI3iB,MAAM,0DAA4D2iB,GAExF,IADA,IAAM7W,EAAQ,IAAI9K,WAAW4hB,GACpBC,EAAK,EAAGC,EAAK,EAAGD,EAAKD,EAAIC,IAAMC,GAAM,EAAG,CAC/C,IAAMC,EAAKP,EAAcvY,EAAIgF,WAAW6T,IAClCxE,EAAKkE,EAAcvY,EAAIgF,WAAW6T,EAAK,IAC7C,QAAW1jB,IAAP2jB,QAA2B3jB,IAAPkf,EAAkB,CACxC,IAAMmE,EAAOxY,EAAI6Y,GAAM7Y,EAAI6Y,EAAK,GAChC,MAAM,IAAI9iB,MAAM,+CAAiDyiB,EAAO,cAAgBK,EAC1F,CACAhX,EAAM+W,GAAW,GAALE,EAAUzE,CACxB,CACA,OAAOxS,CACT,CAWA,SAAgBkV,EAAgB9V,EAAoBqW,GAClD,OAAOmB,EAAWxX,EAAEjJ,SAAS,IAAI6f,SAAe,EAANP,EAAS,KACrD,CA0CA,SAAgBnN,IAEd,IADA,IAAI4O,EAAM,EACDzgB,EAAI,EAAGA,EAAIrD,UAAOC,OAAQoD,IAAK,CACtC,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,GACjB,IAAKsW,EAAQjO,GAAI,MAAM,IAAI5K,MAAM,uBACjCgjB,GAAOpY,EAAEzL,MACX,CAGA,IAFA,IAAIkM,EAAM,IAAIrK,WAAWgiB,GACrBC,EAAM,EACD1gB,EAAI,EAAGA,EAAIrD,UAAOC,OAAQoD,IAAK,CACtC,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,GACjB8I,EAAIuM,IAAIhN,EAAGqY,GACXA,GAAOrY,EAAEzL,MACX,CACA,OAAOkM,CACT,CAtFA/J,EAAAA,WAAAohB,EAmBAphB,EAAAA,gBAAA,SAAgC8I,GAC9B,OAAO4X,EAAY5f,EAAWgI,GAChC,EACA9I,EAAAA,gBAAA,SAAgC8I,GAC9B,IAAKyO,EAAQzO,GAAQ,MAAM,IAAIpK,MAAM,uBACrC,OAAOgiB,EAAY5f,EAAWpB,WAAWb,KAAKiK,GAAOgR,WACvD,EAEA9Z,EAAAA,gBAAA0f,EAGA1f,EAAAA,gBAAA,SAAgC4J,EAAoBqW,GAClD,OAAOP,EAAgB9V,EAAGqW,GAAKnG,SACjC,EAEA9Z,EAAAA,mBAAA,SAAmC4J,GACjC,OAAOwX,EAAWX,EAAoB7W,GACxC,EAWA5J,EAAAA,YAAA,SAA4B4hB,EAAejZ,EAAUkZ,GACnD,IAAI9X,EACJ,GAAmB,kBAARpB,EACT,IACEoB,EAAMqX,EAAWzY,EACnB,CAAE,MAAOxI,GACP,MAAM,IAAIzB,MAAM,GAADgD,OAAIkgB,EAAK,oCAAAlgB,OAAmCiH,EAAG,cAAAjH,OAAavB,GAC7E,KACK,KAAIoX,EAAQ5O,GAKjB,MAAM,IAAIjK,MAAM,GAADgD,OAAIkgB,EAAK,sCAFxB7X,EAAMrK,WAAWb,KAAK8J,EAGxB,CACA,IAAMsX,EAAMlW,EAAIlM,OAChB,GAA8B,kBAAnBgkB,GAA+B5B,IAAQ4B,EAChD,MAAM,IAAInjB,MAAM,GAADgD,OAAIkgB,EAAK,cAAAlgB,OAAamgB,EAAc,gBAAAngB,OAAeue,IACpE,OAAOlW,CACT,EAKA/J,EAAAA,YAAA8S,EAkBA9S,EAAAA,WAAA,SAA2BsJ,EAAe2C,GACxC,GAAI3C,EAAEzL,SAAWoO,EAAEpO,OAAQ,OAAO,EAElC,IADA,IAAIikB,EAAO,EACF7gB,EAAI,EAAGA,EAAIqI,EAAEzL,OAAQoD,IAAK6gB,GAAQxY,EAAErI,GAAKgL,EAAEhL,GACpD,OAAgB,IAAT6gB,CACT,EASA9hB,EAAAA,YAAA,SAA4BwD,GAC1B,GAAmB,kBAARA,EAAkB,MAAM,IAAI9E,MAAM,oCAADgD,cAA4C8B,IACxF,OAAO,IAAI9D,YAAW,IAAIqiB,aAAchjB,OAAOyE,GACjD,EAQAxD,EAAAA,OAAA,SAAuB4J,GACrB,IAAIqW,EACJ,IAAKA,EAAM,EAAGrW,EAAIpM,EAAKoM,IAAM4J,EAAKyM,GAAO,GACzC,OAAOA,CACT,EAOAjgB,EAAAA,OAAA,SAAuB4J,EAAWoY,GAChC,OAAQpY,GAAKnM,OAAOukB,GAAQxO,CAC9B,EAKaxT,EAAAA,OAAS,SAAC4J,EAAWoY,EAAavjB,GAC7C,OAAOmL,GAAMnL,EAAQ+U,EAAMhW,IAAQC,OAAOukB,EAC5C,EAMahiB,EAAAA,QAAU,SAAC4J,GAAS,OAAM2R,GAAO9d,OAAOmM,EAAI,IAAM4J,CAAG,EAIlE,IAAMyO,EAAM,SAACvd,GAAU,OAAK,IAAIhF,WAAWgF,EAAK,EAC1Cwd,EAAO,SAACjX,GAAQ,OAAKvL,WAAWb,KAAKoM,EAAI,EAS/CjL,EAAAA,eAAA,SACE8f,EACAqC,EACAC,GAEA,GAAuB,kBAAZtC,GAAwBA,EAAU,EAAG,MAAM,IAAIphB,MAAM,4BAChE,GAAwB,kBAAbyjB,GAAyBA,EAAW,EAAG,MAAM,IAAIzjB,MAAM,6BAClE,GAAsB,oBAAX0jB,EAAuB,MAAM,IAAI1jB,MAAM,6BAElD,IAAI+K,EAAIwY,EAAInC,GACR9U,EAAIiX,EAAInC,GACR7e,EAAI,EACFohB,EAAQ,WACZ5Y,EAAET,KAAK,GACPgC,EAAEhC,KAAK,GACP/H,EAAI,CACN,EACM0V,EAAI,WAAH,QAAAjQ,EAAA9I,UAAAC,OAAOoO,EAAe,IAAAtM,MAAA+G,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAfqF,EAAerF,GAAAhJ,UAAAgJ,GAAA,OAAKwb,EAAMhc,WAAC,EAAD,CAAC4E,EAAGvB,GAAC/H,OAAKuK,GAAE,EAC9CqW,EAAS,WAAiB,IAAhBC,EAAI3kB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGqkB,IAErBjX,EAAI2L,EAAEuL,EAAK,CAAC,IAAQK,GACpB9Y,EAAIkN,IACgB,IAAhB4L,EAAK1kB,SACTmN,EAAI2L,EAAEuL,EAAK,CAAC,IAAQK,GACpB9Y,EAAIkN,IACN,EACM6L,EAAM,WAEV,GAAIvhB,KAAO,IAAM,MAAM,IAAIvC,MAAM,2BAGjC,IAFA,IAAIuhB,EAAM,EACJwC,EAAoB,GACnBxC,EAAMkC,GAAU,CAErB,IAAMO,GADNjZ,EAAIkN,KACSpV,QACbkhB,EAAIhY,KAAKiY,GACTzC,GAAOxW,EAAE5L,MACX,CACA,OAAOiV,EAAW1M,WAAC,EAAGqc,EACxB,EASA,OARiB,SAACF,EAAkBI,GAClCN,IACAC,EAAOC,GAEP,IADA,IAAIxY,OAAqBjM,IAChBiM,EAAM4Y,EAAKH,OAASF,IAE7B,OADAD,IACOtY,CACT,CAEF,EAIA,IAAM6Y,EAAe,CACnBC,OAAQ,SAAC3I,GAAQ,MAAoB,kBAARA,CAAgB,EAC7C4I,SAAU,SAAC5I,GAAQ,MAAoB,oBAARA,CAAkB,EACjD6I,QAAS,SAAC7I,GAAQ,MAAoB,mBAARA,CAAiB,EAC/C8I,OAAQ,SAAC9I,GAAQ,MAAoB,kBAARA,CAAgB,EAC7C+I,mBAAoB,SAAC/I,GAAQ,MAAoB,kBAARA,GAAoB3C,EAAQ2C,EAAI,EACzExR,cAAe,SAACwR,GAAQ,OAAKzR,OAAOC,cAAcwR,EAAI,EACtD1P,MAAO,SAAC0P,GAAQ,OAAKva,MAAMC,QAAQsa,EAAI,EACvCN,MAAO,SAACM,EAAUgJ,GAAW,OAAMA,EAAezM,GAAGqI,QAAQ5E,EAAI,EACjErZ,KAAM,SAACqZ,GAAQ,MAAoB,oBAARA,GAAsBzR,OAAOC,cAAcwR,EAAInC,UAAU,GAMtF/X,EAAAA,eAAA,SACEkjB,EACAC,GAgBA,IAf6B,IAA7BC,EAAAxlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA2B,CAAC,EAEtBylB,EAAa,SAACC,EAAoBrU,EAAiBsU,GACvD,IAAMC,EAAWZ,EAAa3T,GAC9B,GAAwB,oBAAbuU,EACT,MAAM,IAAI9kB,MAAM,sBAADgD,OAAuBuN,EAAI,yBAE5C,IAAMiL,EAAMgJ,EAAOI,GACnB,KAAIC,QAAsBzlB,IAARoc,KACbsJ,EAAStJ,EAAKgJ,GACjB,MAAM,IAAIxkB,MAAM,iBAADgD,OACI8L,OAAO8V,GAAU,KAAA5hB,OAAIwY,EAAG,MAAAxY,cAAYwY,EAAG,gBAAAxY,OAAeuN,GAG7E,EACAwU,EAAA,EAAA7Y,EAAgCC,OAAOC,QAAQqY,GAAWM,EAAA7Y,EAAA/M,OAAA4lB,IAAA,CAArD,IAAA1Y,EAAAhL,EAAA6K,EAAA6Y,GAAA,GAAuDJ,EAAvCtY,EAAA,GAAMA,EAAA,IAA8D,EAAO,CAChG,IAAK,IAAL2Y,EAAA,EAAAC,EAAgC9Y,OAAOC,QAAQsY,GAAcM,EAAAC,EAAA9lB,OAAA6lB,IAAA,CAAxD,IAAAE,EAAA7jB,EAAA4jB,EAAAD,GAAA,GAA0DL,EAA1CO,EAAA,GAAMA,EAAA,IAAiE,EAAM,CAClG,OAAOV,CACT,mSCjTA,IAAAvJ,EAAA3c,EAAA,KACA6mB,EAAA7mB,EAAA,OACAuW,EAAAvW,EAAA,OACA8mB,EAAA9mB,EAAA,OAgIA,IAAyB+mB,EAAyBF,EAA1C1M,gBAAkC6M,EAAQH,EAApBzC,WACjBphB,EAAAA,IAAM,CAEjBikB,IAAG,SAAAC,GAAAjgB,EAAAkgB,EAAAD,GAAA,IAAA3d,EAAArC,EAAAigB,GACD,SAAAA,IAAkB,IAANrL,EAAClb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAAQ,EAAA,KAAA+lB,GAAA5d,EAAAf,KAAA,KACVsT,EACR,CAAC,OAAAva,EAAA4lB,EAAA,CAHA,CAGAC,EAHuB1lB,QAK1B2lB,UAAS,SAAC3f,GACR,IAAa4f,EAAMtkB,EAAAukB,IAAXN,IACR,GAAIvf,EAAK7G,OAAS,GAAiB,IAAZ6G,EAAK,GAAa,MAAM,IAAI4f,EAAE,iCACrD,IAAMrE,EAAMvb,EAAK,GACXqF,EAAMrF,EAAKoH,SAAS,EAAGmU,EAAM,GACnC,IAAKA,GAAOlW,EAAIlM,SAAWoiB,EAAK,MAAM,IAAIqE,EAAE,2CAK5C,GAAa,IAATva,EAAI,GAAiB,MAAM,IAAIua,EAAE,uCACrC,GAAe,IAAXva,EAAI,MAA0B,IAATA,EAAI,IAC3B,MAAM,IAAIua,EAAE,uDACd,MAAO,CAAE3P,EAAGoP,EAAIha,GAAMiC,EAAGtH,EAAKoH,SAASmU,EAAM,GAC/C,EACAuE,MAAK,SAAC7b,GAEJ,IAAa2b,EAAMtkB,EAAAukB,IAAXN,IACFvf,EAAsB,kBAARiE,EAAmBqb,EAAIrb,GAAOA,EAClD,IAAKkb,EAAGtM,QAAQ7S,GAAO,MAAM,IAAIhG,MAAM,iBACvC,IAAIsN,EAAItH,EAAK7G,OACb,GAAImO,EAAI,GAAgB,IAAXtH,EAAK,GAAY,MAAM,IAAI4f,EAAE,yBAC1C,GAAI5f,EAAK,KAAOsH,EAAI,EAAG,MAAM,IAAIsY,EAAE,uCACnC,IAAAG,EAA4BzkB,EAAAukB,IAAIF,UAAU3f,EAAKoH,SAAS,IAA7CkE,EAACyU,EAAJ9P,EAAS+P,EAAMD,EAATzY,EACd2Y,EAAgC3kB,EAAAukB,IAAIF,UAAUK,GAAnCzU,EAAC0U,EAAJhQ,EACR,GAD2BgQ,EAAb3Y,EACCnO,OAAQ,MAAM,IAAIymB,EAAE,+CACnC,MAAO,CAAEtU,EAAAA,EAAGC,EAAAA,EACd,EACA2U,WAAU,SAAC/U,GAET,IAAMtO,EAAQ,SAAC0O,GAAS,OAA0C,EAA5BxH,OAAOvH,SAAS+O,EAAE,GAAI,IAAe,KAAOA,EAAIA,CAAC,EACjF0G,EAAI,SAAC7M,GACT,IAAMnB,EAAMmB,EAAInJ,SAAS,IACzB,OAAoB,EAAbgI,EAAI9K,OAAa,IAAH6D,OAAOiH,GAAQA,CACtC,EACMsH,EAAI1O,EAAMoV,EAAE9G,EAAII,IAChBD,EAAIzO,EAAMoV,EAAE9G,EAAIG,IAChB6U,EAAM5U,EAAEpS,OAAS,EACjBinB,EAAM9U,EAAEnS,OAAS,EACjB6kB,EAAK/L,EAAEkO,GACPE,EAAKpO,EAAEmO,GACb,MAAO,KAAPpjB,OAAYiV,EAAEmO,EAAMD,EAAM,GAAE,MAAAnjB,OAAKqjB,GAAErjB,OAAGsO,EAAC,MAAAtO,OAAKghB,GAAEhhB,OAAGuO,EACnD,GAKF,IAAMzS,EAAMC,OAAO,GAAI+V,EAAM/V,OAAO,GAAI8d,EAAM9d,OAAO,GAAI+d,EAAM/d,OAAO,GAAIge,EAAMhe,OAAO,GAEvF,SAAgBunB,EAAqBhR,GACnC,IAAM3I,EArGR,SAA8BkL,GAC5B,IAAMvC,GAAO,EAAA8P,EAAAmB,eAAc1O,GAC3BsN,EAAGnN,eACD1C,EACA,CACE1K,EAAG,QACH2C,EAAG,SAEL,CACEiZ,yBAA0B,QAC1BC,eAAgB,UAChBC,cAAe,WACfjK,cAAe,WACfkK,mBAAoB,UACpB1F,UAAW,WACXH,QAAS,aAGb,IAAQ8F,EAAgBtR,EAAhBsR,KAAM7O,EAAUzC,EAAVyC,GAAInN,EAAM0K,EAAN1K,EAClB,GAAIgc,EAAM,CACR,IAAK7O,EAAG+F,IAAIlT,EAAGmN,EAAG/B,MAChB,MAAM,IAAIhW,MAAM,qEAElB,GACkB,kBAAT4mB,GACc,kBAAdA,EAAKC,MACgB,oBAArBD,EAAKE,YAEZ,MAAM,IAAI9mB,MAAM,oEAEpB,CACA,OAAOmM,OAAOwI,OAAMD,EAAC,CAAC,EAAIY,GAC5B,CAqEgByR,CAAkBzR,GACxByC,EAAOpL,EAAPoL,GAEF+I,EACJnU,EAAMmU,SACL,SAACkG,EAAwBC,EAAyBC,GACjD,IAAMtc,EAAIqc,EAAME,WAChB,OAAOhC,EAAG/Q,YAAYpT,WAAWb,KAAK,CAAC,IAAQ4X,EAAG+I,QAAQlW,EAAEyQ,GAAItD,EAAG+I,QAAQlW,EAAE0Q,GAC/E,EACI2F,EACJtU,EAAMsU,WACL,SAAC7W,GAEA,IAAMgd,EAAOhd,EAAMgD,SAAS,GAI5B,MAAO,CAAEiO,EAFCtD,EAAGkJ,UAAUmG,EAAKha,SAAS,EAAG2K,EAAG0H,QAE/BnE,EADFvD,EAAGkJ,UAAUmG,EAAKha,SAAS2K,EAAG0H,MAAO,EAAI1H,EAAG0H,QAExD,EAMF,SAAS4H,EAAoBhM,GAC3B,IAAQzQ,EAAS+B,EAAT/B,EAAG2C,EAAMZ,EAANY,EACL+Z,EAAKvP,EAAGgG,IAAI1C,GACZkM,EAAKxP,EAAG4D,IAAI2L,EAAIjM,GACtB,OAAOtD,EAAGrO,IAAIqO,EAAGrO,IAAI6d,EAAIxP,EAAG4D,IAAIN,EAAGzQ,IAAK2C,EAC1C,CAKA,IAAKwK,EAAG+F,IAAI/F,EAAGgG,IAAIpR,EAAMwL,IAAKkP,EAAoB1a,EAAMuL,KACtD,MAAM,IAAIlY,MAAM,+CAGlB,SAASwnB,EAAmBpc,GAC1B,MAAsB,kBAARA,GAAoBtM,EAAMsM,GAAOA,EAAMuB,EAAMzB,CAC7D,CACA,SAASuc,EAASrc,GAChB,IAAKoc,EAAmBpc,GAAM,MAAM,IAAIpL,MAAM,8CAChD,CAGA,SAAS0nB,EAAuB5nB,GAC9B,IAOIsL,EAP8Buc,EAA4Chb,EAAtE6Z,yBAAmCnO,EAAmC1L,EAAnC0L,YAAaoO,EAAsB9Z,EAAtB8Z,eAAgBvb,EAAMyB,EAANzB,EACxE,GAAIyc,GAA0B,kBAAR7nB,EAAkB,CAGtC,GAFIqlB,EAAGtM,QAAQ/Y,KAAMA,EAAMqlB,EAAG/iB,WAAWtC,IAEtB,kBAARA,IAAqB6nB,EAAQC,SAAS9nB,EAAIX,QAAS,MAAM,IAAIa,MAAM,eAC9EF,EAAMA,EAAIgiB,SAAuB,EAAdzJ,EAAiB,IACtC,CAEA,IACEjN,EACiB,kBAARtL,EACHA,EACAqlB,EAAG1M,iBAAgB,EAAA5D,EAAAwM,aAAY,cAAevhB,EAAKuY,GAC3D,CAAE,MAAOpS,GACP,MAAM,IAAIjG,MAAM,uBAADgD,OAAwBqV,EAAW,+BAAArV,cAAqClD,GACzF,CAGA,OAFI2mB,IAAgBrb,EAAM6P,EAAIA,IAAI7P,EAAKF,IACvCuc,EAASrc,GACFA,CACT,CAEA,IAAMyc,EAAmB,IAAIC,IAC7B,SAASC,EAAeC,GACtB,KAAMA,aAAiB9L,GAAQ,MAAM,IAAIlc,MAAM,2BACjD,CACA,IAKMkc,EAAK,WAIT,SAAAA,EACW+L,EACAC,EACAC,GAET,GAFczoB,EAAA,KAAAwc,GAFL,KAAA+L,GAAAA,EACA,KAAAC,GAAAA,EACA,KAAAC,GAAAA,EAEC,MAANF,IAAelQ,EAAGqI,QAAQ6H,GAAK,MAAM,IAAIjoB,MAAM,cACnD,GAAU,MAANkoB,IAAenQ,EAAGqI,QAAQ8H,GAAK,MAAM,IAAIloB,MAAM,cACnD,GAAU,MAANmoB,IAAepQ,EAAGqI,QAAQ+H,GAAK,MAAM,IAAInoB,MAAM,aACrD,CA6CC,OA1CDH,EAAAqc,EAAA,EAAApc,IAAA,IAAAiO,IAWA,WACE,OAAOpO,KAAKwnB,WAAW9L,CACzB,GAAC,CAAAvb,IAAA,IAAAiO,IACD,WACE,OAAOpO,KAAKwnB,WAAW7L,CACzB,GAEA,CAAAxb,IAAA,iBAAAC,MAgCA,SAAe4V,GACbhW,KAAK+X,aAAe/B,EACpBkS,EAAiBO,OAAOzoB,KAC1B,GAEA,CAAAG,IAAA,iBAAAC,MACA,WACE,GAAIJ,KAAKof,MAAO,CAId,GAAIpS,EAAMga,qBAAuB5O,EAAGgH,IAAIpf,KAAKuoB,IAAK,OAClD,MAAM,IAAIloB,MAAM,kBAClB,CAEA,IAAAqoB,EAAiB1oB,KAAKwnB,WAAd9L,EAACgN,EAADhN,EAAGC,EAAC+M,EAAD/M,EAEX,IAAKvD,EAAGqI,QAAQ/E,KAAOtD,EAAGqI,QAAQ9E,GAAI,MAAM,IAAItb,MAAM,4BACtD,IAAMsoB,EAAOvQ,EAAGgG,IAAIzC,GACd7Q,EAAQ4c,EAAoBhM,GAClC,IAAKtD,EAAG+F,IAAIwK,EAAM7d,GAAQ,MAAM,IAAIzK,MAAM,qCAC1C,IAAKL,KAAK+mB,gBAAiB,MAAM,IAAI1mB,MAAM,yCAC7C,GAAC,CAAAF,IAAA,WAAAC,MACD,WACE,IAAQub,EAAM3b,KAAKwnB,WAAX7L,EACR,GAAIvD,EAAGsI,MAAO,OAAQtI,EAAGsI,MAAM/E,GAC/B,MAAM,IAAItb,MAAM,8BAClB,GAEA,CAAAF,IAAA,SAAAC,MAGA,SAAOioB,GACLD,EAAeC,GACf,IAAYO,EAAuB5oB,KAA3BsoB,GAAYO,EAAe7oB,KAAnBuoB,GAAYO,EAAO9oB,KAAXwoB,GACZO,EAAuBV,EAA3BC,GAAYU,EAAeX,EAAnBE,GAAYU,EAAOZ,EAAXG,GAClBU,EAAK9Q,EAAG+F,IAAI/F,EAAG4D,IAAI4M,EAAIK,GAAK7Q,EAAG4D,IAAI+M,EAAID,IACvCK,EAAK/Q,EAAG+F,IAAI/F,EAAG4D,IAAI6M,EAAII,GAAK7Q,EAAG4D,IAAIgN,EAAIF,IAC7C,OAAOI,GAAMC,CACf,GAEA,CAAAhpB,IAAA,SAAAC,MAGA,WACE,OAAO,IAAImc,EAAMvc,KAAKsoB,GAAIlQ,EAAG3C,IAAIzV,KAAKuoB,IAAKvoB,KAAKwoB,GAClD,GAKA,CAAAroB,IAAA,SAAAC,MACA,WACE,IAAQ6K,EAAS+B,EAAT/B,EAAG2C,EAAMZ,EAANY,EACLwb,EAAKhR,EAAG4D,IAAIpO,EAAGuP,GACTyL,EAAuB5oB,KAA3BsoB,GAAYO,EAAe7oB,KAAnBuoB,GAAYO,EAAO9oB,KAAXwoB,GACpBa,EAAKjR,EAAG/B,KAAMiT,EAAKlR,EAAG/B,KAAMkT,EAAKnR,EAAG/B,KACpC9O,EAAK6Q,EAAG4D,IAAI4M,EAAIA,GAChBhhB,EAAKwQ,EAAG4D,IAAI6M,EAAIA,GAChBtK,EAAKnG,EAAG4D,IAAI8M,EAAIA,GAChBU,EAAKpR,EAAG4D,IAAI4M,EAAIC,GA4BpB,OA3BAW,EAAKpR,EAAGrO,IAAIyf,EAAIA,GAChBD,EAAKnR,EAAG4D,IAAI4M,EAAIE,GAChBS,EAAKnR,EAAGrO,IAAIwf,EAAIA,GAChBF,EAAKjR,EAAG4D,IAAI/Q,EAAGse,GACfD,EAAKlR,EAAG4D,IAAIoN,EAAI7K,GAChB+K,EAAKlR,EAAGrO,IAAIsf,EAAIC,GAChBD,EAAKjR,EAAGyG,IAAIjX,EAAI0hB,GAChBA,EAAKlR,EAAGrO,IAAInC,EAAI0hB,GAChBA,EAAKlR,EAAG4D,IAAIqN,EAAIC,GAChBD,EAAKjR,EAAG4D,IAAIwN,EAAIH,GAChBE,EAAKnR,EAAG4D,IAAIoN,EAAIG,GAChBhL,EAAKnG,EAAG4D,IAAI/Q,EAAGsT,GACfiL,EAAKpR,EAAGyG,IAAItX,EAAIgX,GAChBiL,EAAKpR,EAAG4D,IAAI/Q,EAAGue,GACfA,EAAKpR,EAAGrO,IAAIyf,EAAID,GAChBA,EAAKnR,EAAGrO,IAAIxC,EAAIA,GAChBA,EAAK6Q,EAAGrO,IAAIwf,EAAIhiB,GAChBA,EAAK6Q,EAAGrO,IAAIxC,EAAIgX,GAChBhX,EAAK6Q,EAAG4D,IAAIzU,EAAIiiB,GAChBF,EAAKlR,EAAGrO,IAAIuf,EAAI/hB,GAChBgX,EAAKnG,EAAG4D,IAAI6M,EAAIC,GAChBvK,EAAKnG,EAAGrO,IAAIwU,EAAIA,GAChBhX,EAAK6Q,EAAG4D,IAAIuC,EAAIiL,GAChBH,EAAKjR,EAAGyG,IAAIwK,EAAI9hB,GAChBgiB,EAAKnR,EAAG4D,IAAIuC,EAAI3W,GAChB2hB,EAAKnR,EAAGrO,IAAIwf,EAAIA,GAET,IAAIhN,EAAM8M,EAAIC,EADrBC,EAAKnR,EAAGrO,IAAIwf,EAAIA,GAElB,GAKA,CAAAppB,IAAA,MAAAC,MACA,SAAIioB,GACFD,EAAeC,GACf,IAAYO,EAAuB5oB,KAA3BsoB,GAAYO,EAAe7oB,KAAnBuoB,GAAYO,EAAO9oB,KAAXwoB,GACZO,EAAuBV,EAA3BC,GAAYU,EAAeX,EAAnBE,GAAYU,EAAOZ,EAAXG,GACpBa,EAAKjR,EAAG/B,KAAMiT,EAAKlR,EAAG/B,KAAMkT,EAAKnR,EAAG/B,KAClCpL,EAAI+B,EAAM/B,EACVme,EAAKhR,EAAG4D,IAAIhP,EAAMY,EAAGuP,GACvB5V,EAAK6Q,EAAG4D,IAAI4M,EAAIG,GAChBnhB,EAAKwQ,EAAG4D,IAAI6M,EAAIG,GAChBzK,EAAKnG,EAAG4D,IAAI8M,EAAIG,GAChBO,EAAKpR,EAAGrO,IAAI6e,EAAIC,GAChBY,EAAKrR,EAAGrO,IAAIgf,EAAIC,GACpBQ,EAAKpR,EAAG4D,IAAIwN,EAAIC,GAChBA,EAAKrR,EAAGrO,IAAIxC,EAAIK,GAChB4hB,EAAKpR,EAAGyG,IAAI2K,EAAIC,GAChBA,EAAKrR,EAAGrO,IAAI6e,EAAIE,GAChB,IAAIY,EAAKtR,EAAGrO,IAAIgf,EAAIE,GA+BpB,OA9BAQ,EAAKrR,EAAG4D,IAAIyN,EAAIC,GAChBA,EAAKtR,EAAGrO,IAAIxC,EAAIgX,GAChBkL,EAAKrR,EAAGyG,IAAI4K,EAAIC,GAChBA,EAAKtR,EAAGrO,IAAI8e,EAAIC,GAChBO,EAAKjR,EAAGrO,IAAIif,EAAIC,GAChBS,EAAKtR,EAAG4D,IAAI0N,EAAIL,GAChBA,EAAKjR,EAAGrO,IAAInC,EAAI2W,GAChBmL,EAAKtR,EAAGyG,IAAI6K,EAAIL,GAChBE,EAAKnR,EAAG4D,IAAI/Q,EAAGwe,GACfJ,EAAKjR,EAAG4D,IAAIoN,EAAI7K,GAChBgL,EAAKnR,EAAGrO,IAAIsf,EAAIE,GAChBF,EAAKjR,EAAGyG,IAAIjX,EAAI2hB,GAChBA,EAAKnR,EAAGrO,IAAInC,EAAI2hB,GAChBD,EAAKlR,EAAG4D,IAAIqN,EAAIE,GAChB3hB,EAAKwQ,EAAGrO,IAAIxC,EAAIA,GAChBK,EAAKwQ,EAAGrO,IAAInC,EAAIL,GAChBgX,EAAKnG,EAAG4D,IAAI/Q,EAAGsT,GACfkL,EAAKrR,EAAG4D,IAAIoN,EAAIK,GAChB7hB,EAAKwQ,EAAGrO,IAAInC,EAAI2W,GAChBA,EAAKnG,EAAGyG,IAAItX,EAAIgX,GAChBA,EAAKnG,EAAG4D,IAAI/Q,EAAGsT,GACfkL,EAAKrR,EAAGrO,IAAI0f,EAAIlL,GAChBhX,EAAK6Q,EAAG4D,IAAIpU,EAAI6hB,GAChBH,EAAKlR,EAAGrO,IAAIuf,EAAI/hB,GAChBA,EAAK6Q,EAAG4D,IAAI0N,EAAID,GAChBJ,EAAKjR,EAAG4D,IAAIwN,EAAIH,GAChBA,EAAKjR,EAAGyG,IAAIwK,EAAI9hB,GAChBA,EAAK6Q,EAAG4D,IAAIwN,EAAI5hB,GAChB2hB,EAAKnR,EAAG4D,IAAI0N,EAAIH,GAET,IAAIhN,EAAM8M,EAAIC,EADrBC,EAAKnR,EAAGrO,IAAIwf,EAAIhiB,GAElB,GAAC,CAAApH,IAAA,WAAAC,MAED,SAASioB,GACP,OAAOroB,KAAK+J,IAAIse,EAAM3S,SACxB,GAAC,CAAAvV,IAAA,MAAAC,MAEO,WACN,OAAOJ,KAAKa,OAAO0b,EAAMlG,KAC3B,GAAC,CAAAlW,IAAA,OAAAC,MACO,SAAKmL,GACX,OAAOoe,EAAKhS,WAAW3X,KAAMkoB,EAAkB3c,GAAG,SAACyM,GACjD,IAAM4R,EAAQxR,EAAG4I,YAAYhJ,EAAKnL,KAAI,SAACuJ,GAAC,OAAKA,EAAEoS,EAAE,KACjD,OAAOxQ,EAAKnL,KAAI,SAACuJ,EAAGxT,GAAC,OAAKwT,EAAEoR,SAASoC,EAAMhnB,GAAG,IAAEiK,IAAI0P,EAAMK,WAC5D,GACF,GAEA,CAAAzc,IAAA,iBAAAC,MAKA,SAAemL,GACb,IAAMse,EAAItN,EAAMlG,KAChB,GAAI9K,IAAMpM,EAAK,OAAO0qB,EAEtB,GADA/B,EAASvc,GACLA,IAAM4J,EAAK,OAAOnV,KACtB,IAAQinB,EAASja,EAATia,KACR,IAAKA,EAAM,OAAO0C,EAAKzT,aAAalW,KAAMuL,GAO1C,IAJA,IAAAue,EAA+B7C,EAAKE,YAAY5b,GAA1Cwe,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAKH,EAALG,MAAOC,EAAEJ,EAAFI,GACpBC,EAAMN,EACNO,EAAMP,EACNvT,EAAWtW,KACRgqB,EAAK7qB,GAAO+qB,EAAK/qB,GAClB6qB,EAAK7U,IAAKgV,EAAMA,EAAIpgB,IAAIuM,IACxB4T,EAAK/U,IAAKiV,EAAMA,EAAIrgB,IAAIuM,IAC5BA,EAAIA,EAAEC,SACNyT,IAAO7U,EACP+U,IAAO/U,EAKT,OAHI4U,IAAOI,EAAMA,EAAIzU,UACjBuU,IAAOG,EAAMA,EAAI1U,UACrB0U,EAAM,IAAI7N,EAAMnE,EAAG4D,IAAIoO,EAAI9B,GAAIrB,EAAKC,MAAOkD,EAAI7B,GAAI6B,EAAI5B,IAChD2B,EAAIpgB,IAAIqgB,EACjB,GAEA,CAAAjqB,IAAA,WAAAC,MASA,SAASiqB,GACPvC,EAASuC,GACT,IACI/C,EAAcgD,EADd/e,EAAI8e,EAEApD,EAASja,EAATia,KACR,GAAIA,EAAM,CACR,IAAAsD,EAAiCtD,EAAKE,YAAY5b,GAA1Cwe,EAAKQ,EAALR,MAAOC,EAAEO,EAAFP,GAAIC,EAAKM,EAALN,MAAOC,EAAEK,EAAFL,GAC1BM,EAAyBxqB,KAAK4W,KAAKoT,GAA1BG,EAAGK,EAANpU,EAAWqU,EAAGD,EAANzT,EACd2T,EAAyB1qB,KAAK4W,KAAKsT,GAA1BE,EAAGM,EAANtU,EAAWuU,EAAGD,EAAN3T,EACdoT,EAAMR,EAAKrU,gBAAgByU,EAAOI,GAClCC,EAAMT,EAAKrU,gBAAgB2U,EAAOG,GAClCA,EAAM,IAAI7N,EAAMnE,EAAG4D,IAAIoO,EAAI9B,GAAIrB,EAAKC,MAAOkD,EAAI7B,GAAI6B,EAAI5B,IACvDlB,EAAQ6C,EAAIpgB,IAAIqgB,GAChBE,EAAOG,EAAI1gB,IAAI4gB,EACjB,KAAO,CACL,IAAAC,EAAiB5qB,KAAK4W,KAAKrL,GAC3B+b,EADSsD,EAADxU,EAERkU,EAFYM,EAAD7T,CAGb,CAEA,OAAOwF,EAAMsO,WAAW,CAACvD,EAAOgD,IAAO,EACzC,GAEA,CAAAnqB,IAAA,uBAAAC,MAMA,SAAqByd,EAAU5S,EAAW2C,GACxC,IAAMkd,EAAIvO,EAAMvF,KACVgF,EAAM,SACVpE,EACA3M,GAAU,OACNA,IAAM9L,GAAO8L,IAAMkK,GAAQyC,EAAE/W,OAAOiqB,GAA2BlT,EAAEmT,SAAS9f,GAAjC2M,EAAEoT,eAAe/f,EAAkB,EAC5EoY,EAAMrH,EAAIhc,KAAMiL,GAAGlB,IAAIiS,EAAI6B,EAAGjQ,IACpC,OAAOyV,EAAIjE,WAAQ3f,EAAY4jB,CACjC,GAIA,CAAAljB,IAAA,WAAAC,MACA,SAAS6qB,GACP,IAAYvP,EAAoB1b,KAAxBsoB,GAAW3M,EAAa3b,KAAjBuoB,GAAW2C,EAAMlrB,KAAVwoB,GAChBpJ,EAAMpf,KAAKof,MAGP,MAAN6L,IAAYA,EAAK7L,EAAMhH,EAAGkG,IAAMlG,EAAGkH,IAAI4L,IAC3C,IAAMC,EAAK/S,EAAG4D,IAAIN,EAAGuP,GACfG,EAAKhT,EAAG4D,IAAIL,EAAGsP,GACfI,EAAKjT,EAAG4D,IAAIkP,EAAGD,GACrB,GAAI7L,EAAK,MAAO,CAAE1D,EAAGtD,EAAG/B,KAAMsF,EAAGvD,EAAG/B,MACpC,IAAK+B,EAAG+F,IAAIkN,EAAIjT,EAAGkG,KAAM,MAAM,IAAIje,MAAM,oBACzC,MAAO,CAAEqb,EAAGyP,EAAIxP,EAAGyP,EACrB,GAAC,CAAAjrB,IAAA,gBAAAC,MACD,WACE,IAAWkrB,EAA4Bte,EAA/BsL,EAAayO,EAAkB/Z,EAAlB+Z,cACrB,GAAIuE,IAAanW,EAAK,OAAO,EAC7B,GAAI4R,EAAe,OAAOA,EAAcxK,EAAOvc,MAC/C,MAAM,IAAIK,MAAM,+DAClB,GAAC,CAAAF,IAAA,gBAAAC,MACD,WACE,IAAWkrB,EAA4Bte,EAA/BsL,EAAawE,EAAkB9P,EAAlB8P,cACrB,OAAIwO,IAAanW,EAAYnV,KACzB8c,EAAsBA,EAAcP,EAAOvc,MACxCA,KAAKgrB,eAAehe,EAAMsL,EACnC,GAAC,CAAAnY,IAAA,aAAAC,MAED,WAA8B,IAAnBmrB,IAAYhsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAErB,OADAS,KAAK+c,iBACEoE,EAAQ5E,EAAOvc,KAAMurB,EAC9B,GAAC,CAAAprB,IAAA,QAAAC,MAED,WAAyB,IAAnBmrB,IAAYhsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAChB,OAAOimB,EAAG/iB,WAAWzC,KAAK+D,WAAWwnB,GACvC,IAAC,EAAAprB,IAAA,aAAAC,MAnUD,SAAkBgW,GAChB,IAAA5F,EAAiB4F,GAAK,CAAC,EAAfsF,EAAClL,EAADkL,EAAGC,EAACnL,EAADmL,EACX,IAAKvF,IAAMgC,EAAGqI,QAAQ/E,KAAOtD,EAAGqI,QAAQ9E,GAAI,MAAM,IAAItb,MAAM,wBAC5D,GAAI+V,aAAamG,EAAO,MAAM,IAAIlc,MAAM,gCACxC,IAAM+e,EAAM,SAACxc,GAAI,OAAKwV,EAAG+F,IAAIvb,EAAGwV,EAAG/B,KAAK,EAExC,OAAI+I,EAAI1D,IAAM0D,EAAIzD,GAAWY,EAAMlG,KAC5B,IAAIkG,EAAMb,EAAGC,EAAGvD,EAAGkG,IAC5B,GAAC,CAAAne,IAAA,aAAAC,MAeD,SAAkBsW,GAChB,IAAMkT,EAAQxR,EAAG4I,YAAYtK,EAAO7J,KAAI,SAACuJ,GAAC,OAAKA,EAAEoS,EAAE,KACnD,OAAO9R,EAAO7J,KAAI,SAACuJ,EAAGxT,GAAC,OAAKwT,EAAEoR,SAASoC,EAAMhnB,GAAG,IAAEiK,IAAI0P,EAAMK,WAC9D,GAEA,CAAAzc,IAAA,UAAAC,MAIA,SAAekK,GACb,IAAMsN,EAAI2E,EAAMK,WAAW0E,GAAU,EAAApM,EAAAwM,aAAY,WAAYpX,KAE7D,OADAsN,EAAEmF,iBACKnF,CACT,GAEA,CAAAzX,IAAA,iBAAAC,MACA,SAAsBkD,GACpB,OAAOiZ,EAAMvF,KAAK+T,SAAShD,EAAuBzkB,GACpD,KAACiZ,CAAA,CAzDQ,GACOA,EAAAvF,KAAO,IAAIuF,EAAMvP,EAAMuL,GAAIvL,EAAMwL,GAAIJ,EAAGkG,KACxC/B,EAAAlG,KAAO,IAAIkG,EAAMnE,EAAG/B,KAAM+B,EAAGkG,IAAKlG,EAAG/B,MAmVvD,IAAMmV,EAAQxe,EAAMyL,WACdkR,GAAO,EAAAlE,EAAA7O,MAAK2F,EAAOvP,EAAMia,KAAOnR,KAAKC,KAAKyV,EAAQ,GAAKA,GAE7D,MAAO,CACLxe,MAAAA,EACApJ,gBAAiB2Y,EACjBwL,uBAAAA,EACAL,oBAAAA,EACAG,mBAAAA,EAEJ,CA8eA,SAAgB4D,EAAkBrT,EAAmB2F,GAInD,IAFA,IAAMJ,EAAIvF,EAAGQ,MACTjL,EAAIxO,EACCusB,EAAI/N,EAAIxI,EAAKuW,EAAIxO,IAAQ/d,EAAKusB,GAAKxO,EAAKvP,GAAKwH,EACtD,IAAMuJ,EAAK/Q,EAGLge,EAAezO,GAAQwB,EAAKvJ,EAAMA,EAClCyW,EAAaD,EAAezO,EAC5B2O,GAAMlO,EAAIxI,GAAOyW,EACjBE,GAAMD,EAAK1W,GAAO+H,EAClB6O,EAAKH,EAAazW,EAClB6W,EAAKL,EACLM,EAAK7T,EAAGnC,IAAI8H,EAAG8N,GACfK,EAAK9T,EAAGnC,IAAI8H,GAAI8N,EAAK1W,GAAO+H,GAC9BiP,EAAY,SAACjR,EAAM9P,GACrB,IAAIghB,EAAMH,EACNI,EAAMjU,EAAGnC,IAAI7K,EAAG2gB,GAChBO,EAAMlU,EAAGgG,IAAIiO,GACjBC,EAAMlU,EAAG4D,IAAIsQ,EAAKlhB,GAClB,IAAImhB,EAAMnU,EAAG4D,IAAId,EAAGoR,GACpBC,EAAMnU,EAAGnC,IAAIsW,EAAKT,GAClBS,EAAMnU,EAAG4D,IAAIuQ,EAAKF,GAClBA,EAAMjU,EAAG4D,IAAIuQ,EAAKnhB,GAClBkhB,EAAMlU,EAAG4D,IAAIuQ,EAAKrR,GAClB,IAAIsR,EAAMpU,EAAG4D,IAAIsQ,EAAKD,GACtBE,EAAMnU,EAAGnC,IAAIuW,EAAKR,GAClB,IAAIS,EAAOrU,EAAG+F,IAAIoO,EAAKnU,EAAGkG,KAC1B+N,EAAMjU,EAAG4D,IAAIsQ,EAAKJ,GAClBK,EAAMnU,EAAG4D,IAAIwQ,EAAKJ,GAClBE,EAAMlU,EAAG8I,KAAKmL,EAAKC,EAAKG,GACxBD,EAAMpU,EAAG8I,KAAKqL,EAAKC,EAAKC,GAExB,IAAK,IAAI7pB,EAAI8b,EAAI9b,EAAIuS,EAAKvS,IAAK,CAC7B,IAAI2pB,EAAM3pB,EAAIsa,EACdqP,EAAMrP,GAAQqP,EAAMpX,EACpB,IAAIuX,EAAOtU,EAAGnC,IAAIuW,EAAKD,GACjBI,EAAKvU,EAAG+F,IAAIuO,EAAMtU,EAAGkG,KAC3B+N,EAAMjU,EAAG4D,IAAIsQ,EAAKF,GAClBA,EAAMhU,EAAG4D,IAAIoQ,EAAKA,GAClBM,EAAOtU,EAAG4D,IAAIwQ,EAAKJ,GACnBE,EAAMlU,EAAG8I,KAAKmL,EAAKC,EAAKK,GACxBH,EAAMpU,EAAG8I,KAAKwL,EAAMF,EAAKG,EAC3B,CACA,MAAO,CAAElM,QAASgM,EAAMrsB,MAAOksB,EACjC,EACA,GAAIlU,EAAGQ,MAAQwE,IAAQD,EAAK,CAE1B,IAAMuB,GAAMtG,EAAGQ,MAAQuE,GAAOC,EACxByO,EAAKzT,EAAG2I,KAAK3I,EAAG3C,IAAIsI,IAC1BoO,EAAY,SAACjR,EAAM9P,GACjB,IAAIghB,EAAMhU,EAAGgG,IAAIhT,GACXihB,EAAMjU,EAAG4D,IAAId,EAAG9P,GACtBghB,EAAMhU,EAAG4D,IAAIoQ,EAAKC,GAClB,IAAIO,EAAKxU,EAAGnC,IAAImW,EAAK1N,GACrBkO,EAAKxU,EAAG4D,IAAI4Q,EAAIP,GAChB,IAAMQ,EAAKzU,EAAG4D,IAAI4Q,EAAIf,GAChBS,EAAMlU,EAAG4D,IAAI5D,EAAGgG,IAAIwO,GAAKxhB,GACzBqhB,EAAOrU,EAAG+F,IAAImO,EAAKpR,GAEzB,MAAO,CAAEuF,QAASgM,EAAMrsB,MADhBgY,EAAG8I,KAAK2L,EAAID,EAAIH,GAE1B,CACF,CAGA,OAAON,CACT,CA99BAxqB,EAAAA,kBAAAglB,EAufAhlB,EAAAA,YAAA,SAA4BgT,GAC1B,IAAM3H,EAnCR,SAAsBkL,GACpB,IAAMvC,GAAO,EAAA8P,EAAAmB,eAAc1O,GAc3B,OAbAsN,EAAGnN,eACD1C,EACA,CACEnT,KAAM,OACN+R,KAAM,WACNG,YAAa,YAEf,CACEoY,SAAU,WACVC,cAAe,WACfC,KAAM,YAGHxgB,OAAOwI,OAAMD,EAAC,CAAEiY,MAAM,GAASrX,GACxC,CAmBgBsX,CAAatY,GACnByD,EAAuBpL,EAAvBoL,GAAO8U,EAAgBlgB,EAAnBzB,EACN4hB,EAAgB/U,EAAG0H,MAAQ,EAC3BsN,EAAkB,EAAIhV,EAAG0H,MAAQ,EAKvC,SAASuN,EAAKpiB,GACZ,OAAOqQ,EAAIA,IAAIrQ,EAAGiiB,EACpB,CACA,SAASI,EAAKriB,GACZ,OAAOqQ,EAAImC,OAAOxS,EAAGiiB,EACvB,CAEA,IAAAK,EAKI5G,EAAiB5R,EAAAA,EAAC,CAAC,EAClB/H,GAAK,IACRmU,QAAO,SAACkG,EAAIC,EAAOiE,GACjB,IAAMtgB,EAAIqc,EAAME,WACV9L,EAAItD,EAAG+I,QAAQlW,EAAEyQ,GACjB8R,EAAMhI,EAAG/Q,YACf,OAAI8W,EACKiC,EAAInsB,WAAWb,KAAK,CAAC8mB,EAAMmG,WAAa,EAAO,IAAQ/R,GAEvD8R,EAAInsB,WAAWb,KAAK,CAAC,IAAQkb,EAAGtD,EAAG+I,QAAQlW,EAAE0Q,GAExD,EACA2F,UAAS,SAAC7W,GACR,IAAMmX,EAAMnX,EAAMjL,OACZkuB,EAAOjjB,EAAM,GACbgd,EAAOhd,EAAMgD,SAAS,GAE5B,GAAImU,IAAQuL,GAA2B,IAATO,GAA0B,IAATA,EAUxC,IAAI9L,IAAQwL,GAA4B,IAATM,EAGpC,MAAO,CAAEhS,EAFCtD,EAAGkJ,UAAUmG,EAAKha,SAAS,EAAG2K,EAAG0H,QAE/BnE,EADFvD,EAAGkJ,UAAUmG,EAAKha,SAAS2K,EAAG0H,MAAO,EAAI1H,EAAG0H,SAGtD,MAAM,IAAIzf,MAAM,mBAADgD,OACMue,EAAG,2BAAAve,OAA0B8pB,EAAa,yBAAA9pB,OAAwB+pB,EAAe,uBAExG,CAjBE,IAAM1R,EAAI8J,EAAG1M,gBAAgB2O,GAC7B,KAjCGtoB,GADoBsM,EAkCEiQ,IAjCTjQ,EAAM2M,EAAGQ,OAiCI,MAAM,IAAIvY,MAAM,yBAC7C,IAnCuBoL,EAmCjBohB,EAAKnF,EAAoBhM,GAC3BC,EAAIvD,EAAG2I,KAAK8L,GAKhB,OAFiC,KAAP,EAAPa,OAFH/R,EAAIxG,KAASA,KAGHwG,EAAIvD,EAAG3C,IAAIkG,IAC9B,CAAED,EAAAA,EAAGC,EAAAA,EAUhB,KAxCiBY,EAAKgR,EAAtB3pB,gBACAmkB,EAAsBwF,EAAtBxF,uBACAL,EAAmB6F,EAAnB7F,oBACAG,EAAkB0F,EAAlB1F,mBAuCI8F,EAAgB,SAACliB,GAAW,OAChC+Z,EAAG/iB,WAAW+iB,EAAGnE,gBAAgB5V,EAAKuB,EAAM0L,aAAa,EAE3D,SAASkV,EAAsBlQ,GAE7B,OAAOA,EADMwP,GAAe/X,CAE9B,CAMA,IAAM0Y,EAAS,SAACjgB,EAAepN,EAAcstB,GAAU,OAAKtI,EAAG1M,gBAAgBlL,EAAE1K,MAAM1C,EAAMstB,GAAI,EAK3F9b,EAAS,WACb,SAAAA,EACWL,EACAC,EACAN,GAAiBvR,EAAA,KAAAiS,GAFjB,KAAAL,EAAAA,EACA,KAAAC,EAAAA,EACA,KAAAN,SAAAA,EAETtR,KAAK+c,gBACP,CAcC,OAZD7c,EAAA8R,EAAA,EAAA7R,IAAA,iBAAAC,MAcA,WAEE,IAAKynB,EAAmB7nB,KAAK2R,GAAI,MAAM,IAAItR,MAAM,6BACjD,IAAKwnB,EAAmB7nB,KAAK4R,GAAI,MAAM,IAAIvR,MAAM,4BACnD,GAAC,CAAAF,IAAA,iBAAAC,MAED,SAAekR,GACb,OAAO,IAAIU,EAAUhS,KAAK2R,EAAG3R,KAAK4R,EAAGN,EACvC,GAAC,CAAAnR,IAAA,mBAAAC,MAED,SAAiBmR,GACf,IAAQI,EAAwB3R,KAAxB2R,EAAGC,EAAqB5R,KAArB4R,EAAamc,EAAQ/tB,KAAlBsR,SACRgH,EAAIyU,GAAc,EAAA7X,EAAAwM,aAAY,UAAWnQ,IAC/C,GAAW,MAAPwc,IAAgB,CAAC,EAAG,EAAG,EAAG,GAAG9F,SAAS8F,GAAM,MAAM,IAAI1tB,MAAM,uBAChE,IAAM2tB,EAAe,IAARD,GAAqB,IAARA,EAAYpc,EAAI3E,EAAMzB,EAAIoG,EACpD,GAAIqc,GAAQ5V,EAAGQ,MAAO,MAAM,IAAIvY,MAAM,8BACtC,IAAMgC,EAAuB,KAAP,EAAN0rB,GAAiB,KAAO,KAClCE,EAAI1R,EAAM1Y,QAAQxB,EAASsrB,EAAcK,IACzCE,EAAKZ,EAAKU,GACVnR,EAAKwQ,GAAM/U,EAAI4V,GACfC,EAAKd,EAAKzb,EAAIsc,GACdrQ,EAAItB,EAAMvF,KAAKoX,qBAAqBH,EAAGpR,EAAIsR,GACjD,IAAKtQ,EAAG,MAAM,IAAIxd,MAAM,qBAExB,OADAwd,EAAEd,iBACKc,CACT,GAEA,CAAA1d,IAAA,WAAAC,MACA,WACE,OAAOwtB,EAAsB5tB,KAAK4R,EACpC,GAAC,CAAAzR,IAAA,aAAAC,MAED,WACE,OAAOJ,KAAKquB,WAAa,IAAIrc,EAAUhS,KAAK2R,EAAG0b,GAAMrtB,KAAK4R,GAAI5R,KAAKsR,UAAYtR,IACjF,GAEA,CAAAG,IAAA,gBAAAC,MACA,WACE,OAAOolB,EAAGzC,WAAW/iB,KAAKsuB,WAC5B,GAAC,CAAAnuB,IAAA,WAAAC,MACD,WACE,OAAOuB,EAAAukB,IAAIK,WAAW,CAAE5U,EAAG3R,KAAK2R,EAAGC,EAAG5R,KAAK4R,GAC7C,GAEA,CAAAzR,IAAA,oBAAAC,MACA,WACE,OAAOolB,EAAGzC,WAAW/iB,KAAKuuB,eAC5B,GAAC,CAAApuB,IAAA,eAAAC,MACD,WACE,OAAOutB,EAAc3tB,KAAK2R,GAAKgc,EAAc3tB,KAAK4R,EACpD,IAAC,EAAAzR,IAAA,cAAAC,MA/DD,SAAmBkK,GACjB,IAAMqD,EAAIX,EAAM0L,YAEhB,OADApO,GAAM,EAAA4K,EAAAwM,aAAY,mBAAoBpX,EAAS,EAAJqD,GACpC,IAAIqE,EAAU6b,EAAOvjB,EAAK,EAAGqD,GAAIkgB,EAAOvjB,EAAKqD,EAAG,EAAIA,GAC7D,GAGA,CAAAxN,IAAA,UAAAC,MACA,SAAekK,GACb,IAAAkkB,EAAiB7sB,EAAAukB,IAAIC,OAAM,EAAAjR,EAAAwM,aAAY,MAAOpX,IAC9C,OAAO,IAAI0H,EADFwc,EAAD7c,EAAI6c,EAAD5c,EAEb,KAACI,CAAA,CArBY,GA6ETxO,EAAQ,CACZC,kBAAiB,SAACH,GAChB,IAEE,OADAykB,EAAuBzkB,IAChB,CACT,CAAE,MAAOgD,GACP,OAAO,CACT,CACF,EACAyhB,uBAAwBA,EAMxB0G,iBAAkB,WAChB,IAAMjvB,EAAS8b,EAAIsE,iBAAiB5S,EAAMzB,GAC1C,OAAO+P,EAAIoT,eAAe1hB,EAAM0H,YAAYlV,GAASwN,EAAMzB,EAC7D,EAUAojB,WAAU,WAAmC,IAAlC3Y,EAAUzW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG+nB,EAAK/nB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGgd,EAAMvF,KAGvC,OAFAsQ,EAAMsH,eAAe5Y,GACrBsR,EAAMyD,SAAS3rB,OAAO,IACfkoB,CACT,GAgBF,SAASuH,EAAUrZ,GACjB,IAAM5I,EAAM4Y,EAAGtM,QAAQ1D,GACjBrQ,EAAsB,kBAATqQ,EACboM,GAAOhV,GAAOzH,IAASqQ,EAAahW,OAC1C,OAAIoN,EAAYgV,IAAQuL,GAAiBvL,IAAQwL,EAC7CjoB,EAAYyc,IAAQ,EAAIuL,GAAiBvL,IAAQ,EAAIwL,EACrD5X,aAAgB+G,CAEtB,CAuBA,IAAMuQ,EACJ9f,EAAM8f,UACN,SAAUriB,GAGR,IAAMgB,EAAM+Z,EAAG1M,gBAAgBrO,GACzBqkB,EAAuB,EAAfrkB,EAAMjL,OAAawN,EAAMyL,WACvC,OAAOqW,EAAQ,EAAIrjB,GAAOrM,OAAO0vB,GAASrjB,CAC5C,EACIshB,EACJ/f,EAAM+f,eACN,SAAUtiB,GACR,OAAO4iB,EAAKP,EAASriB,GACvB,EAEIskB,EAAavJ,EAAGhF,QAAQxT,EAAMyL,YAIpC,SAASuW,EAAWvjB,GAClB,GAAmB,kBAARA,EAAkB,MAAM,IAAIpL,MAAM,mBAC7C,KAAMlB,GAAOsM,GAAOA,EAAMsjB,GACxB,MAAM,IAAI1uB,MAAM,uBAADgD,OAAwB2J,EAAMyL,aAE/C,OAAO+M,EAAGnE,gBAAgB5V,EAAKuB,EAAM0L,YACvC,CAOA,SAASuW,EAAQ1d,EAAcjO,GAA0C,IAArBqS,EAAIpW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG2vB,EACzD,GAAI,CAAC,YAAa,aAAapgB,MAAK,SAACnC,GAAC,OAAKA,KAAKgJ,CAAI,IAClD,MAAM,IAAItV,MAAM,uCAClB,IAAQmC,EAAsBwK,EAAtBxK,KAAMkS,EAAgB1H,EAAhB0H,YACRsY,EAAqCrX,EAArCqX,KAAMmC,EAA+BxZ,EAA/BwZ,QAAuBC,EAAQzZ,EAAtB0Z,aACT,MAARrC,IAAcA,GAAO,GACzBzb,GAAU,EAAA2D,EAAAwM,aAAY,UAAWnQ,GAC7B4d,IAAS5d,GAAU,EAAA2D,EAAAwM,aAAY,oBAAqBlf,EAAK+O,KAK7D,IAAM+d,EAAQvC,EAAcxb,GACtB+E,EAAIyR,EAAuBzkB,GAC3BisB,EAAW,CAACP,EAAW1Y,GAAI0Y,EAAWM,IAE5C,GAAW,MAAPF,EAAa,CAEf,IAAMttB,GAAY,IAARstB,EAAe1a,EAAY0D,EAAG0H,OAASsP,EACjDG,EAASnjB,MAAK,EAAA8I,EAAAwM,aAAY,eAAgB5f,GAC5C,CACA,IAAMoiB,EAAOsB,EAAG/Q,YAAW1M,MAAdyd,EAAkB+J,GACzB9U,EAAI6U,EAuBV,MAAO,CAAEpL,KAAAA,EAAMsL,MArBf,SAAeC,GAEb,IAAM9iB,EAAImgB,EAAS2C,GACnB,GAAK5H,EAAmBlb,GAAxB,CACA,IAAM+iB,EAAKpC,EAAK3gB,GACVgR,EAAIpB,EAAMvF,KAAK+T,SAASpe,GAAG6a,WAC3B7V,EAAI0b,EAAK1P,EAAEjC,GACjB,GAAI/J,IAAMxS,EAAV,CAIA,IAAMyS,EAAIyb,EAAKqC,EAAKrC,EAAK5S,EAAI9I,EAAI2E,IACjC,GAAI1E,IAAMzS,EAAV,CACA,IAAImS,GAAYqM,EAAEjC,IAAM/J,EAAI,EAAI,GAAKvH,OAAOuT,EAAEhC,EAAIxG,GAC9Cwa,EAAQ/d,EAKZ,OAJIob,GAAQY,EAAsBhc,KAChC+d,EA7ON,SAAoB/d,GAClB,OAAOgc,EAAsBhc,GAAKyb,GAAMzb,GAAKA,CAC/C,CA2Ocge,CAAWhe,GACnBN,GAAY,GAEP,IAAIU,EAAUL,EAAGge,EAAOre,EAPV,CALA,CAJa,CAiBpC,EAEF,CACA,IAAM4d,EAA2B,CAAElC,KAAMhgB,EAAMggB,KAAMmC,SAAS,GACxDU,EAA0B,CAAE7C,KAAMhgB,EAAMggB,KAAMmC,SAAS,GAuF7D,OAhEA5S,EAAMvF,KAAK4X,eAAe,GAgEnB,CACL5hB,MAAAA,EACA8iB,aA/MF,SAAsBxsB,GAAwC,IAAnBioB,IAAYhsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrD,OAAOgd,EAAMtY,eAAeX,GAAYS,WAAWwnB,EACrD,EA8MEwE,gBArLF,SAAyBC,EAAmBC,GAAiC,IAAnB1E,IAAYhsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpE,GAAIsvB,EAAUmB,GAAW,MAAM,IAAI3vB,MAAM,iCACzC,IAAKwuB,EAAUoB,GAAU,MAAM,IAAI5vB,MAAM,iCAEzC,OADUkc,EAAM1Y,QAAQosB,GACflF,SAAShD,EAAuBiI,IAAWjsB,WAAWwnB,EACjE,EAiLE9Z,KA5EF,SAAcF,EAAc2e,GAAuC,IACjEC,EAAwBlB,EAAQ1d,EAAS2e,EADO3wB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG2vB,GAC3ChL,EAAIiM,EAAJjM,KAAMsL,EAAKW,EAALX,MACRY,EAAIpjB,EAEV,OADawY,EAAG6K,eAAmCD,EAAE5tB,KAAKkX,UAAW0W,EAAE1X,YAAa0X,EAAE7b,KAC/E+b,CAAKpM,EAAMsL,EACpB,EAwEEe,OArDF,SACE1e,EACAN,EACA7N,GACqB,IAAA8sB,EAArB7a,EAAIpW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGswB,EAEDY,EAAK5e,EAGX,GAFAN,GAAU,EAAA2D,EAAAwM,aAAY,UAAWnQ,GACjC7N,GAAY,EAAAwR,EAAAwM,aAAY,YAAahe,GACjC,WAAYiS,EAAM,MAAM,IAAItV,MAAM,sCACtC,IAGIuX,EAHIoV,EAAkBrX,EAAlBqX,KAAMmC,EAAYxZ,EAAZwZ,QAEVuB,OAA8BjxB,EAElC,IACE,GAAkB,kBAAPgxB,GAAmBjL,EAAGtM,QAAQuX,GAGvC,IACEC,EAAO1e,EAAU2e,QAAQF,EAC3B,CAAE,MAAOG,GACP,KAAMA,aAAoBjvB,EAAAukB,IAAIN,KAAM,MAAMgL,EAC1CF,EAAO1e,EAAUC,YAAYwe,EAC/B,KACK,IAAkB,kBAAPA,GAAmC,kBAATA,EAAG9e,GAAkC,kBAAT8e,EAAG7e,EAIzE,MAAM,IAAIvR,MAAM,SAHhB,IAAQsR,EAAS8e,EAAT9e,EAAGC,EAAM6e,EAAN7e,EACX8e,EAAO,IAAI1e,EAAUL,EAAGC,EAG1B,CACAgG,EAAI2E,EAAM1Y,QAAQH,EACpB,CAAE,MAAO4C,GACP,GAAiC,UAA5BA,EAAgBqM,QACnB,MAAM,IAAItS,MAAM,kEAClB,OAAO,CACT,CACA,GAAI2sB,GAAQ0D,EAAKrC,WAAY,OAAO,EAChCc,IAAS5d,EAAUvE,EAAMxK,KAAK+O,IAClC,IAAAsf,EAAiBH,EAAT/e,EAACkf,EAADlf,EAAGC,EAACif,EAADjf,EACL0G,EAAIyU,EAAcxb,GAClBuf,EAAKxD,EAAK1b,GACViL,EAAKwQ,EAAK/U,EAAIwY,GACd3C,EAAKd,EAAK1b,EAAImf,GACd7C,EAA8C,QAA7CuC,EAAGjU,EAAMvF,KAAKoX,qBAAqBxW,EAAGiF,EAAIsR,UAAG,IAAAqC,OAAA,EAA1CA,EAA4ChJ,WACtD,QAAKyG,GACKZ,EAAKY,EAAEvS,KACJ/J,CACf,EAOE/N,gBAAiB2Y,EACjBvK,UAAAA,EACAxO,MAAAA,EAEJ,EAWA7B,EAAAA,eAAA8pB,EAwEA9pB,EAAAA,oBAAA,SACEyW,EACAzC,GAOA,GADA2F,EAAInD,cAAcC,IACbA,EAAGqI,QAAQ9K,EAAKob,KAAO3Y,EAAGqI,QAAQ9K,EAAKqb,KAAO5Y,EAAGqI,QAAQ9K,EAAKoI,GACjE,MAAM,IAAI1d,MAAM,qCAClB,IAAM8rB,EAAYV,EAAerT,EAAIzC,EAAKoI,GAC1C,IAAK3F,EAAGsI,MAAO,MAAM,IAAIrgB,MAAM,gCAG/B,OAAO,SAAC6a,GAEN,IAAIkR,EAAKC,EAAKC,EAAKE,EAAKD,EAAK0E,EAAKvV,EAAGC,EACrCyQ,EAAMhU,EAAGgG,IAAIlD,GACbkR,EAAMhU,EAAG4D,IAAIoQ,EAAKzW,EAAKoI,GACvBsO,EAAMjU,EAAGgG,IAAIgO,GACbC,EAAMjU,EAAGrO,IAAIsiB,EAAKD,GAClBE,EAAMlU,EAAGrO,IAAIsiB,EAAKjU,EAAGkG,KACrBgO,EAAMlU,EAAG4D,IAAIsQ,EAAK3W,EAAKqb,GACvBxE,EAAMpU,EAAG8I,KAAKvL,EAAKoI,EAAG3F,EAAG3C,IAAI4W,IAAOjU,EAAG+F,IAAIkO,EAAKjU,EAAG/B,OACnDmW,EAAMpU,EAAG4D,IAAIwQ,EAAK7W,EAAKob,GACvB1E,EAAMjU,EAAGgG,IAAIkO,GACb2E,EAAM7Y,EAAGgG,IAAIoO,GACbD,EAAMnU,EAAG4D,IAAIiV,EAAKtb,EAAKob,GACvB1E,EAAMjU,EAAGrO,IAAIsiB,EAAKE,GAClBF,EAAMjU,EAAG4D,IAAIqQ,EAAKC,GAClB2E,EAAM7Y,EAAG4D,IAAIiV,EAAKzE,GAClBD,EAAMnU,EAAG4D,IAAIiV,EAAKtb,EAAKqb,GACvB3E,EAAMjU,EAAGrO,IAAIsiB,EAAKE,GAClB7Q,EAAItD,EAAG4D,IAAIoQ,EAAKE,GAChB,IAAA4E,EAA2B/E,EAAUE,EAAK4E,GAAlCxQ,EAAOyQ,EAAPzQ,QAASrgB,EAAK8wB,EAAL9wB,MACjBub,EAAIvD,EAAG4D,IAAIoQ,EAAKlR,GAChBS,EAAIvD,EAAG4D,IAAIL,EAAGvb,GACdsb,EAAItD,EAAG8I,KAAKxF,EAAG4Q,EAAK7L,GACpB9E,EAAIvD,EAAG8I,KAAKvF,EAAGvb,EAAOqgB,GACtB,IAAMkM,EAAKvU,EAAGsI,MAAOxF,KAAO9C,EAAGsI,MAAO/E,GAGtC,OAFAA,EAAIvD,EAAG8I,KAAK9I,EAAG3C,IAAIkG,GAAIA,EAAGgR,GAEnB,CAAEjR,EADTA,EAAItD,EAAGkE,IAAIZ,EAAG8Q,GACF7Q,EAAAA,EACd,CACF,kJC7sCA,IAAAwV,EAAAxyB,EAAA,OACAG,EAAAH,EAAA,OACAsW,EAAAtW,EAAA,KACA0V,EAAA1V,EAAA,OAEAuW,EAAAvW,EAAA,OACAyyB,EAAAzyB,EAAA,OACA0yB,EAAA1yB,EAAA,OAEM2yB,EAAalyB,OAAO,sEACpBmyB,EAAanyB,OAAO,sEACpB+V,EAAM/V,OAAO,GACb8d,EAAM9d,OAAO,GACboyB,EAAa,SAACvmB,EAAW2C,GAAS,OAAM3C,EAAI2C,EAAIsP,GAAOtP,CAAC,EAM9D,SAAS6jB,EAAQ9V,GACf,IAAM/D,EAAI0Z,EAEJnU,EAAM/d,OAAO,GAAIsyB,EAAMtyB,OAAO,GAAIuyB,EAAOvyB,OAAO,IAAKwyB,EAAOxyB,OAAO,IAEnEyyB,EAAOzyB,OAAO,IAAK0yB,EAAO1yB,OAAO,IAAK2yB,EAAO3yB,OAAO,IACpD4yB,EAAMrW,EAAIA,EAAIA,EAAK/D,EACnBwR,EAAM4I,EAAKA,EAAKrW,EAAK/D,EACrBqa,GAAM,EAAAhd,EAAAid,MAAK9I,EAAIjM,EAAKvF,GAAKwR,EAAMxR,EAC/Bua,GAAM,EAAAld,EAAAid,MAAKD,EAAI9U,EAAKvF,GAAKwR,EAAMxR,EAC/Bwa,GAAO,EAAAnd,EAAAid,MAAKC,EAAIjV,EAAKtF,GAAKoa,EAAMpa,EAChCya,GAAO,EAAApd,EAAAid,MAAKE,EAAKT,EAAM/Z,GAAKwa,EAAOxa,EACnC0a,GAAO,EAAArd,EAAAid,MAAKG,EAAKT,EAAMha,GAAKya,EAAOza,EACnC2a,GAAO,EAAAtd,EAAAid,MAAKI,EAAKR,EAAMla,GAAK0a,EAAO1a,EACnC4a,GAAQ,EAAAvd,EAAAid,MAAKK,EAAKR,EAAMna,GAAK2a,EAAO3a,EACpC6a,GAAQ,EAAAxd,EAAAid,MAAKM,EAAMV,EAAMla,GAAK0a,EAAO1a,EACrC8a,GAAQ,EAAAzd,EAAAid,MAAKO,EAAMtV,EAAKvF,GAAKwR,EAAMxR,EACnChQ,GAAM,EAAAqN,EAAAid,MAAKQ,EAAMb,EAAMja,GAAKya,EAAOza,EACnC2G,GAAM,EAAAtJ,EAAAid,MAAKtqB,EAAI8pB,EAAK9Z,GAAKoa,EAAMpa,EAC/BsG,GAAO,EAAAjJ,EAAAid,MAAK3T,EAAIrB,EAAKtF,GAC3B,IAAKQ,EAAG+F,IAAI/F,EAAGgG,IAAIF,GAAOvC,GAAI,MAAM,IAAItb,MAAM,2BAC9C,OAAO6d,CACT,CAEA,IAAM9F,GAAK,EAAAnD,EAAA0d,OAAMrB,OAAY7xB,OAAWA,EAAW,CAAEshB,KAAM0Q,IAE9C9vB,EAAAA,WAAY,EAAA0vB,EAAAuB,aACvB,CACE3nB,EAAG7L,OAAO,GACVwO,EAAGxO,OAAO,GACVgZ,GAAAA,EACA7M,EAAGgmB,EAEHhZ,GAAInZ,OAAO,iFACXoZ,GAAIpZ,OAAO,iFACXkZ,EAAGlZ,OAAO,GACV4tB,MAAM,EAON/F,KAAM,CACJC,KAAM9nB,OAAO,sEACb+nB,YAAa,SAACxa,GACZ,IAAMpB,EAAIgmB,EACJsB,EAAKzzB,OAAO,sCACZ0zB,GAAM3d,EAAM/V,OAAO,sCACnB2zB,EAAK3zB,OAAO,uCACZ4yB,EAAKa,EACLG,EAAY5zB,OAAO,uCAEnBsf,EAAK8S,EAAWQ,EAAKrlB,EAAGpB,GACxBsgB,EAAK2F,GAAYsB,EAAKnmB,EAAGpB,GAC3Bye,GAAK,EAAA/U,EAAAqG,KAAI3O,EAAI+R,EAAKmU,EAAKhH,EAAKkH,EAAIxnB,GAChC2e,GAAK,EAAAjV,EAAAqG,MAAKoD,EAAKoU,EAAKjH,EAAKmG,EAAIzmB,GAC3Bwe,EAAQC,EAAKgJ,EACb/I,EAAQC,EAAK8I,EAGnB,GAFIjJ,IAAOC,EAAKze,EAAIye,GAChBC,IAAOC,EAAK3e,EAAI2e,GAChBF,EAAKgJ,GAAa9I,EAAK8I,EACzB,MAAM,IAAI3yB,MAAM,uCAAyCsM,GAE3D,MAAO,CAAEod,MAAAA,EAAOC,GAAAA,EAAIC,MAAAA,EAAOC,GAAAA,EAC7B,IAGJiH,EAAA8B,QAKF,IAAM9zB,EAAMC,OAAO,GACb8zB,EAAK,SAACxX,GAAS,MAAkB,kBAANA,GAAkBvc,EAAMuc,GAAKA,EAAI4V,CAAU,EACtE9S,EAAK,SAAC9C,GAAS,MAAkB,kBAANA,GAAkBvc,EAAMuc,GAAKA,EAAI6V,CAAU,EAEtE4B,EAAsD,CAAC,EAC7D,SAASC,EAAWC,GAClB,IAAIC,EAAOH,EAAqBE,GAChC,QAAa5zB,IAAT6zB,EAAoB,CACtB,IAAMC,GAAO,EAAApC,EAAA8B,QAAO5xB,WAAWb,KAAK6yB,GAAK,SAACje,GAAC,OAAKA,EAAE9F,WAAW,EAAE,KAC/DgkB,GAAO,EAAApe,EAAAT,aAAY8e,EAAMA,GACzBJ,EAAqBE,GAAOC,CAC9B,CAAC,QAAAjrB,EAAA9I,UAAAC,OANiCg0B,EAAsB,IAAAlyB,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAtBirB,EAAsBjrB,EAAA,GAAAhJ,UAAAgJ,GAOxD,OAAO,EAAA4oB,EAAA8B,QAAO/d,EAAAT,YAAW1M,WAAC,EAAD,CAACurB,GAAIjwB,OAAKmwB,IACrC,CAGA,IAAMC,EAAe,SAACnM,GAAwB,OAAKA,EAAMvjB,YAAW,GAAMb,MAAM,EAAE,EAC5EwwB,EAAW,SAACnoB,GAAS,OAAK,EAAA2J,EAAAmM,iBAAgB9V,EAAG,GAAG,EAChDooB,EAAO,SAACjY,GAAS,OAAK,EAAAzG,EAAAqG,KAAII,EAAG4V,EAAW,EACxCjE,EAAO,SAAC3R,GAAS,OAAK,EAAAzG,EAAAqG,KAAII,EAAG6V,EAAW,EACxChV,EAAQ5a,EAAA4B,UAAUK,gBAClBgwB,EAAU,SAAC/V,EAAsB5S,EAAW2C,GAAS,OACzD2O,EAAMvF,KAAKoX,qBAAqBvQ,EAAG5S,EAAG2C,EAAE,EAG1C,SAASimB,EAAoBC,GAC3B,IAAIC,EAAKpyB,EAAA4B,UAAUC,MAAMukB,uBAAuB+L,GAC5C1d,EAAImG,EAAMtY,eAAe8vB,GAE7B,MAAO,CAAE1J,OADMjU,EAAEqX,WAAasG,EAAK1G,GAAM0G,GAChBtpB,MAAOgpB,EAAard,GAC/C,CAKA,SAAS4d,EAAOtY,GACd,IAAKwX,EAAGxX,GAAI,MAAM,IAAIrb,MAAM,yBAC5B,IAAM4zB,EAAKN,EAAKjY,EAAIA,GAEhBC,EAAI8V,EADEkC,EAAKM,EAAKvY,EAAItc,OAAO,KAE3Buc,EAAIuB,IAAQ/d,IAAKwc,EAAIgY,GAAMhY,IAC/B,IAAMvF,EAAI,IAAImG,EAAMb,EAAGC,EAAGxG,GAE1B,OADAiB,EAAE2G,iBACK3G,CACT,CAIA,SAAS8d,IAA+B,QAAAC,EAAA50B,UAAAC,OAAlB8I,EAAkB,IAAAhH,MAAA6yB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAlB9rB,EAAkB8rB,GAAA70B,UAAA60B,GACtC,OAAO/G,GAAK,EAAAnY,EAAA4D,iBAAgBsa,EAAUrrB,WAAC,EAAD,CAAC,qBAAmB1E,OAAKiF,KACjE,CAKA,SAAS+rB,EAAoB/wB,GAC3B,OAAOuwB,EAAoBvwB,GAAYmH,KACzC,CAMA,SAAS6pB,EACP3hB,EACArP,GAC8B,IAA9BixB,EAAAh1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAAe,EAAAT,EAAA4V,aAAY,IAErB+F,GAAI,EAAAvF,EAAAwM,aAAY,UAAW/O,GACjC6hB,EAAiCX,EAAoBvwB,GAAtCglB,EAAEkM,EAAT/pB,MAAmB6L,EAACke,EAATnK,OACbpf,GAAI,EAAAiK,EAAAwM,aAAY,UAAW6S,EAAS,IACpCE,EAAIf,EAASpd,GAAI,EAAApB,EAAA4D,iBAAgBsa,EAAW,cAAenoB,KAC3DypB,EAAOtB,EAAW,gBAAiBqB,EAAGnM,EAAI7N,GAC1Cka,EAAKtH,GAAK,EAAAnY,EAAA4D,iBAAgB4b,IAChC,GAAIC,IAAOx1B,EAAK,MAAM,IAAIkB,MAAM,0BAChC,IAAAu0B,EAAiCf,EAAoBc,GAAtCE,EAAED,EAATnqB,MAAmBkC,EAACioB,EAATvK,OACbvoB,EAAIoyB,EAAUW,EAAIvM,EAAI7N,GACtBjJ,EAAM,IAAInQ,WAAW,IAI3B,GAHAmQ,EAAIyG,IAAI4c,EAAI,GACZrjB,EAAIyG,IAAIyb,EAASrG,EAAK1gB,EAAI7K,EAAIwU,IAAK,KAE9Bwe,EAActjB,EAAKiJ,EAAG6N,GAAK,MAAM,IAAIjoB,MAAM,oCAChD,OAAOmR,CACT,CAMA,SAASsjB,EAAcjjB,EAAgBc,EAAcjP,GACnD,IAAM8N,GAAM,EAAA0D,EAAAwM,aAAY,YAAa7P,EAAW,IAC1C4I,GAAI,EAAAvF,EAAAwM,aAAY,UAAW/O,GAC3BoiB,GAAM,EAAA7f,EAAAwM,aAAY,YAAahe,EAAW,IAChD,IACE,IAAMkU,EAAIoc,GAAO,EAAA9e,EAAA4D,iBAAgBic,IAC3BpjB,GAAI,EAAAuD,EAAA4D,iBAAgBtH,EAAI/D,SAAS,EAAG,KAC1C,IAAKylB,EAAGvhB,GAAI,OAAO,EACnB,IAAMC,GAAI,EAAAsD,EAAA4D,iBAAgBtH,EAAI/D,SAAS,GAAI,KAC3C,IAAK+Q,EAAG5M,GAAI,OAAO,EACnB,IAAM9P,EAAIoyB,EAAUR,EAAS/hB,GAAI8hB,EAAa7b,GAAI6C,GAC5CwT,EAAI2F,EAAQhc,EAAGhG,EAAGyb,GAAMvrB,IAC9B,SAAKmsB,IAAMA,EAAER,YAAcQ,EAAEzG,WAAW9L,IAAM/J,EAEhD,CAAE,MAAOrL,GACP,OAAO,CACT,CACF,CAEa3E,EAAAA,QAAkC,CAC7CmuB,aAAcuE,EACd5iB,KAAM6iB,EACN/D,OAAQuE,EACRtxB,MAAO,CACLirB,iBAAkB9sB,EAAA4B,UAAUC,MAAMirB,iBAClCuF,OAAAA,EACAP,aAAAA,EACApS,gBAAAnM,EAAAmM,gBACAvI,gBAAA5D,EAAA4D,gBACAsa,WAAAA,EACA9X,IAAArG,EAAAqG,MAIJ,IAAM0Z,EAA0B,kBAC9B,EAAA5D,EAAA6D,YACE7c,EACA,CAEE,CACE,qEACA,oEACA,qEACA,sEAGF,CACE,qEACA,qEACA,sEAGF,CACE,qEACA,qEACA,qEACA,sEAGF,CACE,qEACA,qEACA,qEACA,uEAEFvL,KAAI,SAACjK,GAAC,OAAKA,EAAEiK,KAAI,SAACsO,GAAC,OAAK/b,OAAO+b,EAAE,GAAC,IACrC,CAhC6B,GAiC1B+Z,EAA0B,kBAC9B,EAAA7gB,EAAA8gB,qBAAoB/c,EAAI,CACtB2Y,EAAG3xB,OAAO,sEACV4xB,EAAG5xB,OAAO,QACV2e,EAAG3F,EAAGvD,OAAOzV,OAAO,SACpB,CAL4B,GAM1Bg2B,EAAuB,kBAC3B,EAAAhE,EAAAiE,cACE1zB,EAAA4B,UAAUK,iBACV,SAAC0xB,GACC,IAAAC,EAAiBL,EAAO9c,EAAGvD,OAAOygB,EAAQ,KAAlC5Z,EAAC6Z,EAAD7Z,EAAGC,EAAC4Z,EAAD5Z,EACX,OAAOqZ,EAAOtZ,EAAGC,EACnB,GACA,CACEtC,IAAK,iCACL4D,UAAW,iCACX7G,EAAGgC,EAAGQ,MACN6B,EAAG,EACH9N,EAAG,IACH+N,OAAQ,MACRlY,KAAM2uB,EAAA8B,QAET,CAhB0B,GAiBhBtxB,EAAAA,YAAqCyzB,EAAI1Y,YACzC/a,EAAAA,cAAuCyzB,EAAIpY,gDCjRxD,SAASU,EAAOnS,GACd,IAAKnB,OAAOC,cAAckB,IAAMA,EAAI,EAAG,MAAM,IAAIlL,MAAM,2BAADgD,OAA4BkI,GACpF,CAEA,SAASiqB,EAAK5nB,GACZ,GAAiB,mBAANA,EAAiB,MAAM,IAAIvN,MAAM,yBAADgD,OAA0BuK,GACvE,CAUA,SAASnD,EAAMmD,GACb,MARe3C,EAQF2C,aANEvM,YACP,MAAL4J,GAA0B,kBAANA,GAAyC,eAAvBA,EAAE8W,YAAYC,MAKtC,MAAM,IAAI3hB,MAAM,uBAAuB,IAR1D,IAAiB4K,EAQyC5C,EAAA9I,UAAAC,OADbwoB,EAAiB,IAAA1mB,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAjByf,EAAiBzf,EAAA,GAAAhJ,UAAAgJ,GAE5D,GAAIyf,EAAQxoB,OAAS,IAAMwoB,EAAQC,SAASra,EAAEpO,QAC5C,MAAM,IAAIa,MAAM,iCAADgD,OAAkC2kB,EAAO,oBAAA3kB,OAAmBuK,EAAEpO,QACjF,CAQA,SAASgD,EAAKA,GACZ,GAAoB,oBAATA,GAA8C,oBAAhBA,EAAKqS,OAC5C,MAAM,IAAIxU,MAAM,mDAClBqd,EAAOlb,EAAKkX,WACZgE,EAAOlb,EAAKoX,SACd,CAEA,SAAS6b,EAAOC,GAAmC,IAApBC,IAAap2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1C,GAAIm2B,EAASE,UAAW,MAAM,IAAIv1B,MAAM,oCACxC,GAAIs1B,GAAiBD,EAASG,SAAU,MAAM,IAAIx1B,MAAM,wCAC1D,CACA,SAASyS,EAAOsR,EAAUsR,GACxBjrB,EAAM2Z,GACN,IAAM0R,EAAMJ,EAAShc,UACrB,GAAI0K,EAAI5kB,OAASs2B,EACf,MAAM,IAAIz1B,MAAM,yDAADgD,OAA0DyyB,GAE7E,0GAESn0B,EAAAA,OAAA+b,EAAQ/b,EAAAA,KAAA6zB,EAAM7zB,EAAAA,MAAA8I,EAAO9I,EAAAA,KAAAa,EAAMb,EAAAA,OAAA8zB,EAAQ9zB,EAAAA,OAAAmR,EAE5C,IAAMijB,EAAS,CAAErY,OAAAA,EAAQ8X,KAAAA,EAAM/qB,MAAAA,EAAOjI,KAAAA,EAAMizB,OAAAA,EAAQ3iB,OAAAA,GACpDnR,EAAAA,QAAeo0B,sMClDf,IAAAC,EAAAr3B,EAAA,OACAuW,EAAAvW,EAAA,OAeA,IACsBs3B,EAAwB,SAAAC,GAAAtwB,EAAAqwB,EAAAC,GAAA,IAAAhuB,EAAArC,EAAAowB,GAc5C,SAAAA,EACWrc,EACFF,EACEyc,EACA/V,GAAa,IAAArQ,EAIc,OAJdhQ,EAAA,KAAAk2B,IAEtBlmB,EAAA7H,EAAAf,KAAA,OALSyS,SAAAA,EACF7J,EAAA2J,UAAAA,EACE3J,EAAAomB,UAAAA,EACApmB,EAAAqQ,KAAAA,EATDrQ,EAAA8lB,UAAW,EACX9lB,EAAAvQ,OAAS,EACTuQ,EAAA4T,IAAM,EACN5T,EAAA6lB,WAAY,EASpB7lB,EAAKjE,OAAS,IAAIzK,WAAWuY,GAC7B7J,EAAKqmB,MAAO,EAAAlhB,EAAAmhB,YAAWtmB,EAAKjE,QAAQiE,CACtC,CA4EC,OA5EA7P,EAAA+1B,EAAA,EAAA91B,IAAA,SAAAC,MACD,SAAOiG,IACL,EAAA2vB,EAAAP,QAAOz1B,MAIP,IAHA,IAAQo2B,EAA2Bp2B,KAA3Bo2B,KAAMtqB,EAAqB9L,KAArB8L,OAAQ8N,EAAa5Z,KAAb4Z,SAEhBgI,GADNvb,GAAO,EAAA6O,EAAAiM,SAAQ9a,IACE7G,OACRmkB,EAAM,EAAGA,EAAM/B,GAAO,CAC7B,IAAM0U,EAAOxgB,KAAKggB,IAAIlc,EAAW5Z,KAAK2jB,IAAK/B,EAAM+B,GAEjD,GAAI2S,IAAS1c,EAKb9N,EAAOmM,IAAI5R,EAAKoH,SAASkW,EAAKA,EAAM2S,GAAOt2B,KAAK2jB,KAChD3jB,KAAK2jB,KAAO2S,EACZ3S,GAAO2S,EACHt2B,KAAK2jB,MAAQ/J,IACf5Z,KAAKu2B,QAAQH,EAAM,GACnBp2B,KAAK2jB,IAAM,QARX,IADA,IAAM6S,GAAW,EAAAthB,EAAAmhB,YAAWhwB,GACrBuT,GAAYgI,EAAM+B,EAAKA,GAAO/J,EAAU5Z,KAAKu2B,QAAQC,EAAU7S,EAU1E,CAGA,OAFA3jB,KAAKR,QAAU6G,EAAK7G,OACpBQ,KAAKy2B,aACEz2B,IACT,GAAC,CAAAG,IAAA,aAAAC,MACD,SAAWgkB,IACT,EAAA4R,EAAAP,QAAOz1B,OACP,EAAAg2B,EAAAljB,QAAOsR,EAAKpkB,MACZA,KAAK61B,UAAW,EAIhB,IAAQ/pB,EAAiC9L,KAAjC8L,OAAQsqB,EAAyBp2B,KAAzBo2B,KAAMxc,EAAmB5Z,KAAnB4Z,SAAUwG,EAASpgB,KAATogB,KAC1BuD,EAAQ3jB,KAAR2jB,IAEN7X,EAAO6X,KAAS,IAChB3jB,KAAK8L,OAAO2B,SAASkW,GAAKhZ,KAAK,GAE3B3K,KAAKm2B,UAAYvc,EAAW+J,IAC9B3jB,KAAKu2B,QAAQH,EAAM,GACnBzS,EAAM,GAGR,IAAK,IAAI/gB,EAAI+gB,EAAK/gB,EAAIgX,EAAUhX,IAAKkJ,EAAOlJ,GAAK,GAhFrD,SAAsBwzB,EAAgBM,EAAoBt2B,EAAeggB,GACvE,GAAiC,oBAAtBgW,EAAKO,aAA6B,OAAOP,EAAKO,aAAaD,EAAYt2B,EAAOggB,GACzF,IAAMwW,EAAOx3B,OAAO,IACdy3B,EAAWz3B,OAAO,YAClB03B,EAAK1sB,OAAQhK,GAASw2B,EAAQC,GAC9BE,EAAK3sB,OAAOhK,EAAQy2B,GACpBve,EAAI8H,EAAO,EAAI,EACfzS,EAAIyS,EAAO,EAAI,EACrBgW,EAAKY,UAAUN,EAAape,EAAGwe,EAAI1W,GACnCgW,EAAKY,UAAUN,EAAa/oB,EAAGopB,EAAI3W,EACrC,CA0EIuW,CAAaP,EAAMxc,EAAW,EAAGxa,OAAqB,EAAdY,KAAKR,QAAa4gB,GAC1DpgB,KAAKu2B,QAAQH,EAAM,GACnB,IAAMa,GAAQ,EAAA/hB,EAAAmhB,YAAWjS,GACnBxC,EAAM5hB,KAAK0Z,UAEjB,GAAIkI,EAAM,EAAG,MAAM,IAAIvhB,MAAM,+CAC7B,IAAM62B,EAAStV,EAAM,EACfuV,EAAQn3B,KAAKoO,MACnB,GAAI8oB,EAASC,EAAM33B,OAAQ,MAAM,IAAIa,MAAM,sCAC3C,IAAK,IAAIuC,EAAI,EAAGA,EAAIs0B,EAAQt0B,IAAKq0B,EAAMD,UAAU,EAAIp0B,EAAGu0B,EAAMv0B,GAAIwd,EACpE,GAAC,CAAAjgB,IAAA,SAAAC,MACD,WACE,IAAQ0L,EAAsB9L,KAAtB8L,OAAQ4N,EAAc1Z,KAAd0Z,UAChB1Z,KAAKo3B,WAAWtrB,GAChB,IAAMJ,EAAMI,EAAO5I,MAAM,EAAGwW,GAE5B,OADA1Z,KAAKq3B,UACE3rB,CACT,GAAC,CAAAvL,IAAA,aAAAC,MACD,SAAW0tB,GAAM,IAAAwJ,EACfxJ,IAAAA,EAAO,IAAK9tB,KAAK+hB,cACjBuV,EAAAxJ,GAAG7V,IAAGlQ,MAAAuvB,EAAAC,EAAIv3B,KAAKoO,QACf,IAAQwL,EAAuD5Z,KAAvD4Z,SAAU9N,EAA6C9L,KAA7C8L,OAAQtM,EAAqCQ,KAArCR,OAAQq2B,EAA6B71B,KAA7B61B,SAAUD,EAAmB51B,KAAnB41B,UAAWjS,EAAQ3jB,KAAR2jB,IAMvD,OALAmK,EAAGtuB,OAASA,EACZsuB,EAAGnK,IAAMA,EACTmK,EAAG+H,SAAWA,EACd/H,EAAG8H,UAAYA,EACXp2B,EAASoa,GAAUkU,EAAGhiB,OAAOmM,IAAInM,GAC9BgiB,CACT,KAACmI,CAAA,CAnG2C,CAAQ/gB,EAAAsiB,MAAtD71B,EAAAA,KAAAs0B,wRCjBA,IAAMwB,EAA6Br4B,OAAO0W,KAAAG,IAAA,EAAK,IAAK,GAC9C2gB,EAAuBx3B,OAAO,IAGpC,SAASs4B,EAAQnsB,GACf,OAD4BhM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACb,CAAE+Y,EAAGlO,OAAOmB,EAAIksB,GAAa9pB,EAAGvD,OAAQmB,GAAKqrB,EAAQa,IAC7D,CAAEnf,EAAsC,EAAnClO,OAAQmB,GAAKqrB,EAAQa,GAAiB9pB,EAA4B,EAAzBvD,OAAOmB,EAAIksB,GAClE,CAEA,SAASE,EAAM1W,GAGb,IAHsC,IAAV2W,EAAEr4B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1Bs4B,EAAK,IAAIC,YAAY7W,EAAIzhB,QACzBu4B,EAAK,IAAID,YAAY7W,EAAIzhB,QACpBoD,EAAI,EAAGA,EAAIqe,EAAIzhB,OAAQoD,IAAK,CACnC,IAAAo1B,EAAiBN,EAAQzW,EAAIre,GAAIg1B,GAAIpnB,EACpB,CADRwnB,EAAD1f,EAAI0f,EAADrqB,GACVkqB,EAAGj1B,GAAE4N,EAAA,GAAEunB,EAAGn1B,GAAE4N,EAAA,EACf,CACA,MAAO,CAACqnB,EAAIE,EACd,CA2CEp2B,EAAAA,QAAA+1B,EAAS/1B,EAAAA,MAAAg2B,EAzCX,IAAMM,EAAQ,SAAC3f,EAAW3K,GAAS,OAAMvO,OAAOkZ,IAAM,IAAMse,EAAQx3B,OAAOuO,IAAM,EAAE,EAyCjEhM,EAAAA,MAAAs2B,EAvClB,IAAMC,EAAQ,SAAC5f,EAAW6f,EAAYvmB,GAAS,OAAK0G,IAAM1G,CAAC,EAwCzDjQ,EAAAA,MAAAu2B,EAvCF,IAAME,EAAQ,SAAC9f,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAMiE,CAAE,EAuCrEjQ,EAAAA,MAAAy2B,EArCT,IAAMC,EAAS,SAAC/f,EAAW3K,EAAWiE,GAAS,OAAM0G,IAAM1G,EAAMjE,GAAM,GAAKiE,CAAG,EAsC7EjQ,EAAAA,OAAA02B,EArCF,IAAMC,EAAS,SAAChgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAMiE,CAAE,EAqCrEjQ,EAAAA,OAAA22B,EAnCV,IAAMC,EAAS,SAACjgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAOiE,EAAI,EAAI,EAmCpEjQ,EAAAA,OAAA42B,EAlClB,IAAMC,EAAS,SAAClgB,EAAW3K,EAAWiE,GAAS,OAAM0G,IAAO1G,EAAI,GAAQjE,GAAM,GAAKiE,CAAG,EAkC5DjQ,EAAAA,OAAA62B,EAhC1B,IAAMC,EAAU,SAACC,EAAY/qB,GAAS,OAAKA,CAAC,EAiC1ChM,EAAAA,QAAA82B,EAhCF,IAAME,EAAU,SAACrgB,EAAW6f,GAAU,OAAK7f,CAAC,EAgCjC3W,EAAAA,QAAAg3B,EA9BX,IAAMC,EAAS,SAACtgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAK1G,EAAMjE,IAAO,GAAKiE,CAAG,EA+B7EjQ,EAAAA,OAAAi3B,EA9BF,IAAMC,EAAS,SAACvgB,EAAW3K,EAAWiE,GAAS,OAAMjE,GAAKiE,EAAM0G,IAAO,GAAK1G,CAAG,EA8BrEjQ,EAAAA,OAAAk3B,EA5BV,IAAMC,EAAS,SAACxgB,EAAW3K,EAAWiE,GAAS,OAAMjE,GAAMiE,EAAI,GAAQ0G,IAAO,GAAK1G,CAAG,EA4BpEjQ,EAAAA,OAAAm3B,EA3BlB,IAAMC,EAAS,SAACzgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM1G,EAAI,GAAQjE,IAAO,GAAKiE,CAAG,EAItF,SAAS7H,EAAI8tB,EAAYE,EAAYiB,EAAYC,GAC/C,IAAMtrB,GAAKoqB,IAAO,IAAMkB,IAAO,GAC/B,MAAO,CAAE3gB,EAAIuf,EAAKmB,GAAOrrB,EAACmI,KAAAG,IAAG,EAAK,IAAM,GAAM,EAAGtI,EAAO,EAAJA,EACtD,CAoB0BhM,EAAAA,OAAAo3B,EACxBp3B,EAAAA,IAAAoI,EAnBF,IAAMmvB,EAAQ,SAACnB,EAAYkB,EAAYE,GAAU,OAAMpB,IAAO,IAAMkB,IAAO,IAAME,IAAO,EAAE,EAmBnFx3B,EAAAA,MAAAu3B,EAlBP,IAAME,EAAQ,SAACC,EAAaxB,EAAYmB,EAAYM,GAAU,OAC3DzB,EAAKmB,EAAKM,GAAOD,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EAiB9BtU,EAAAA,MAAAy3B,EAhBd,IAAMG,EAAQ,SAACxB,EAAYkB,EAAYE,EAAYK,GAAU,OAC1DzB,IAAO,IAAMkB,IAAO,IAAME,IAAO,IAAMK,IAAO,EAAE,EAe9B73B,EAAAA,MAAA43B,EAdrB,IAAME,EAAQ,SAACJ,EAAaxB,EAAYmB,EAAYM,EAAYI,GAAU,OACvE7B,EAAKmB,EAAKM,EAAKI,GAAOL,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EAarBtU,EAAAA,MAAA83B,EAZ5B,IAAME,EAAQ,SAAC5B,EAAYkB,EAAYE,EAAYK,EAAYI,GAAU,OACtE7B,IAAO,IAAMkB,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMI,IAAO,EAAE,EAWtBj4B,EAAAA,MAAAg4B,EAV1C,IAAME,EAAQ,SAACR,EAAaxB,EAAYmB,EAAYM,EAAYI,EAAYI,GAAU,OACnFjC,EAAKmB,EAAKM,EAAKI,EAAKI,GAAOT,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EASnBtU,EAAAA,MAAAk4B,EAGnC,IAAME,EAAM,CACVrC,QAAAA,EAASC,MAAAA,EAAOM,MAAAA,EAChBC,MAAAA,EAAOE,MAAAA,EACPC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EACxBC,QAAAA,EAASE,QAAAA,EACTC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EACxBhvB,IAAAA,EAAKmvB,MAAAA,EAAOE,MAAAA,EAAOG,MAAAA,EAAOE,MAAAA,EAAOI,MAAAA,EAAOF,MAAAA,GAE1Ch4B,EAAAA,QAAeo4B,qGCzEFp4B,EAAAA,OACW,kBAAfq4B,YAA2B,WAAYA,WAAaA,WAAWC,YAASx6B,4LCJjF,IAAAu2B,EAAAr3B,EAAA,OACAuW,EAAAvW,EAAA,OAEau7B,EAAwB,SAAAhE,GAAAtwB,EAAAs0B,EAAAhE,GAAA,IAAAhuB,EAAArC,EAAAq0B,GAQnC,SAAAA,EAAY13B,EAAa+F,GAAW,IAAAwH,EAAAhQ,EAAA,KAAAm6B,IAClCnqB,EAAA7H,EAAAf,KAAA,OAJM0uB,UAAW,EACX9lB,EAAA6lB,WAAY,GAIlB,EAAAI,EAAAxzB,MAAWA,GACX,IAAMrC,GAAM,EAAA+U,EAAAiM,SAAQ5Y,GAEpB,GADAwH,EAAKoqB,MAAQ33B,EAAKqS,SACe,oBAAtB9E,EAAKoqB,MAAM/f,OACpB,MAAM,IAAI/Z,MAAM,uDAClB0P,EAAK6J,SAAW7J,EAAKoqB,MAAMvgB,SAC3B7J,EAAK2J,UAAY3J,EAAKoqB,MAAMzgB,UAC5B,IAAME,EAAW7J,EAAK6J,SAChB0J,EAAM,IAAIjiB,WAAWuY,GAE3B0J,EAAIrL,IAAI9X,EAAIX,OAASoa,EAAWpX,EAAKqS,SAASuF,OAAOja,GAAKka,SAAWla,GACrE,IAAK,IAAIyC,EAAI,EAAGA,EAAI0gB,EAAI9jB,OAAQoD,IAAK0gB,EAAI1gB,IAAM,GAC/CmN,EAAKoqB,MAAM/f,OAAOkJ,GAElBvT,EAAKqqB,MAAQ53B,EAAKqS,SAElB,IAAK,IAAIjS,EAAI,EAAGA,EAAI0gB,EAAI9jB,OAAQoD,IAAK0gB,EAAI1gB,IAAM,IAEnC,OADZmN,EAAKqqB,MAAMhgB,OAAOkJ,GAClBA,EAAI3Y,KAAK,GAAGoF,CACd,CAqCC,OArCA7P,EAAAg6B,EAAA,EAAA/5B,IAAA,SAAAC,MACD,SAAOmC,GAGL,OAFA,EAAAyzB,EAAAP,QAAaz1B,MACbA,KAAKm6B,MAAM/f,OAAO7X,GACXvC,IACT,GAAC,CAAAG,IAAA,aAAAC,MACD,SAAWgkB,IACT,EAAA4R,EAAAP,QAAaz1B,OACb,EAAAg2B,EAAAvrB,OAAY2Z,EAAKpkB,KAAK0Z,WACtB1Z,KAAK61B,UAAW,EAChB71B,KAAKm6B,MAAM/C,WAAWhT,GACtBpkB,KAAKo6B,MAAMhgB,OAAOgK,GAClBpkB,KAAKo6B,MAAMhD,WAAWhT,GACtBpkB,KAAKq3B,SACP,GAAC,CAAAl3B,IAAA,SAAAC,MACD,WACE,IAAMgkB,EAAM,IAAI/iB,WAAWrB,KAAKo6B,MAAM1gB,WAEtC,OADA1Z,KAAKo3B,WAAWhT,GACTA,CACT,GAAC,CAAAjkB,IAAA,aAAAC,MACD,SAAW0tB,GAETA,IAAAA,EAAOthB,OAAOqI,OAAOrI,OAAO6tB,eAAer6B,MAAO,CAAC,IACnD,IAAQo6B,EAA2Dp6B,KAA3Do6B,MAAOD,EAAoDn6B,KAApDm6B,MAAOtE,EAA6C71B,KAA7C61B,SAAUD,EAAmC51B,KAAnC41B,UAAWhc,EAAwB5Z,KAAxB4Z,SAAUF,EAAc1Z,KAAd0Z,UAQrD,OANAoU,EAAG+H,SAAWA,EACd/H,EAAG8H,UAAYA,EACf9H,EAAGlU,SAAWA,EACdkU,EAAGpU,UAAYA,EACfoU,EAAGsM,MAAQA,EAAME,WAAWxM,EAAGsM,OAC/BtM,EAAGqM,MAAQA,EAAMG,WAAWxM,EAAGqM,OACxBrM,CACT,GAAC,CAAA3tB,IAAA,UAAAC,MACD,WACEJ,KAAK41B,WAAY,EACjB51B,KAAKo6B,MAAM/C,UACXr3B,KAAKm6B,MAAM9C,SACb,KAAC6C,CAAA,CAlEkC,CAAQhlB,EAAAsiB,MAA7C71B,EAAAA,KAAAu4B,EA2Eav4B,EAAAA,KAAO,SAACa,EAAarC,EAAYwS,GAAc,OAC1D,IAAIunB,EAAU13B,EAAMrC,GAAKia,OAAOzH,GAAS0H,QAAQ,EACnD1Y,EAAAA,KAAAA,OAAc,SAACa,EAAarC,GAAU,OAAK,IAAI+5B,EAAU13B,EAAMrC,EAAI,gMChFnE,IAAAo6B,EAAA57B,EAAA,OACAuW,EAAAvW,EAAA,OAQM67B,EAAM,SAACvvB,EAAW2C,EAAWwH,GAAS,OAAMnK,EAAI2C,EAAM3C,EAAImK,EAAMxH,EAAIwH,CAAE,EAKtEqlB,EAA0B,IAAI3C,YAAY,CAC9C,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAKhF4C,EAAoB,IAAI5C,YAAY,CACxC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAKhF6C,EAA2B,IAAI7C,YAAY,IAC3C8C,EAAO,SAAAC,GAAAj1B,EAAAg1B,EAAAC,GAAA,IAAA3yB,EAAArC,EAAA+0B,GAYX,SAAAA,IAAA,IAAA7qB,EAFc,OAEdhQ,EAAA,KAAA66B,IACE7qB,EAAA7H,EAAAf,KAAA,KAAM,GAAI,GAAI,GAAG,IAVnB4pB,EAAY,EAAR2J,EAAG,GACP3qB,EAAAihB,EAAY,EAAR0J,EAAG,GACP3qB,EAAAqgB,EAAY,EAARsK,EAAG,GACP3qB,EAAA+qB,EAAY,EAARJ,EAAG,GACP3qB,EAAAkW,EAAY,EAARyU,EAAG,GACP3qB,EAAAgrB,EAAY,EAARL,EAAG,GACP3qB,EAAA+a,EAAY,EAAR4P,EAAG,GACP3qB,EAAAwJ,EAAY,EAARmhB,EAAG,GAAO3qB,CAId,CA6DC,OA7DA7P,EAAA06B,EAAA,EAAAz6B,IAAA,MAAAC,MACS,WAER,MAAO,CAD4BJ,KAA3B+wB,EAA2B/wB,KAAxBgxB,EAAwBhxB,KAArBowB,EAAqBpwB,KAAlB86B,EAAkB96B,KAAfimB,EAAejmB,KAAZ+6B,EAAY/6B,KAAT8qB,EAAS9qB,KAANuZ,EAE/B,GACA,CAAApZ,IAAA,MAAAC,MACU,SACR2wB,EAAWC,EAAWZ,EAAW0K,EAAW7U,EAAW8U,EAAWjQ,EAAWvR,GAE7EvZ,KAAK+wB,EAAQ,EAAJA,EACT/wB,KAAKgxB,EAAQ,EAAJA,EACThxB,KAAKowB,EAAQ,EAAJA,EACTpwB,KAAK86B,EAAQ,EAAJA,EACT96B,KAAKimB,EAAQ,EAAJA,EACTjmB,KAAK+6B,EAAQ,EAAJA,EACT/6B,KAAK8qB,EAAQ,EAAJA,EACT9qB,KAAKuZ,EAAQ,EAAJA,CACX,GAAC,CAAApZ,IAAA,UAAAC,MACS,SAAQg2B,EAAgBhf,GAEhC,IAAK,IAAIxU,EAAI,EAAGA,EAAI,GAAIA,IAAKwU,GAAU,EAAGujB,EAAS/3B,GAAKwzB,EAAK4E,UAAU5jB,GAAQ,GAC/E,IAAK,IAAIxU,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC5B,IAAMq4B,EAAMN,EAAS/3B,EAAI,IACnBs4B,EAAKP,EAAS/3B,EAAI,GAClBu4B,GAAK,EAAAjmB,EAAAkmB,MAAKH,EAAK,IAAK,EAAA/lB,EAAAkmB,MAAKH,EAAK,IAAOA,IAAQ,EAC7CI,GAAK,EAAAnmB,EAAAkmB,MAAKF,EAAI,KAAM,EAAAhmB,EAAAkmB,MAAKF,EAAI,IAAOA,IAAO,GACjDP,EAAS/3B,GAAMy4B,EAAKV,EAAS/3B,EAAI,GAAKu4B,EAAKR,EAAS/3B,EAAI,IAAO,CACjE,CAGA,IADA,IAtESqI,EAsEH8lB,EAA2B/wB,KAA3B+wB,EAAGC,EAAwBhxB,KAAxBgxB,EAAGZ,EAAqBpwB,KAArBowB,EAAG0K,EAAkB96B,KAAlB86B,EAAG7U,EAAejmB,KAAfimB,EAAG8U,EAAY/6B,KAAZ+6B,EAAGjQ,EAAS9qB,KAAT8qB,EAAGvR,EAAMvZ,KAANuZ,EAClB3W,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IACM04B,EAAM/hB,IADG,EAAArE,EAAAkmB,MAAKnV,EAAG,IAAK,EAAA/Q,EAAAkmB,MAAKnV,EAAG,KAAM,EAAA/Q,EAAAkmB,MAAKnV,EAAG,OAxE3Chb,EAyEsBgb,GAAG8U,GAzEuB9vB,EAyEpB6f,GAAK2P,EAAS73B,GAAK+3B,EAAS/3B,GAAM,EAE/D24B,IADS,EAAArmB,EAAAkmB,MAAKrK,EAAG,IAAK,EAAA7b,EAAAkmB,MAAKrK,EAAG,KAAM,EAAA7b,EAAAkmB,MAAKrK,EAAG,KAC7ByJ,EAAIzJ,EAAGC,EAAGZ,GAAM,EACrC7W,EAAIuR,EACJA,EAAIiQ,EACJA,EAAI9U,EACJA,EAAK6U,EAAIQ,EAAM,EACfR,EAAI1K,EACJA,EAAIY,EACJA,EAAID,EACJA,EAAKuK,EAAKC,EAAM,CAClB,CAEAxK,EAAKA,EAAI/wB,KAAK+wB,EAAK,EACnBC,EAAKA,EAAIhxB,KAAKgxB,EAAK,EACnBZ,EAAKA,EAAIpwB,KAAKowB,EAAK,EACnB0K,EAAKA,EAAI96B,KAAK86B,EAAK,EACnB7U,EAAKA,EAAIjmB,KAAKimB,EAAK,EACnB8U,EAAKA,EAAI/6B,KAAK+6B,EAAK,EACnBjQ,EAAKA,EAAI9qB,KAAK8qB,EAAK,EACnBvR,EAAKA,EAAIvZ,KAAKuZ,EAAK,EACnBvZ,KAAKiY,IAAI8Y,EAAGC,EAAGZ,EAAG0K,EAAG7U,EAAG8U,EAAGjQ,EAAGvR,EAChC,GAAC,CAAApZ,IAAA,aAAAC,MACS,WACRu6B,EAAShwB,KAAK,EAChB,GAAC,CAAAxK,IAAA,UAAAC,MACD,WACEJ,KAAKiY,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BjY,KAAK8L,OAAOnB,KAAK,EACnB,KAACiwB,CAAA,CA3EU,CAAQL,EAAAtE,MA8EfuF,EAAO,SAAAC,GAAA71B,EAAA41B,EAAAC,GAAA,IAAAC,EAAA71B,EAAA21B,GASX,SAAAA,IAAA,IAAAG,EAEsB,OAFtB57B,EAAA,KAAAy7B,IACEG,EAAAD,EAAAv0B,KAAA,OATF4pB,GAAI,WACJ4K,EAAA3K,EAAI,UACJ2K,EAAAvL,EAAI,UACJuL,EAAAb,GAAI,UACJa,EAAA1V,GAAI,QACJ0V,EAAAZ,EAAI,WACJY,EAAA7Q,EAAI,WACJ6Q,EAAApiB,GAAI,WAGFoiB,EAAKjiB,UAAY,GAAGiiB,CACtB,CAAC,OAAAz7B,EAAAs7B,EAAA,CAZU,CAAQZ,GAmBRj5B,EAAAA,QAAyB,EAAAuT,EAAA0mB,kBAAgB,kBAAM,IAAIhB,CAAQ,IAC3Dj5B,EAAAA,QAAyB,EAAAuT,EAAA0mB,kBAAgB,kBAAM,IAAIJ,CAAQ,4UC7GxE,IAvBA,IAAAxF,EAAAr3B,EAAA,OACAk9B,EAAAl9B,EAAA,OACAuW,EAAAvW,EAAA,OAcOm9B,EAAmE,GAA1DC,EAA8D,GAAnDC,EAAuD,GAC5E78B,EAAsBC,OAAO,GAC7B+V,EAAsB/V,OAAO,GAC7B8d,EAAsB9d,OAAO,GAC7B68B,EAAsB78B,OAAO,GAC7B88B,EAAwB98B,OAAO,KAC/B+8B,EAAyB/8B,OAAO,KAC7Bg9B,EAAQ,EAAGnO,EAAI9Y,EAAKuG,EAAI,EAAGC,EAAI,EAAGygB,EAAQ,GAAIA,IAAS,CAC9D,IAAA5rB,EACS,CAACmL,GAAI,EAAID,EAAI,EAAIC,GAAK,GAA9BD,EAAClL,EAAA,GAAEmL,EAACnL,EAAA,GACLsrB,EAAQ1vB,KAAK,GAAK,EAAIuP,EAAID,IAE1BqgB,EAAU3vB,MAAQgwB,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAGnD,IADA,IAAI3H,EAAIt1B,EACCgc,EAAI,EAAGA,EAAI,EAAGA,KACrB8S,GAAMA,GAAK9Y,GAAS8Y,GAAKgO,GAAOE,GAAWD,GACnChf,IAAKuX,GAAKtf,IAASA,GAAuB/V,OAAO+b,IAAMhG,GAEjE6mB,EAAW5vB,KAAKqoB,EAClB,CACA,IAA0E4H,EAAA36B,GAAvB,EAAAm6B,EAAAlE,OAAMqE,GAAY,GAAK,GAAnEM,EAAWD,EAAA,GAAEE,EAAWF,EAAA,GAGzBG,EAAQ,SAAClkB,EAAW3K,EAAWiE,GAAS,OAAMA,EAAI,IAAK,EAAAiqB,EAAA/C,QAAOxgB,EAAG3K,EAAGiE,IAAK,EAAAiqB,EAAAjD,QAAOtgB,EAAG3K,EAAGiE,EAAE,EACxF6qB,EAAQ,SAACnkB,EAAW3K,EAAWiE,GAAS,OAAMA,EAAI,IAAK,EAAAiqB,EAAA9C,QAAOzgB,EAAG3K,EAAGiE,IAAK,EAAAiqB,EAAAhD,QAAOvgB,EAAG3K,EAAGiE,EAAE,EAG9F,SAAgB8qB,EAAQ9qB,GAGtB,IAHyD,IAAnB+qB,EAAAp9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GACjDyxB,EAAI,IAAI8G,YAAY,IAEjBsE,EAAQ,GAAKO,EAAQP,EAAQ,GAAIA,IAAS,CAEjD,IAAK,IAAI1gB,EAAI,EAAGA,EAAI,GAAIA,IAAKsV,EAAEtV,GAAK9J,EAAE8J,GAAK9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IACrF,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAO3B,IANA,IAAMkhB,GAAQlhB,EAAI,GAAK,GACjBmhB,GAAQnhB,EAAI,GAAK,GACjBohB,EAAK9L,EAAE6L,GACPE,EAAK/L,EAAE6L,EAAO,GACdG,EAAKR,EAAMM,EAAIC,EAAI,GAAK/L,EAAE4L,GAC1BK,EAAKR,EAAMK,EAAIC,EAAI,GAAK/L,EAAE4L,EAAO,GAC9BjhB,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAC3B/J,EAAE8J,EAAIC,IAAMqhB,EACZprB,EAAE8J,EAAIC,EAAI,IAAMshB,EAMpB,IAFA,IAAIC,EAAOtrB,EAAE,GACTurB,EAAOvrB,EAAE,GACJ6iB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMpkB,EAAQ0rB,EAAUtH,GAClBuI,EAAKR,EAAMU,EAAMC,EAAM9sB,GACvB4sB,EAAKR,EAAMS,EAAMC,EAAM9sB,GACvB+sB,EAAKtB,EAAQrH,GACnByI,EAAOtrB,EAAEwrB,GACTD,EAAOvrB,EAAEwrB,EAAK,GACdxrB,EAAEwrB,GAAMJ,EACRprB,EAAEwrB,EAAK,GAAKH,CACd,CAEA,IAAK,IAAIthB,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IAAKsV,EAAEtV,GAAK9J,EAAE+J,EAAID,GAC1C,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAK9J,EAAE+J,EAAID,KAAOsV,GAAGtV,EAAI,GAAK,IAAMsV,GAAGtV,EAAI,GAAK,GAC1E,CAEA9J,EAAE,IAAM0qB,EAAYF,GACpBxqB,EAAE,IAAM2qB,EAAYH,EACtB,CACApL,EAAErmB,KAAK,EACT,CAzCAhJ,EAAAA,QAAA+6B,EAyCC,IAEYW,EAAO,SAAAnH,GAAAtwB,EAAAy3B,EAAAnH,GAAA,IAAAhuB,EAAArC,EAAAw3B,GAQlB,SAAAA,EACSzjB,EACA0jB,EACA5jB,GAEsB,IAAA3J,EADnBwtB,EAAAh+B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACAo9B,EAAAp9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GAM3B,GAN6BQ,EAAA,KAAAs9B,IAE7BttB,EAAA7H,EAAAf,KAAA,OANOyS,SAAAA,EACA7J,EAAAutB,OAAAA,EACAvtB,EAAA2J,UAAAA,EACG3J,EAAAwtB,UAAAA,EACAxtB,EAAA4sB,OAAAA,EAXF5sB,EAAA4T,IAAM,EACN5T,EAAAytB,OAAS,EACTztB,EAAA8lB,UAAW,EAEX9lB,EAAA6lB,WAAY,GAWpB,EAAAI,EAAAtY,QAAOhE,GAEH,GAAK3J,EAAK6J,UAAY7J,EAAK6J,UAAY,IACzC,MAAM,IAAIvZ,MAAM,4CAEa,OAD/B0P,EAAKonB,MAAQ,IAAI91B,WAAW,KAC5B0O,EAAK0tB,SAAU,EAAAvoB,EAAAwoB,KAAI3tB,EAAKonB,OAAOpnB,CACjC,CAgFC,OAhFA7P,EAAAm9B,EAAA,EAAAl9B,IAAA,SAAAC,MACS,WACRs8B,EAAQ18B,KAAKy9B,QAASz9B,KAAK28B,QAC3B38B,KAAKw9B,OAAS,EACdx9B,KAAK2jB,IAAM,CACb,GAAC,CAAAxjB,IAAA,SAAAC,MACD,SAAOiG,IACL,EAAA2vB,EAAAP,QAAOz1B,MAIP,IAHA,IAAQ4Z,EAAoB5Z,KAApB4Z,SAAUud,EAAUn3B,KAAVm3B,MAEZvV,GADNvb,GAAO,EAAA6O,EAAAiM,SAAQ9a,IACE7G,OACRmkB,EAAM,EAAGA,EAAM/B,GAAO,CAE7B,IADA,IAAM0U,EAAOxgB,KAAKggB,IAAIlc,EAAW5Z,KAAK2jB,IAAK/B,EAAM+B,GACxC/gB,EAAI,EAAGA,EAAI0zB,EAAM1zB,IAAKu0B,EAAMn3B,KAAK2jB,QAAUtd,EAAKsd,KACrD3jB,KAAK2jB,MAAQ/J,GAAU5Z,KAAK29B,QAClC,CACA,OAAO39B,IACT,GAAC,CAAAG,IAAA,SAAAC,MACS,WACR,IAAIJ,KAAK61B,SAAT,CACA71B,KAAK61B,UAAW,EAChB,IAAQsB,EAAiCn3B,KAAjCm3B,MAAOmG,EAA0Bt9B,KAA1Bs9B,OAAQ3Z,EAAkB3jB,KAAlB2jB,IAAK/J,EAAa5Z,KAAb4Z,SAE5Bud,EAAMxT,IAAQ2Z,EACU,KAAV,IAATA,IAAwB3Z,IAAQ/J,EAAW,GAAG5Z,KAAK29B,SACxDxG,EAAMvd,EAAW,IAAM,IACvB5Z,KAAK29B,QAPoB,CAQ3B,GAAC,CAAAx9B,IAAA,YAAAC,MACS,SAAUgkB,IAClB,EAAA4R,EAAAP,QAAOz1B,MAAM,IACb,EAAAg2B,EAAAvrB,OAAM2Z,GACNpkB,KAAK8H,SAGL,IAFA,IAAM81B,EAAY59B,KAAKm3B,MACfvd,EAAa5Z,KAAb4Z,SACC+J,EAAM,EAAG/B,EAAMwC,EAAI5kB,OAAQmkB,EAAM/B,GAAO,CAC3C5hB,KAAKw9B,QAAU5jB,GAAU5Z,KAAK29B,SAClC,IAAMrH,EAAOxgB,KAAKggB,IAAIlc,EAAW5Z,KAAKw9B,OAAQ5b,EAAM+B,GACpDS,EAAInM,IAAI2lB,EAAUnwB,SAASzN,KAAKw9B,OAAQx9B,KAAKw9B,OAASlH,GAAO3S,GAC7D3jB,KAAKw9B,QAAUlH,EACf3S,GAAO2S,CACT,CACA,OAAOlS,CACT,GAAC,CAAAjkB,IAAA,UAAAC,MACD,SAAQgkB,GAEN,IAAKpkB,KAAKu9B,UAAW,MAAM,IAAIl9B,MAAM,yCACrC,OAAOL,KAAK69B,UAAUzZ,EACxB,GAAC,CAAAjkB,IAAA,MAAAC,MACD,SAAIqK,GAEF,OADA,EAAAurB,EAAAtY,QAAOjT,GACAzK,KAAK89B,QAAQ,IAAIz8B,WAAWoJ,GACrC,GAAC,CAAAtK,IAAA,aAAAC,MACD,SAAWgkB,GAET,IADA,EAAA4R,EAAAljB,QAAOsR,EAAKpkB,MACRA,KAAK61B,SAAU,MAAM,IAAIx1B,MAAM,+BAGnC,OAFAL,KAAK69B,UAAUzZ,GACfpkB,KAAKq3B,UACEjT,CACT,GAAC,CAAAjkB,IAAA,SAAAC,MACD,WACE,OAAOJ,KAAKo3B,WAAW,IAAI/1B,WAAWrB,KAAK0Z,WAC7C,GAAC,CAAAvZ,IAAA,UAAAC,MACD,WACEJ,KAAK41B,WAAY,EACjB51B,KAAKm3B,MAAMxsB,KAAK,EAClB,GAAC,CAAAxK,IAAA,aAAAC,MACD,SAAW0tB,GACT,IAAQlU,EAAmD5Z,KAAnD4Z,SAAU0jB,EAAyCt9B,KAAzCs9B,OAAQ5jB,EAAiC1Z,KAAjC0Z,UAAWijB,EAAsB38B,KAAtB28B,OAAQY,EAAcv9B,KAAdu9B,UAY7C,OAXAzP,IAAAA,EAAO,IAAIuP,EAAOzjB,EAAU0jB,EAAQ5jB,EAAW6jB,EAAWZ,IAC1D7O,EAAG2P,QAAQxlB,IAAIjY,KAAKy9B,SACpB3P,EAAGnK,IAAM3jB,KAAK2jB,IACdmK,EAAG0P,OAASx9B,KAAKw9B,OACjB1P,EAAG+H,SAAW71B,KAAK61B,SACnB/H,EAAG6O,OAASA,EAEZ7O,EAAGwP,OAASA,EACZxP,EAAGpU,UAAYA,EACfoU,EAAGyP,UAAYA,EACfzP,EAAG8H,UAAY51B,KAAK41B,UACb9H,CACT,KAACuP,CAAA,CAvGiB,CAAQnoB,EAAAsiB,MAA5B71B,EAAAA,OAAA07B,EA0GA,IAAMlZ,EAAM,SAACmZ,EAAgB1jB,EAAkBF,GAAiB,OAC9D,EAAAxE,EAAA0mB,kBAAgB,kBAAM,IAAIyB,EAAOzjB,EAAU0jB,EAAQ5jB,EAAU,GAAC,EAEnD/X,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAK1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAC1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAC1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,GAAI,IACzCxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAK5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAC5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAC5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,GAAI,IAIxD,IAAM4Z,EAAW,SAACT,EAAgB1jB,EAAkBF,GAAiB,OACnE,EAAAxE,EAAA8oB,6BACE,eAACroB,EAAApW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAkB,CAAC,EAAC,OACnB,IAAI89B,EAAOzjB,EAAU0jB,OAAuB79B,IAAfkW,EAAKwE,MAAsBT,EAAY/D,EAAKwE,OAAO,EAAK,GACxF,EAEUxY,EAAAA,SAA2Bo8B,EAAS,GAAM,IAAK,IAC/Cp8B,EAAAA,SAA2Bo8B,EAAS,GAAM,IAAK,wCC9N5D,IAAAh+B,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAA8G,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,uSAQA,IAAAs/B,EAAAt/B,EAAA,OAOagD,EAAAA,GAAK,SAACiL,GAAe,OAAK,IAAIvL,WAAWuL,EAAId,OAAQc,EAAI8pB,WAAY9pB,EAAI+B,WAAW,EAIjG,SAASuK,EAAQjO,GACf,OACEA,aAAa5J,YACP,MAAL4J,GAA0B,kBAANA,GAAyC,eAAvBA,EAAE8W,YAAYC,IAEzD,CARargB,EAAAA,IAAM,SAACiL,GAAe,OACjC,IAAIkrB,YAAYlrB,EAAId,OAAQc,EAAI8pB,WAAY5gB,KAAKooB,MAAMtxB,EAAI+B,WAAa,GAAG,EAUhEhN,EAAAA,WAAa,SAACiL,GAAe,OACxC,IAAIuxB,SAASvxB,EAAId,OAAQc,EAAI8pB,WAAY9pB,EAAI+B,WAAW,EAU1D,GAPahN,EAAAA,KAAO,SAACy8B,EAAc/tB,GAAa,OAAM+tB,GAAS,GAAK/tB,EAAW+tB,IAAS/tB,CAAM,EAMjF1O,EAAAA,KAAmE,KAA5D,IAAIN,WAAW,IAAIy2B,YAAY,CAAC,YAAahsB,QAAQ,IACpEnK,EAAAye,KAAM,MAAM,IAAI/f,MAAM,+CAG3B,IAAM4hB,EAAwB3gB,MAAMd,KAAK,CAAEhB,OAAQ,MAAO,SAAC0iB,EAAGtf,GAAC,OAC7DA,EAAEN,SAAS,IAAI6f,SAAS,EAAG,IAAI,IAKjCxgB,EAAAA,WAAA,SAA2B8I,GACzB,IAAKyO,EAAQzO,GAAQ,MAAM,IAAIpK,MAAM,uBAGrC,IADA,IAAIiK,EAAM,GACD1H,EAAI,EAAGA,EAAI6H,EAAMjL,OAAQoD,IAChC0H,GAAO2X,EAAMxX,EAAM7H,IAErB,OAAO0H,CACT,EAGA,IAAMgY,EAAS,CAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC7D,SAASC,EAAcC,GACrB,OAAIA,GAAQR,EAAOC,IAAMO,GAAQR,EAAOE,GAAWM,EAAOR,EAAOC,GAC7DO,GAAQR,EAAOG,IAAMK,GAAQR,EAAOI,GAAWI,GAAQR,EAAOG,GAAK,IACnEK,GAAQR,EAAOK,IAAMG,GAAQR,EAAOM,GAAWE,GAAQR,EAAOK,GAAK,SAAvE,CAEF,CAKAhhB,EAAAA,WAAA,SAA2B2I,GACzB,GAAmB,kBAARA,EAAkB,MAAM,IAAIjK,MAAM,mCAAqCiK,GAClF,IAAM0Y,EAAK1Y,EAAI9K,OACTyjB,EAAKD,EAAK,EAChB,GAAIA,EAAK,EAAG,MAAM,IAAI3iB,MAAM,0DAA4D2iB,GAExF,IADA,IAAM7W,EAAQ,IAAI9K,WAAW4hB,GACpBC,EAAK,EAAGC,EAAK,EAAGD,EAAKD,EAAIC,IAAMC,GAAM,EAAG,CAC/C,IAAMC,EAAKP,EAAcvY,EAAIgF,WAAW6T,IAClCxE,EAAKkE,EAAcvY,EAAIgF,WAAW6T,EAAK,IAC7C,QAAW1jB,IAAP2jB,QAA2B3jB,IAAPkf,EAAkB,CACxC,IAAMmE,EAAOxY,EAAI6Y,GAAM7Y,EAAI6Y,EAAK,GAChC,MAAM,IAAI9iB,MAAM,+CAAiDyiB,EAAO,cAAgBK,EAC1F,CACAhX,EAAM+W,GAAW,GAALE,EAAUzE,CACxB,CACA,OAAOxS,CACT,EAKO,IAAMkyB,EAAQ,eAAA7tB,EAAA1K,EAAAL,IAAAQ,MAAG,SAAAC,IAAA,OAAAT,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,wBAAAE,EAAAM,OAAA,GAAAtB,EAAA,KAAc,kBAAjB,OAAAsK,EAAAzI,MAAA,KAAAxI,UAAA,KAGU,SAAA++B,IAU9B,OAV8BA,EAAAx4B,EAAAL,IAAAQ,MAAxB,SAAAs4B,EAAyBC,EAAeC,EAAcC,GAAuB,IAAAC,EAAA/7B,EAAA6gB,EAAA,OAAAhe,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9E23B,EAAKC,KAAKC,MACLj8B,EAAI,EAAC,YAAEA,EAAI47B,GAAK,CAAA13B,EAAAE,KAAA,SAGK,GAF5B03B,EAAG97B,MAEG6gB,EAAOmb,KAAKC,MAAQF,IACd,GAAKlb,EAAOgb,GAAI,CAAA33B,EAAAE,KAAA,eAAAF,EAAAkJ,OAAA,6BAAAlJ,EAAAE,KAAA,GACtB,EAAArF,EAAA08B,YAAU,OAChBM,GAAMlb,EAAK,QANc7gB,IAAGkE,EAAAE,KAAA,iCAAAF,EAAAU,OAAA,GAAA+2B,EAAA,MAQ/Bx2B,MAAA,KAAAxI,UAAA,CASD,SAAgBia,EAAYrU,GAC1B,GAAmB,kBAARA,EAAkB,MAAM,IAAI9E,MAAM,oCAADgD,cAA4C8B,IACxF,OAAO,IAAI9D,YAAW,IAAIqiB,aAAchjB,OAAOyE,GACjD,CAQA,SAAgBgc,EAAQ9a,GAEtB,GADoB,kBAATA,IAAmBA,EAAOmT,EAAYnT,KAC5C6S,EAAQ7S,GAAO,MAAM,IAAIhG,MAAM,4BAADgD,cAAoCgD,IACvE,OAAOA,CACT,CArCa1E,EAAAA,SAAQ08B,EAGrB18B,EAAAA,UADA,SAC+BkH,EAAAC,EAAAC,GAAA,OAAAu1B,EAAAv2B,MAAC,KAADxI,UAAA,EAmB/BoC,EAAAA,YAAA6X,EAWA7X,EAAAA,QAAAwf,EASAxf,EAAAA,YAAA,WAEE,IADA,IAAI0hB,EAAM,EACDzgB,EAAI,EAAGA,EAAIrD,UAAOC,OAAQoD,IAAK,CACtC,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,GACjB,IAAKsW,EAAQjO,GAAI,MAAM,IAAI5K,MAAM,uBACjCgjB,GAAOpY,EAAEzL,MACX,CAEA,IADA,IAAMkM,EAAM,IAAIrK,WAAWgiB,GAClBzgB,EAAI,EAAG0gB,EAAM,EAAG1gB,EAAIrD,UAAOC,OAAQoD,IAAK,CAC/C,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,GACjB8I,EAAIuM,IAAIhN,EAAGqY,GACXA,GAAOrY,EAAEzL,MACX,CACA,OAAOkM,CACT,EAEA,IACsB8rB,EAAI,oBAAAA,IAAAz3B,EAAA,KAAAy3B,EAAA,CAwBvB,OAxBuBt3B,EAAAs3B,EAAA,EAAAr3B,IAAA,QAAAC,MAsBxB,WACE,OAAOJ,KAAKs6B,YACd,KAAC9C,CAAA,CAxBuB,GAA1B71B,EAAAA,KAAA61B,EAsCA,IAAMsH,EAAQ,CAAC,EAAEx8B,SAEjBX,EAAAA,UAAA,SACEo9B,EACAppB,GAEA,QAAalW,IAATkW,GAA2C,oBAArBmpB,EAAM33B,KAAKwO,GACnC,MAAM,IAAItV,MAAM,yCAElB,OADemM,OAAOwyB,OAAOD,EAAUppB,EAEzC,EAIAhU,EAAAA,gBAAA,SAAmDs9B,GACjD,IAAMC,EAAQ,SAACr0B,GAAU,OAAiBo0B,IAAW7kB,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC5E6E,EAAM+f,IAIZ,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,kBAAMoqB,GAAU,EACxBC,CACT,EAEAv9B,EAAAA,wBAAA,SACEs9B,GAEA,IAAMC,EAAQ,SAACr0B,EAAY8K,GAAQ,OAAiBspB,EAAStpB,GAAMyE,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC1F6E,EAAM+f,EAAS,CAAC,GAItB,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,SAACc,GAAO,OAAKspB,EAAStpB,EAAK,EACnCupB,CACT,EAEAv9B,EAAAA,2BAAA,SACEs9B,GAEA,IAAMC,EAAQ,SAACr0B,EAAY8K,GAAQ,OAAiBspB,EAAStpB,GAAMyE,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC1F6E,EAAM+f,EAAS,CAAC,GAItB,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,SAACc,GAAO,OAAKspB,EAAStpB,EAAK,EACnCupB,CACT,EAKAv9B,EAAAA,YAAA,WAA4C,IAAhBw9B,EAAW5/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACxC,GAAI0+B,EAAAhE,QAA4C,oBAA3BgE,EAAAhE,OAAOmF,gBAC1B,OAAOnB,EAAAhE,OAAOmF,gBAAgB,IAAI/9B,WAAW89B,IAE/C,MAAM,IAAI9+B,MAAM,yCAClB,sCC/OAmM,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ29B,UAAY39B,EAAQ49B,UAAY59B,EAAQe,UAAYf,EAAQ69B,eAAY,EAChF,IAAMC,EAAS9gC,EAAQ,OACjBuW,EAAavW,EAAQ,OAC3BgD,EAAQ69B,WAAY,EAAItqB,EAAWwqB,UAAUD,EAAOE,YACpDh+B,EAAQe,UAAa,WACjB,IAAMiK,GAAI,EAAIuI,EAAWwqB,UAAUD,EAAOG,YAE1C,OADAjzB,EAAEkI,OAAS4qB,EAAOG,WAAW/qB,OACtBlI,CACX,CAJqB,GAKrBhL,EAAQ49B,WAAY,EAAIrqB,EAAWwqB,UAAUD,EAAOI,YACpDl+B,EAAQ29B,WAAY,EAAIpqB,EAAWwqB,UAAUD,EAAOK,gDCXpDtzB,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ4B,eAAY,EACpB,IAAI1E,EAAcF,EAAQ,OAC1B6N,OAAO6yB,eAAe19B,EAAS,YAAa,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOvP,EAAY0E,SAAW,mDCHjH,IAAIw8B,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQs4B,OAASt4B,EAAQ+9B,SAAW/9B,EAAQs+B,YAAct+B,EAAQohB,WAAaphB,EAAQu+B,YAAcv+B,EAAQ6X,YAAc7X,EAAQ00B,WAAa10B,EAAQ8S,YAAc9S,EAAQw+B,MAAQx+B,EAAQc,WAAad,EAAQy+B,YAAcz+B,EAAQ0+B,gBAAa,EACtP,IAAMC,EAAYP,EAAgBphC,EAAQ,QACpCG,EAAUH,EAAQ,OAClB0hC,EAAaC,EAAU5vB,QAAQ8kB,KACrC7zB,EAAQ0+B,WAAaA,EACrB,IAAMD,EAAcE,EAAU5vB,QAAQjG,MACtC9I,EAAQy+B,YAAcA,EACtB,IAAIG,EAAU5hC,EAAQ,OACtB6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOmyB,EAAQ99B,UAAY,IAC/G+J,OAAO6yB,eAAe19B,EAAS,QAAS,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOmyB,EAAQ99B,UAAY,IAC1G+J,OAAO6yB,eAAe19B,EAAS,cAAe,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOmyB,EAAQ9rB,WAAa,IACjHjI,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOmyB,EAAQlK,UAAY,IAC/G7pB,OAAO6yB,eAAe19B,EAAS,cAAe,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOmyB,EAAQ/mB,WAAa,IAQjH7X,EAAQu+B,YANR,SAAqB75B,GACjB,KAAMA,aAAgBhF,YAClB,MAAM,IAAIiI,UAAU,wCAADjG,cAAgDgD,IAEvE,OAAO,IAAIm6B,aAAcp/B,OAAOiF,EACpC,EAMA1E,EAAQohB,WAJR,SAAoB1c,GAChB,IAAMo6B,EAASp6B,EAAKq6B,WAAW,MAAQr6B,EAAK2I,UAAU,GAAK3I,EAC3D,OAAO,EAAIvH,EAAQikB,YAAY0d,EACnC,EAcA9+B,EAAQs+B,YAXR,SAAqBh1B,EAAG2C,GACpB,GAAI3C,EAAEzL,SAAWoO,EAAEpO,OACf,OAAO,EAEX,IAAK,IAAIoD,EAAI,EAAGA,EAAIqI,EAAEzL,OAAQoD,IAC1B,GAAIqI,EAAErI,KAAOgL,EAAEhL,GACX,OAAO,EAGf,OAAO,CACX,EASAjB,EAAQ+9B,SANR,SAAkBl9B,GACd,OAAO,SAACqI,GAEJ,OADAy1B,EAAU5vB,QAAQjG,MAAMI,GACjBrI,EAAKqI,EAChB,CACJ,EAGAlJ,EAAQs4B,OAAU,WACd,IAAM0G,EAAkC,kBAAf3G,YAA2B,WAAYA,WAAaA,WAAWC,YAASx6B,EAC3FmhC,EACwB,oBAAnBC,EAAOliC,SACdkiC,EAAOliC,QAAQmiC,KAAKD,GACxB,MAAO,CACHE,KAAMH,IAAgBD,EAAYC,EAAY,eAAYnhC,EAC1DuhC,IAAKL,EAEb,CATkB,qCCrDlB,SAASjjB,EAAOnS,GACd,IAAKnB,OAAOC,cAAckB,IAAMA,EAAI,EAAG,MAAM,IAAIlL,MAAM,kCAADgD,OAAmCkI,GAC3F,CAEA,SAASiqB,EAAK5nB,GACZ,GAAiB,mBAANA,EAAiB,MAAM,IAAIvN,MAAM,yBAADgD,OAA0BuK,GACvE,CAGA,SAAgBsL,EAAQjO,GACtB,OACEA,aAAa5J,YACP,MAAL4J,GAA0B,kBAANA,GAAyC,eAAvBA,EAAE8W,YAAYC,IAEzD,CAEA,SAASvX,EAAMmD,GACb,IAAKsL,EAAQtL,GAAI,MAAM,IAAIvN,MAAM,uBAAuB,QAAAgI,EAAA9I,UAAAC,OADbwoB,EAAiB,IAAA1mB,MAAA+G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAjByf,EAAiBzf,EAAA,GAAAhJ,UAAAgJ,GAE5D,GAAIyf,EAAQxoB,OAAS,IAAMwoB,EAAQC,SAASra,EAAEpO,QAC5C,MAAM,IAAIa,MAAM,iCAADgD,OAAkC2kB,EAAO,oBAAA3kB,OAAmBuK,EAAEpO,QACjF,CAQA,SAASgD,EAAK8V,GACZ,GAAiB,oBAANA,GAAwC,oBAAbA,EAAEzD,OACtC,MAAM,IAAIxU,MAAM,mDAClBqd,EAAOpF,EAAEoB,WACTgE,EAAOpF,EAAEsB,SACX,CAEA,SAAS6b,EAAOC,GAAmC,IAApBC,IAAap2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1C,GAAIm2B,EAASE,UAAW,MAAM,IAAIv1B,MAAM,oCACxC,GAAIs1B,GAAiBD,EAASG,SAAU,MAAM,IAAIx1B,MAAM,wCAC1D,CACA,SAASyS,EAAOsR,EAAUsR,GACxBjrB,EAAM2Z,GACN,IAAM0R,EAAMJ,EAAShc,UACrB,GAAI0K,EAAI5kB,OAASs2B,EACf,MAAM,IAAIz1B,MAAM,yDAADgD,OAA0DyyB,GAE7E,oHAESn0B,EAAAA,OAAA+b,EAAQ/b,EAAAA,KAAA6zB,EAtCjB7zB,EAAAA,QAAAuX,EAsCuBvX,EAAAA,MAAA8I,EAAO9I,EAAAA,KAAAa,EAAMb,EAAAA,OAAA8zB,EAAQ9zB,EAAAA,OAAAmR,EAE5C,IAAMijB,EAAS,CAAErY,OAAAA,EAAQ8X,KAAAA,EAAM/qB,MAAAA,EAAOjI,KAAAA,EAAMizB,OAAAA,EAAQ3iB,OAAAA,GACpDnR,EAAAA,QAAeo0B,wRClDf,IAAM0B,EAA6Br4B,OAAO0W,KAAAG,IAAA,EAAK,IAAK,GAC9C2gB,EAAuBx3B,OAAO,IAGpC,SAASs4B,EAAQnsB,GACf,OAD4BhM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACb,CAAE+Y,EAAGlO,OAAOmB,EAAIksB,GAAa9pB,EAAGvD,OAAQmB,GAAKqrB,EAAQa,IAC7D,CAAEnf,EAAsC,EAAnClO,OAAQmB,GAAKqrB,EAAQa,GAAiB9pB,EAA4B,EAAzBvD,OAAOmB,EAAIksB,GAClE,CAEA,SAASE,EAAM1W,GAGb,IAHsC,IAAV2W,EAAEr4B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1Bs4B,EAAK,IAAIC,YAAY7W,EAAIzhB,QACzBu4B,EAAK,IAAID,YAAY7W,EAAIzhB,QACpBoD,EAAI,EAAGA,EAAIqe,EAAIzhB,OAAQoD,IAAK,CACnC,IAAAo1B,EAAiBN,EAAQzW,EAAIre,GAAIg1B,GAAIpnB,EACpB,CADRwnB,EAAD1f,EAAI0f,EAADrqB,GACVkqB,EAAGj1B,GAAE4N,EAAA,GAAEunB,EAAGn1B,GAAE4N,EAAA,EACf,CACA,MAAO,CAACqnB,EAAIE,EACd,CA2CEp2B,EAAAA,QAAA+1B,EAAS/1B,EAAAA,MAAAg2B,EAzCX,IAAMM,EAAQ,SAAC3f,EAAW3K,GAAS,OAAMvO,OAAOkZ,IAAM,IAAMse,EAAQx3B,OAAOuO,IAAM,EAAE,EAyCjEhM,EAAAA,MAAAs2B,EAvClB,IAAMC,EAAQ,SAAC5f,EAAW6f,EAAYvmB,GAAS,OAAK0G,IAAM1G,CAAC,EAwCzDjQ,EAAAA,MAAAu2B,EAvCF,IAAME,EAAQ,SAAC9f,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAMiE,CAAE,EAuCrEjQ,EAAAA,MAAAy2B,EArCT,IAAMC,EAAS,SAAC/f,EAAW3K,EAAWiE,GAAS,OAAM0G,IAAM1G,EAAMjE,GAAM,GAAKiE,CAAG,EAsC7EjQ,EAAAA,OAAA02B,EArCF,IAAMC,EAAS,SAAChgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAMiE,CAAE,EAqCrEjQ,EAAAA,OAAA22B,EAnCV,IAAMC,EAAS,SAACjgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM,GAAK1G,EAAOjE,IAAOiE,EAAI,EAAI,EAmCpEjQ,EAAAA,OAAA42B,EAlClB,IAAMC,EAAS,SAAClgB,EAAW3K,EAAWiE,GAAS,OAAM0G,IAAO1G,EAAI,GAAQjE,GAAM,GAAKiE,CAAG,EAkC5DjQ,EAAAA,OAAA62B,EAhC1B,IAAMC,EAAU,SAACC,EAAY/qB,GAAS,OAAKA,CAAC,EAiC1ChM,EAAAA,QAAA82B,EAhCF,IAAME,EAAU,SAACrgB,EAAW6f,GAAU,OAAK7f,CAAC,EAgCjC3W,EAAAA,QAAAg3B,EA9BX,IAAMC,EAAS,SAACtgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAK1G,EAAMjE,IAAO,GAAKiE,CAAG,EA+B7EjQ,EAAAA,OAAAi3B,EA9BF,IAAMC,EAAS,SAACvgB,EAAW3K,EAAWiE,GAAS,OAAMjE,GAAKiE,EAAM0G,IAAO,GAAK1G,CAAG,EA8BrEjQ,EAAAA,OAAAk3B,EA5BV,IAAMC,EAAS,SAACxgB,EAAW3K,EAAWiE,GAAS,OAAMjE,GAAMiE,EAAI,GAAQ0G,IAAO,GAAK1G,CAAG,EA4BpEjQ,EAAAA,OAAAm3B,EA3BlB,IAAMC,EAAS,SAACzgB,EAAW3K,EAAWiE,GAAS,OAAM0G,GAAM1G,EAAI,GAAQjE,IAAO,GAAKiE,CAAG,EAItF,SAAS7H,EAAI8tB,EAAYE,EAAYiB,EAAYC,GAC/C,IAAMtrB,GAAKoqB,IAAO,IAAMkB,IAAO,GAC/B,MAAO,CAAE3gB,EAAIuf,EAAKmB,GAAOrrB,EAACmI,KAAAG,IAAG,EAAK,IAAM,GAAM,EAAGtI,EAAO,EAAJA,EACtD,CAoB0BhM,EAAAA,OAAAo3B,EACxBp3B,EAAAA,IAAAoI,EAnBF,IAAMmvB,EAAQ,SAACnB,EAAYkB,EAAYE,GAAU,OAAMpB,IAAO,IAAMkB,IAAO,IAAME,IAAO,EAAE,EAmBnFx3B,EAAAA,MAAAu3B,EAlBP,IAAME,EAAQ,SAACC,EAAaxB,EAAYmB,EAAYM,GAAU,OAC3DzB,EAAKmB,EAAKM,GAAOD,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EAiB9BtU,EAAAA,MAAAy3B,EAhBd,IAAMG,EAAQ,SAACxB,EAAYkB,EAAYE,EAAYK,GAAU,OAC1DzB,IAAO,IAAMkB,IAAO,IAAME,IAAO,IAAMK,IAAO,EAAE,EAe9B73B,EAAAA,MAAA43B,EAdrB,IAAME,EAAQ,SAACJ,EAAaxB,EAAYmB,EAAYM,EAAYI,GAAU,OACvE7B,EAAKmB,EAAKM,EAAKI,GAAOL,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EAarBtU,EAAAA,MAAA83B,EAZ5B,IAAME,EAAQ,SAAC5B,EAAYkB,EAAYE,EAAYK,EAAYI,GAAU,OACtE7B,IAAO,IAAMkB,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMI,IAAO,EAAE,EAWtBj4B,EAAAA,MAAAg4B,EAV1C,IAAME,EAAQ,SAACR,EAAaxB,EAAYmB,EAAYM,EAAYI,EAAYI,GAAU,OACnFjC,EAAKmB,EAAKM,EAAKI,EAAKI,GAAOT,EAAGvjB,KAAAG,IAAG,EAAK,IAAM,GAAM,CAAC,EASnBtU,EAAAA,MAAAk4B,EAGnC,IAAME,EAAM,CACVrC,QAAAA,EAASC,MAAAA,EAAOM,MAAAA,EAChBC,MAAAA,EAAOE,MAAAA,EACPC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EACxBC,QAAAA,EAASE,QAAAA,EACTC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EAAQC,OAAAA,EACxBhvB,IAAAA,EAAKmvB,MAAAA,EAAOE,MAAAA,EAAOG,MAAAA,EAAOE,MAAAA,EAAOI,MAAAA,EAAOF,MAAAA,GAE1Ch4B,EAAAA,QAAeo4B,qGCzEFp4B,EAAAA,OACW,kBAAfq4B,YAA2B,WAAYA,WAAaA,WAAWC,YAASx6B,0UCuBjF,IA3BA,IAAAu2B,EAAAr3B,EAAA,OACAk9B,EAAAl9B,EAAA,OACAuW,EAAAvW,EAAA,OAgBMm9B,EAAoB,GACpBC,EAAsB,GACtBC,EAAuB,GACvB78B,EAAsBC,OAAO,GAC7B+V,EAAsB/V,OAAO,GAC7B8d,EAAsB9d,OAAO,GAC7B68B,EAAsB78B,OAAO,GAC7B88B,EAAwB98B,OAAO,KAC/B+8B,EAAyB/8B,OAAO,KAC7Bg9B,EAAQ,EAAGnO,EAAI9Y,EAAKuG,EAAI,EAAGC,EAAI,EAAGygB,EAAQ,GAAIA,IAAS,CAC9D,IAAA5rB,EACS,CAACmL,GAAI,EAAID,EAAI,EAAIC,GAAK,GAA9BD,EAAClL,EAAA,GAAEmL,EAACnL,EAAA,GACLsrB,EAAQ1vB,KAAK,GAAK,EAAIuP,EAAID,IAE1BqgB,EAAU3vB,MAAQgwB,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAGnD,IADA,IAAI3H,EAAIt1B,EACCgc,EAAI,EAAGA,EAAI,EAAGA,KACrB8S,GAAMA,GAAK9Y,GAAS8Y,GAAKgO,GAAOE,GAAWD,GACnChf,IAAKuX,GAAKtf,IAASA,GAAuB/V,OAAO+b,IAAMhG,GAEjE6mB,EAAW5vB,KAAKqoB,EAClB,CACA,IAA0E4H,EAAA36B,GAAvB,EAAAm6B,EAAAlE,OAAMqE,GAAY,GAAK,GAAnEM,EAAWD,EAAA,GAAEE,EAAWF,EAAA,GAGzBG,EAAQ,SAAClkB,EAAW3K,EAAWiE,GAAS,OAAMA,EAAI,IAAK,EAAAiqB,EAAA/C,QAAOxgB,EAAG3K,EAAGiE,IAAK,EAAAiqB,EAAAjD,QAAOtgB,EAAG3K,EAAGiE,EAAE,EACxF6qB,EAAQ,SAACnkB,EAAW3K,EAAWiE,GAAS,OAAMA,EAAI,IAAK,EAAAiqB,EAAA9C,QAAOzgB,EAAG3K,EAAGiE,IAAK,EAAAiqB,EAAAhD,QAAOvgB,EAAG3K,EAAGiE,EAAE,EAG9F,SAAgB8qB,EAAQ9qB,GAGtB,IAHyD,IAAnB+qB,EAAAp9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GACjDyxB,EAAI,IAAI8G,YAAY,IAEjBsE,EAAQ,GAAKO,EAAQP,EAAQ,GAAIA,IAAS,CAEjD,IAAK,IAAI1gB,EAAI,EAAGA,EAAI,GAAIA,IAAKsV,EAAEtV,GAAK9J,EAAE8J,GAAK9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IAAM9J,EAAE8J,EAAI,IACrF,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAO3B,IANA,IAAMkhB,GAAQlhB,EAAI,GAAK,GACjBmhB,GAAQnhB,EAAI,GAAK,GACjBohB,EAAK9L,EAAE6L,GACPE,EAAK/L,EAAE6L,EAAO,GACdG,EAAKR,EAAMM,EAAIC,EAAI,GAAK/L,EAAE4L,GAC1BK,EAAKR,EAAMK,EAAIC,EAAI,GAAK/L,EAAE4L,EAAO,GAC9BjhB,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAC3B/J,EAAE8J,EAAIC,IAAMqhB,EACZprB,EAAE8J,EAAIC,EAAI,IAAMshB,EAMpB,IAFA,IAAIC,EAAOtrB,EAAE,GACTurB,EAAOvrB,EAAE,GACJ6iB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMpkB,EAAQ0rB,EAAUtH,GAClBuI,EAAKR,EAAMU,EAAMC,EAAM9sB,GACvB4sB,EAAKR,EAAMS,EAAMC,EAAM9sB,GACvB+sB,EAAKtB,EAAQrH,GACnByI,EAAOtrB,EAAEwrB,GACTD,EAAOvrB,EAAEwrB,EAAK,GACdxrB,EAAEwrB,GAAMJ,EACRprB,EAAEwrB,EAAK,GAAKH,CACd,CAEA,IAAK,IAAIthB,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IAAKsV,EAAEtV,GAAK9J,EAAE+J,EAAID,GAC1C,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAK9J,EAAE+J,EAAID,KAAOsV,GAAGtV,EAAI,GAAK,IAAMsV,GAAGtV,EAAI,GAAK,GAC1E,CAEA9J,EAAE,IAAM0qB,EAAYF,GACpBxqB,EAAE,IAAM2qB,EAAYH,EACtB,CACApL,EAAErmB,KAAK,EACT,CAzCAhJ,EAAAA,QAAA+6B,EAyCC,IAEYW,EAAO,SAAAnH,GAAAtwB,EAAAy3B,EAAAnH,GAAA,IAAAhuB,EAAArC,EAAAw3B,GAQlB,SAAAA,EACSzjB,EACA0jB,EACA5jB,GAEsB,IAAA3J,EADnBwtB,EAAAh+B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACAo9B,EAAAp9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GAM3B,GAN6BQ,EAAA,KAAAs9B,IAE7BttB,EAAA7H,EAAAf,KAAA,OANOyS,SAAAA,EACA7J,EAAAutB,OAAAA,EACAvtB,EAAA2J,UAAAA,EACG3J,EAAAwtB,UAAAA,EACAxtB,EAAA4sB,OAAAA,EAXF5sB,EAAA4T,IAAM,EACN5T,EAAAytB,OAAS,EACTztB,EAAA8lB,UAAW,EAEX9lB,EAAA6lB,WAAY,GAWpB,EAAAI,EAAAtY,QAAOhE,GAEH,GAAK3J,EAAK6J,UAAY7J,EAAK6J,UAAY,IACzC,MAAM,IAAIvZ,MAAM,4CAEa,OAD/B0P,EAAKonB,MAAQ,IAAI91B,WAAW,KAC5B0O,EAAK0tB,SAAU,EAAAvoB,EAAAwoB,KAAI3tB,EAAKonB,OAAOpnB,CACjC,CAkFC,OAlFA7P,EAAAm9B,EAAA,EAAAl9B,IAAA,SAAAC,MACS,WACH8U,EAAAkL,OAAM,EAAAlL,EAAA+rB,YAAWjhC,KAAKy9B,SAC3Bf,EAAQ18B,KAAKy9B,QAASz9B,KAAK28B,QACtBznB,EAAAkL,OAAM,EAAAlL,EAAA+rB,YAAWjhC,KAAKy9B,SAC3Bz9B,KAAKw9B,OAAS,EACdx9B,KAAK2jB,IAAM,CACb,GAAC,CAAAxjB,IAAA,SAAAC,MACD,SAAOiG,IACL,EAAA2vB,EAAAP,QAAOz1B,MAIP,IAHA,IAAQ4Z,EAAoB5Z,KAApB4Z,SAAUud,EAAUn3B,KAAVm3B,MAEZvV,GADNvb,GAAO,EAAA6O,EAAAiM,SAAQ9a,IACE7G,OACRmkB,EAAM,EAAGA,EAAM/B,GAAO,CAE7B,IADA,IAAM0U,EAAOxgB,KAAKggB,IAAIlc,EAAW5Z,KAAK2jB,IAAK/B,EAAM+B,GACxC/gB,EAAI,EAAGA,EAAI0zB,EAAM1zB,IAAKu0B,EAAMn3B,KAAK2jB,QAAUtd,EAAKsd,KACrD3jB,KAAK2jB,MAAQ/J,GAAU5Z,KAAK29B,QAClC,CACA,OAAO39B,IACT,GAAC,CAAAG,IAAA,SAAAC,MACS,WACR,IAAIJ,KAAK61B,SAAT,CACA71B,KAAK61B,UAAW,EAChB,IAAQsB,EAAiCn3B,KAAjCm3B,MAAOmG,EAA0Bt9B,KAA1Bs9B,OAAQ3Z,EAAkB3jB,KAAlB2jB,IAAK/J,EAAa5Z,KAAb4Z,SAE5Bud,EAAMxT,IAAQ2Z,EACU,KAAV,IAATA,IAAwB3Z,IAAQ/J,EAAW,GAAG5Z,KAAK29B,SACxDxG,EAAMvd,EAAW,IAAM,IACvB5Z,KAAK29B,QAPoB,CAQ3B,GAAC,CAAAx9B,IAAA,YAAAC,MACS,SAAUgkB,IAClB,EAAA4R,EAAAP,QAAOz1B,MAAM,IACb,EAAAg2B,EAAAvrB,OAAM2Z,GACNpkB,KAAK8H,SAGL,IAFA,IAAM81B,EAAY59B,KAAKm3B,MACfvd,EAAa5Z,KAAb4Z,SACC+J,EAAM,EAAG/B,EAAMwC,EAAI5kB,OAAQmkB,EAAM/B,GAAO,CAC3C5hB,KAAKw9B,QAAU5jB,GAAU5Z,KAAK29B,SAClC,IAAMrH,EAAOxgB,KAAKggB,IAAIlc,EAAW5Z,KAAKw9B,OAAQ5b,EAAM+B,GACpDS,EAAInM,IAAI2lB,EAAUnwB,SAASzN,KAAKw9B,OAAQx9B,KAAKw9B,OAASlH,GAAO3S,GAC7D3jB,KAAKw9B,QAAUlH,EACf3S,GAAO2S,CACT,CACA,OAAOlS,CACT,GAAC,CAAAjkB,IAAA,UAAAC,MACD,SAAQgkB,GAEN,IAAKpkB,KAAKu9B,UAAW,MAAM,IAAIl9B,MAAM,yCACrC,OAAOL,KAAK69B,UAAUzZ,EACxB,GAAC,CAAAjkB,IAAA,MAAAC,MACD,SAAIqK,GAEF,OADA,EAAAurB,EAAAtY,QAAOjT,GACAzK,KAAK89B,QAAQ,IAAIz8B,WAAWoJ,GACrC,GAAC,CAAAtK,IAAA,aAAAC,MACD,SAAWgkB,GAET,IADA,EAAA4R,EAAAljB,QAAOsR,EAAKpkB,MACRA,KAAK61B,SAAU,MAAM,IAAIx1B,MAAM,+BAGnC,OAFAL,KAAK69B,UAAUzZ,GACfpkB,KAAKq3B,UACEjT,CACT,GAAC,CAAAjkB,IAAA,SAAAC,MACD,WACE,OAAOJ,KAAKo3B,WAAW,IAAI/1B,WAAWrB,KAAK0Z,WAC7C,GAAC,CAAAvZ,IAAA,UAAAC,MACD,WACEJ,KAAK41B,WAAY,EACjB51B,KAAKm3B,MAAMxsB,KAAK,EAClB,GAAC,CAAAxK,IAAA,aAAAC,MACD,SAAW0tB,GACT,IAAQlU,EAAmD5Z,KAAnD4Z,SAAU0jB,EAAyCt9B,KAAzCs9B,OAAQ5jB,EAAiC1Z,KAAjC0Z,UAAWijB,EAAsB38B,KAAtB28B,OAAQY,EAAcv9B,KAAdu9B,UAY7C,OAXAzP,IAAAA,EAAO,IAAIuP,EAAOzjB,EAAU0jB,EAAQ5jB,EAAW6jB,EAAWZ,IAC1D7O,EAAG2P,QAAQxlB,IAAIjY,KAAKy9B,SACpB3P,EAAGnK,IAAM3jB,KAAK2jB,IACdmK,EAAG0P,OAASx9B,KAAKw9B,OACjB1P,EAAG+H,SAAW71B,KAAK61B,SACnB/H,EAAG6O,OAASA,EAEZ7O,EAAGwP,OAASA,EACZxP,EAAGpU,UAAYA,EACfoU,EAAGyP,UAAYA,EACfzP,EAAG8H,UAAY51B,KAAK41B,UACb9H,CACT,KAACuP,CAAA,CAzGiB,CAAQnoB,EAAAsiB,MAA5B71B,EAAAA,OAAA07B,EA4GA,IAAMlZ,EAAM,SAACmZ,EAAgB1jB,EAAkBF,GAAiB,OAC9D,EAAAxE,EAAA0mB,kBAAgB,kBAAM,IAAIyB,EAAOzjB,EAAU0jB,EAAQ5jB,EAAU,GAAC,EAEnD/X,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAK1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAC1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,IAAK,IAC1CxiB,EAAAA,SAA2BwiB,EAAI,EAAM,GAAI,IACzCxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAK5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAC5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,IAAK,IAC5CxiB,EAAAA,WAA6BwiB,EAAI,EAAM,GAAI,IAIxD,IAAM4Z,EAAW,SAACT,EAAgB1jB,EAAkBF,GAAiB,OACnE,EAAAxE,EAAA8oB,6BACE,eAACroB,EAAApW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAkB,CAAC,EAAC,OACnB,IAAI89B,EAAOzjB,EAAU0jB,OAAuB79B,IAAfkW,EAAKwE,MAAsBT,EAAY/D,EAAKwE,OAAO,EAAK,GACxF,EAEUxY,EAAAA,SAA2Bo8B,EAAS,GAAM,IAAK,IAC/Cp8B,EAAAA,SAA2Bo8B,EAAS,GAAM,IAAK,wCCpO5D,IAAAh+B,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAA8G,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,+VAQA,IAAAs/B,EAAAt/B,EAAA,OACAq3B,EAAAr3B,EAAA,OAGAgD,EAAAA,QAAA,SAAwBsJ,GACtB,OACEA,aAAa5J,YACP,MAAL4J,GAA0B,kBAANA,GAAyC,eAAvBA,EAAE8W,YAAYC,IAEzD,EAOargB,EAAAA,GAAK,SAACiL,GAAe,OAAK,IAAIvL,WAAWuL,EAAId,OAAQc,EAAI8pB,WAAY9pB,EAAI+B,WAAW,EACpFhN,EAAAA,IAAM,SAACiL,GAAe,OACjC,IAAIkrB,YAAYlrB,EAAId,OAAQc,EAAI8pB,WAAY5gB,KAAKooB,MAAMtxB,EAAI+B,WAAa,GAAG,EAGhEhN,EAAAA,WAAa,SAACiL,GAAe,OACxC,IAAIuxB,SAASvxB,EAAId,OAAQc,EAAI8pB,WAAY9pB,EAAI+B,WAAW,EAG7ChN,EAAAA,KAAO,SAACy8B,EAAc/tB,GAAa,OAAM+tB,GAAS,GAAK/tB,EAAW+tB,IAAS/tB,CAAM,EAEjF1O,EAAAA,KAAO,SAACy8B,EAAc/tB,GAAa,OAC7C+tB,GAAQ/tB,EAAW+tB,IAAU,GAAK/tB,IAAY,CAAE,EAEtC1O,EAAAA,KAAmE,KAA5D,IAAIN,WAAW,IAAIy2B,YAAY,CAAC,YAAahsB,QAAQ,GAE5DnK,EAAAA,SAAW,SAACy8B,GAAY,OACjCA,GAAQ,GAAM,WACdA,GAAQ,EAAK,SACbA,IAAS,EAAK,MACdA,IAAS,GAAM,GAAK,EAEXz8B,EAAAA,aAAeA,EAAAye,KAAO,SAAC7U,GAAS,OAAKA,CAAC,EAAG,SAACA,GAAS,OAAK,EAAA5J,EAAAu/B,UAAS31B,EAAE,EAGhF5J,EAAAA,WAAA,SAA2BiL,GACzB,IAAK,IAAIhK,EAAI,EAAGA,EAAIgK,EAAIpN,OAAQoD,IAC9BgK,EAAIhK,IAAK,EAAAjB,EAAAu/B,UAASt0B,EAAIhK,GAE1B,EAGA,IAAMqf,EAAwB3gB,MAAMd,KAAK,CAAEhB,OAAQ,MAAO,SAAC0iB,EAAGtf,GAAC,OAC7DA,EAAEN,SAAS,IAAI6f,SAAS,EAAG,IAAI,IAKjCxgB,EAAAA,WAAA,SAA2B8I,IACzB,EAAAurB,EAAAvrB,OAAOA,GAGP,IADA,IAAIH,EAAM,GACD1H,EAAI,EAAGA,EAAI6H,EAAMjL,OAAQoD,IAChC0H,GAAO2X,EAAMxX,EAAM7H,IAErB,OAAO0H,CACT,EAGA,IAAMgY,EAAS,CAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC7D,SAASC,EAAcC,GACrB,OAAIA,GAAQR,EAAOC,IAAMO,GAAQR,EAAOE,GAAWM,EAAOR,EAAOC,GAC7DO,GAAQR,EAAOG,IAAMK,GAAQR,EAAOI,GAAWI,GAAQR,EAAOG,GAAK,IACnEK,GAAQR,EAAOK,IAAMG,GAAQR,EAAOM,GAAWE,GAAQR,EAAOK,GAAK,SAAvE,CAEF,CAKAhhB,EAAAA,WAAA,SAA2B2I,GACzB,GAAmB,kBAARA,EAAkB,MAAM,IAAIjK,MAAM,mCAAqCiK,GAClF,IAAM0Y,EAAK1Y,EAAI9K,OACTyjB,EAAKD,EAAK,EAChB,GAAIA,EAAK,EAAG,MAAM,IAAI3iB,MAAM,0DAA4D2iB,GAExF,IADA,IAAM7W,EAAQ,IAAI9K,WAAW4hB,GACpBC,EAAK,EAAGC,EAAK,EAAGD,EAAKD,EAAIC,IAAMC,GAAM,EAAG,CAC/C,IAAMC,EAAKP,EAAcvY,EAAIgF,WAAW6T,IAClCxE,EAAKkE,EAAcvY,EAAIgF,WAAW6T,EAAK,IAC7C,QAAW1jB,IAAP2jB,QAA2B3jB,IAAPkf,EAAkB,CACxC,IAAMmE,EAAOxY,EAAI6Y,GAAM7Y,EAAI6Y,EAAK,GAChC,MAAM,IAAI9iB,MAAM,+CAAiDyiB,EAAO,cAAgBK,EAC1F,CACAhX,EAAM+W,GAAW,GAALE,EAAUzE,CACxB,CACA,OAAOxS,CACT,EAKO,IAAMkyB,EAAQ,eAAA7tB,EAAA1K,EAAAL,IAAAQ,MAAG,SAAAC,IAAA,OAAAT,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,wBAAAE,EAAAM,OAAA,GAAAtB,EAAA,KAAc,kBAAjB,OAAAsK,EAAAzI,MAAA,KAAAxI,UAAA,KAGU,SAAA++B,IAU9B,OAV8BA,EAAAx4B,EAAAL,IAAAQ,MAAxB,SAAAs4B,EAAyBC,EAAeC,EAAcC,GAAuB,IAAAC,EAAA/7B,EAAA6gB,EAAA,OAAAhe,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9E23B,EAAKC,KAAKC,MACLj8B,EAAI,EAAC,YAAEA,EAAI47B,GAAK,CAAA13B,EAAAE,KAAA,SAGK,GAF5B03B,EAAG97B,MAEG6gB,EAAOmb,KAAKC,MAAQF,IACd,GAAKlb,EAAOgb,GAAI,CAAA33B,EAAAE,KAAA,eAAAF,EAAAkJ,OAAA,6BAAAlJ,EAAAE,KAAA,GACtB,EAAArF,EAAA08B,YAAU,OAChBM,GAAMlb,EAAK,QANc7gB,IAAGkE,EAAAE,KAAA,iCAAAF,EAAAU,OAAA,GAAA+2B,EAAA,MAQ/Bx2B,MAAA,KAAAxI,UAAA,CASD,SAAgBia,EAAYrU,GAC1B,GAAmB,kBAARA,EAAkB,MAAM,IAAI9E,MAAM,oCAADgD,cAA4C8B,IACxF,OAAO,IAAI9D,YAAW,IAAIqiB,aAAchjB,OAAOyE,GACjD,CAQA,SAAgBgc,EAAQ9a,GAGtB,MAFoB,kBAATA,IAAmBA,EAAOmT,EAAYnT,KACjD,EAAA2vB,EAAAvrB,OAAOpE,GACAA,CACT,CArCa1E,EAAAA,SAAQ08B,EAGrB18B,EAAAA,UADA,SAC+BkH,EAAAC,EAAAC,GAAA,OAAAu1B,EAAAv2B,MAAC,KAADxI,UAAA,EAmB/BoC,EAAAA,YAAA6X,EAWA7X,EAAAA,QAAAwf,EASAxf,EAAAA,YAAA,WAEE,IADA,IAAI0hB,EAAM,EACDzgB,EAAI,EAAGA,EAAIrD,UAAOC,OAAQoD,IAAK,CACtC,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,IACjB,EAAAozB,EAAAvrB,OAAOQ,GACPoY,GAAOpY,EAAEzL,MACX,CAEA,IADA,IAAMkM,EAAM,IAAIrK,WAAWgiB,GAClBzgB,EAAI,EAAG0gB,EAAM,EAAG1gB,EAAIrD,UAAOC,OAAQoD,IAAK,CAC/C,IAAMqI,EAAWrI,EAAC,GAAArD,UAAAC,QAADoD,OAACnD,EAAAF,UAADqD,GACjB8I,EAAIuM,IAAIhN,EAAGqY,GACXA,GAAOrY,EAAEzL,MACX,CACA,OAAOkM,CACT,EAEA,IACsB8rB,EAAI,oBAAAA,IAAAz3B,EAAA,KAAAy3B,EAAA,CAwBvB,OAxBuBt3B,EAAAs3B,EAAA,EAAAr3B,IAAA,QAAAC,MAsBxB,WACE,OAAOJ,KAAKs6B,YACd,KAAC9C,CAAA,CAxBuB,GAA1B71B,EAAAA,KAAA61B,EAsCA,IAAMsH,EAAQ,CAAC,EAAEx8B,SAEjBX,EAAAA,UAAA,SACEo9B,EACAppB,GAEA,QAAalW,IAATkW,GAA2C,oBAArBmpB,EAAM33B,KAAKwO,GACnC,MAAM,IAAItV,MAAM,yCAElB,OADemM,OAAOwyB,OAAOD,EAAUppB,EAEzC,EAIAhU,EAAAA,gBAAA,SAAmDs9B,GACjD,IAAMC,EAAQ,SAACr0B,GAAU,OAAiBo0B,IAAW7kB,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC5E6E,EAAM+f,IAIZ,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,kBAAMoqB,GAAU,EACxBC,CACT,EAEAv9B,EAAAA,wBAAA,SACEs9B,GAEA,IAAMC,EAAQ,SAACr0B,EAAY8K,GAAQ,OAAiBspB,EAAStpB,GAAMyE,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC1F6E,EAAM+f,EAAS,CAAC,GAItB,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,SAACc,GAAO,OAAKspB,EAAStpB,EAAK,EACnCupB,CACT,EAEAv9B,EAAAA,2BAAA,SACEs9B,GAEA,IAAMC,EAAQ,SAACr0B,EAAY8K,GAAQ,OAAiBspB,EAAStpB,GAAMyE,OAAO+G,EAAQtW,IAAMwP,QAAQ,EAC1F6E,EAAM+f,EAAS,CAAC,GAItB,OAHAC,EAAMxlB,UAAYwF,EAAIxF,UACtBwlB,EAAMtlB,SAAWsF,EAAItF,SACrBslB,EAAMrqB,OAAS,SAACc,GAAO,OAAKspB,EAAStpB,EAAK,EACnCupB,CACT,EAKAv9B,EAAAA,YAAA,WAA4C,IAAhBw9B,EAAW5/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACxC,GAAI0+B,EAAAhE,QAA4C,oBAA3BgE,EAAAhE,OAAOmF,gBAC1B,OAAOnB,EAAAhE,OAAOmF,gBAAgB,IAAI/9B,WAAW89B,IAE/C,MAAM,IAAI9+B,MAAM,yCAClB,mqCC/PA6N,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,6GCFA,SAAYw/B,GACVA,EAAAA,EAAA,eACAA,EAAAA,EAAA,8BACD,CAHD,CAAYx/B,EAAAw/B,gBAAAx/B,EAAAA,cAAa,0GCAZA,EAAAA,SAA+B,CAC1C,CAAEyP,QAAS,EAAGgwB,UAAW,OACzB,CAAEhwB,QAAS,EAAGgwB,UAAW,OACzB,CAAEhwB,QAAS,EAAGgwB,UAAW,OACzB,CAAEhwB,QAAS,EAAGgwB,UAAW,OACzB,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,eAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,YAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,mBAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,OAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,SAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,cAC1B,CAAEhwB,QAAS,GAAIgwB,UAAW,QAC1B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,MAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,SAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,SAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,iBAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,iBAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,UAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,kBAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,QAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,gBAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,IAAKgwB,UAAW,OAC3B,CAAEhwB,QAAS,KAAMgwB,UAAW,UAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,OAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,mBAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,UAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,UAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,YAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,WAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,WAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,YAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,qBAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,cAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,OAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,iBAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,OAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,kBAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,WAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,QAC5B,CAAEhwB,QAAS,IAAMgwB,UAAW,iBAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,SAC5B,CAAEhwB,QAAS,KAAMgwB,UAAW,gBAC5B,CAAEhwB,QAAS,IAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,gBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,OAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,UAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,eAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,oBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,aAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,QAC7B,CAAEhwB,QAAS,KAAOgwB,UAAW,mBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,OAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,SAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,iBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,iBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,iBAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,MAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,MAAOgwB,UAAW,YAC7B,CAAEhwB,QAAS,OAAQgwB,UAAW,YAC9B,CAAEhwB,QAAS,OAAQgwB,UAAW,aAC9B,CAAEhwB,QAAS,OAAQgwB,UAAW,WAC9B,CAAEhwB,QAAS,OAAQgwB,UAAW,eAC9B,CAAEhwB,QAAS,OAAQgwB,UAAW,cAC9B,CAAEhwB,QAAS,OAAQgwB,UAAW,aAC9B,CAAEhwB,QAAS,SAAUgwB,UAAW,OAChC,CAAEhwB,QAAS,UAAWgwB,UAAW,kBACjC,CAAEhwB,QAAS,WAAYgwB,UAAW,UAClC,CAAEhwB,QAAS,WAAYgwB,UAAW,kBAClC,CAAEhwB,QAAS,QAAYgwB,UAAW,UAClC,CAAEhwB,QAAS,QAAYgwB,UAAW,YAClC,CAAEhwB,QAAS,YAAagwB,UAAW,SACnC,CAAEhwB,QAAS,YAAagwB,UAAW,SAGJ,YAA7B7K,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,iBAAAA,mBAAAA,iBAAAA,YAAAA,wBAAAA,uBAAAA,+BAAAA,2CAAAA,qBAAAA,qEAAAA,wBAAAA,mDAAAA,sBAAAA,2BAAAA,oBAAAA,0CAAAA,sBAAAA,MAAAA,gBAAAA,mCAAAA,oBAAAA,wEAAAA,2BAAAA,6CAAAA,+BAAAA,6CAAAA,oBAAAA,mFAAAA,sBAAAA,sEAAY8K,aACd1/B,EAAA2/B,SAASl1B,KAAK,CAAEg1B,UAAW,QAAShwB,QAAS,QACP,YAA7BmlB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,iBAAAA,mBAAAA,iBAAAA,YAAAA,wBAAAA,uBAAAA,+BAAAA,2CAAAA,qBAAAA,qEAAAA,wBAAAA,mDAAAA,sBAAAA,2BAAAA,oBAAAA,0CAAAA,sBAAAA,MAAAA,gBAAAA,mCAAAA,oBAAAA,wEAAAA,2BAAAA,6CAAAA,+BAAAA,6CAAAA,oBAAAA,mFAAAA,sBAAAA,sEAAY8K,cACrB1/B,EAAA2/B,SAASl1B,KAAK,CAAEg1B,UAAW,QAAShwB,QAAS,8QCrI/C,IAAAmwB,EAAA5iC,EAAA,OACA6iC,EAAA7iC,EAAA,OAEA,SAAgB8iC,EAAoBC,GAClC,IAAMC,EAAQD,EAAY/J,MAAM,KAC1Bz1B,EAAUy/B,EAAMniC,OAAS,EAAImiC,EAAM,GAAKA,EAAM,GAEpD,MAAO,CAAEt/B,OADMs/B,EAAMniC,OAAS,EAAImiC,EAAM,GAAK,GAC5Bz/B,QAAAA,EACnB,CAEA,SAAgB0/B,EAAmCxwB,GACjD,IAAMywB,EAAUL,EAAAF,SAASQ,MAAK,SAACD,GAAO,OAAKzwB,IAAYywB,EAAQzwB,OAAO,IACtE,IAAKywB,EACH,MAAM,IAAIxhC,MAAM,uDAElB,OAAOwhC,EAAQT,SACjB,CAEA,SAAgBW,EAA4B1/B,GAC1C,OAAOm/B,EAAAF,SAASxyB,MAAK,SAAA0B,GAAY,OAAAA,EAAT4wB,YAA8B/+B,CAAM,GAC9D,CAEA,SAAgB2/B,EAA6B3/B,EAAgB4/B,GAC3D,IAAMC,EAAyB7/B,IAAWu/B,EAAmCK,GAC7E,IAAKF,EAA4B1/B,KAAY6/B,EAC3C,MAAM,IAAI7hC,MAAM,oDAEpB,CAEA,SAAgB8hC,EAAwBjgC,GAEtC,MADuB,EAAAq/B,EAAAa,aAAYlgC,KAAY,EAAAq/B,EAAAc,WAAUngC,IAEvD,MAAM,IAAI7B,MAAK,4BAAAgD,OAA6BnB,GAEhD,CA/BAP,EAAAA,oBAAA8/B,EAOA9/B,EAAAA,mCAAAigC,EAQAjgC,EAAAA,4BAAAogC,EAIApgC,EAAAA,6BAAAqgC,EAOArgC,EAAAA,wBAAAwgC,EAOAxgC,EAAAA,uBAAA,SACE+/B,EACAO,GAEA,IAAAK,EAA4Bb,EAAoBC,GAAxCx/B,EAAOogC,EAAPpgC,QAASG,EAAMigC,EAANjgC,OAKjB,OAJA8/B,EAAwBjgC,GACpBG,GACF2/B,EAA6B3/B,EAAQ4/B,GAEhC,CAAE//B,QAAAA,EAASG,OAAAA,EACpB,6RC9CA,IAAAkgC,EAAAxC,EAAAphC,EAAA,QAEM6jC,EAAiB,UAqBvB,SAAgBC,EAAsBC,GAKpC,MAAO,CACLC,cAFwB,EAAAJ,EAAA7xB,SAAgBgyB,EAAaF,GAEnB7gC,EAAAihC,cAAgBjhC,EAAAkhC,0BAClDC,OAAQ,CACN,CAAElyB,KAAM,UAAWoR,KAAM,MACzB,CAAEpR,KAAM,UAAWoR,KAAM,SACzB,CAAEpR,KAAM,QAASoR,KAAM,QACvB,CAAEpR,KAAM,QAASoR,KAAM,aACvB,CAAEpR,KAAM,UAAWoR,KAAM,aACzB,CAAEpR,KAAM,UAAWoR,KAAM,WACzB,CAAEpR,KAAM,UAAWoR,KAAM,YACzB,CAAEpR,KAAM,UAAWoR,KAAM,YACzB,CAAEpR,KAAM,UAAWoR,KAAM,kBACzB,CAAEpR,KAAM,UAAWoR,KAAM,UAG/B,CAvCargB,EAAAA,0BAA4B,CACvC,CACEiP,KAAM,UACNoR,KAAM,sBAIGrgB,EAAAA,cAAgB,CAC3B,CACEiP,KAAM,UACNoR,KAAM,WAER,CACEpR,KAAM,UACNoR,KAAM,sBAKVrgB,EAAAA,sBAAA8gC,EAsBA9gC,EAAAA,kBAAA,SAAiC6O,GAKL,IAJ1BuyB,EAAWvyB,EAAXuyB,YACAL,EAAWlyB,EAAXkyB,YACAtxB,EAAOZ,EAAPY,QACA4xB,EAAmBxyB,EAAnBwyB,oBAEMC,GAAoB,EAAAV,EAAA7xB,SAAgBgyB,EAAaF,GACjDU,EAA+B,CACnCC,MAAOV,EAAsBC,GAC7BU,OAAQ,CACNC,kBAAmBN,GAErBO,YAAa,SACb3wB,QAAOoC,EAAAA,EAAA,GACFiuB,GAAmB,IACtB5iC,MAAO4iC,EAAoB5iC,MAC3BmjC,UAAWP,EAAoBO,UAC/BC,QAASR,EAAoBQ,QAC7BC,SAAUT,EAAoBS,SAC9BnkC,MAAO0jC,EAAoB1jC,SAM/B,OAHI2jC,IACFC,EAAUE,OAAOhyB,QAAUA,GAEtB8xB,CACT,2gBJxEAh1B,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,yOKFA,IAEY+hC,EAFZnB,EAAAxC,EAAAphC,EAAA,SAEA,SAAY+kC,GACVA,EAAA,4CACAA,EAAA,gCACAA,EAAA,8CACAA,EAAA,mBACD,CALD,CAAYA,EAAA/hC,EAAA+hC,gBAAA/hC,EAAAA,cAAa,KAOzB,IAAMgiC,GAAwBC,EAAAC,EAAA,GAC3BH,EAAcI,qBAAuB,WAASF,EAAAC,EAC9CH,EAAcK,eAAiB,WAASH,EAAAC,EACxCH,EAAcM,sBAAwB,WAASJ,EAAAC,EAC/CH,EAAcO,SAAW,WAASJ,GAGxBliC,EAAAA,eAAiB,SAACuiC,EAAwBC,GACrD,OAAMD,KAAWP,IAIV,EAAApB,EAAA7xB,SAAgByzB,EAASR,EAAyBO,GAC3D,qgCCtBA,IAAAE,EAAAzlC,EAAA,OACA0lC,EAAA1lC,EAAA,OAYA2lC,EAAA3lC,EAAA,OACA4lC,EAAAxE,EAAAphC,EAAA,QACA6lC,EAAAzE,EAAAphC,EAAA,QACA8lC,EAAA1E,EAAAphC,EAAA,QACA+lC,EAAA3E,EAAAphC,EAAA,QACAgmC,EAAA5E,EAAAphC,EAAA,QAEAG,EAAAH,EAAA,OACAimC,EAAAjmC,EAAA,OAKAkmC,EAAA9E,EAAAphC,EAAA,QACAmmC,EAAA/E,EAAAphC,EAAA,QAEA4hC,EAAA5hC,EAAA,OA0DMomC,EAAI,WAAV,SAAAA,IAAAhlC,EAAA,KAAAglC,GACEC,EAAA/sB,IAAA,aACAgtB,EAAAhtB,IAAA,aACAitB,EAAAjtB,IAAA,aACAktB,EAAAltB,IAAA,aACAmtB,EAAAntB,IAAA,aACAotB,EAAAptB,IAAA,YA4yBF,CAzxBG,OAjBD/X,EAAA6kC,EAAA,EAAA5kC,IAAA,OAAAC,MAmBA,eAAAklC,EAAAx/B,EAAAL,IAAAQ,MAQQ,SAAAC,EAAAsK,GAAA,IAAA+0B,EAAAxC,EAAAyC,EAAAC,EAAA,OAAAhgC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAOF,OANJu+B,EAAU/0B,EAAV+0B,WACAxC,EAAWvyB,EAAXuyB,YACAyC,EAAkBh1B,EAAlBg1B,mBACAC,EAAgBj1B,EAAhBi1B,iBAEAC,EAAA,KAAIV,EAAeO,EAAU,KAAAr+B,EAAAK,GAC7Bm+B,EAAAx+B,EAAAU,GAAA,KAAIV,EAAAqX,GAAA0mB,EAAA/9B,EAAAF,KAAA,EAA0Bu9B,EAAA7zB,QAAgBmE,OAAO,CACnD0wB,WAAYI,EAAA,KAAIX,EAAA,KAChBjC,YAAAA,EACAyC,mBAAAA,EACAC,iBAAAA,IACA,OAAAv+B,EAAAsiB,GAAAtiB,EAAAO,MAAA,EAAAP,EAAAK,IAAAL,EAAAU,GAAAV,EAAAqX,GAAArX,EAAAsiB,GAAA,KACFkc,EAAA,KAAIR,EAAiB,IAAIP,EAAAj0B,QAAai1B,EAAA,KAAIX,EAAA,KAAcW,EAAA,KAAIV,EAAA,KAAkBW,cAAa,KAC3FF,EAAA,KAAIP,EAAkB,IAAIT,EAAAh0B,QAAci1B,EAAA,KAAIX,EAAA,KAAcW,EAAA,KAAIV,EAAA,KAAkBW,cAAa,KAC7FF,EAAA,KAAIN,EAAiB,IAAIX,EAAA/zB,QAAai1B,EAAA,KAAIX,EAAA,KAAcW,EAAA,KAAIV,EAAA,KAAkBW,cAAa,KAC3FF,EAAA,KAAIL,EAA2B,IAAIb,EAAA9zB,QACjCi1B,EAAA,KAAIX,EAAA,KACJW,EAAA,KAAIV,EAAA,KAAkBW,cACvB,8BAAA1+B,EAAAM,OAAA,GAAAtB,EAAA,UACF,gBAAA2C,GAAA,OAAAy8B,EAAAv9B,MAAA,KAAAxI,UAAA,EA5BD,IA8BA,CAAAY,IAAA,UAAAC,MAAA,eAAAylC,EAAA//B,EAAAL,IAAAQ,MAOA,SAAAs4B,EAAAuH,GAAA,IAAAP,EAAAxC,EAAAyC,EAAAC,EAAA,OAAAhgC,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIkB,OAHhBu+B,EAAUO,EAAVP,WACAxC,EAAW+C,EAAX/C,YACAyC,EAAkBM,EAAlBN,mBACAC,EAAgBK,EAAhBL,iBAAgB3+B,EAAAE,KAAA,EAEH+9B,EAAKlwB,OAAO,CACvB0wB,WAAYA,GAAcI,EAAA,KAAIX,EAAA,KAC9BjC,YAAaA,GAAe,KAAKgD,aACjCP,mBAAoBA,GAAsBG,EAAA,KAAIV,EAAA,KAAkBO,mBAChEC,iBAAkBA,GAAoBE,EAAA,KAAIV,EAAA,KAAkBQ,mBAC5D,cAAA3+B,EAAAkJ,OAAA,SAAAlJ,EAAAW,MAAA,wBAAAX,EAAAU,OAAA,GAAA+2B,EAAA,UACH,gBAAAz1B,GAAA,OAAA+8B,EAAA99B,MAAA,KAAAxI,UAAA,EAnBD,IAqBA,CAAAY,IAAA,aAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIV,EAAA,KAAkBW,aAAaG,YAC5C,GAEA,CAAA5lC,IAAA,qBAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIV,EAAA,IACb,GAEA,CAAA9kC,IAAA,gBAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIX,EAAA,IACb,GAEA,CAAA7kC,IAAA,sBAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIV,EAAA,KAAkBe,kBAAkBD,YACjD,GAEA,CAAA5lC,IAAA,8BAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIV,EAAA,KAAkBgB,0BAA0BF,YACzD,GAEA,CAAA5lC,IAAA,qBAAAC,MAAA,eAAA8lC,EAAApgC,EAAAL,IAAAQ,MAKA,SAAAkgC,IAAA,OAAA1gC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SACS21B,EAAA,KAAIV,EAAA,KAAkBW,aAAaS,cAAY,wBAAAD,EAAA5+B,OAAA,GAAA2+B,EAAA,UACvD,yBAAAD,EAAAn+B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,YAAAC,MAAA,eAAAkmC,EAAAxgC,EAAAL,IAAAQ,MAKA,SAAAsgC,IAAA,OAAA9gC,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx2B,OAAA,SACS21B,EAAA,KAAIT,EAAA,KAAeuB,aAAW,wBAAAD,EAAAh/B,OAAA,GAAA++B,EAAA,UACtC,yBAAAD,EAAAv+B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,WAAAC,MAAA,eAAAsmC,EAAA5gC,EAAAL,IAAAQ,MAKA,SAAA0gC,IAAA,OAAAlhC,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,cAAA4/B,EAAA52B,OAAA,SACS21B,EAAA,KAAIV,EAAA,KAAkBW,aAAaiB,YAAU,wBAAAD,EAAAp/B,OAAA,GAAAm/B,EAAA,UACrD,yBAAAD,EAAA3+B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,eAAAC,MAAA,eAAA0mC,EAAAhhC,EAAAL,IAAAQ,MAKA,SAAA8gC,IAAA,OAAAthC,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,cAAAggC,EAAAh3B,OAAA,SACS21B,EAAA,KAAIT,EAAA,KAAe+B,gBAAc,wBAAAD,EAAAx/B,OAAA,GAAAu/B,EAAA,UACzC,yBAAAD,EAAA/+B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,aAAAC,MAAA,eAAA8mC,EAAAphC,EAAAL,IAAAQ,MAKA,SAAAkhC,IAAA,OAAA1hC,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,cAAAogC,EAAAp3B,OAAA,SACS21B,EAAA,KAAIX,EAAA,KAAaqC,cAAY,wBAAAD,EAAA5/B,OAAA,GAAA2/B,EAAA,UACrC,yBAAAD,EAAAn/B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,aAAAC,MAAA,eAAAknC,EAAAxhC,EAAAL,IAAAQ,MAKA,SAAAshC,IAAA,OAAA9hC,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,cAAAwgC,EAAAx3B,OAAA,SACS21B,EAAA,KAAIX,EAAA,KAAayC,WAAW,KAAK1B,eAAa,wBAAAyB,EAAAhgC,OAAA,GAAA+/B,EAAA,UACtD,yBAAAD,EAAAv/B,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,qBAAAC,MAKA,WACE,OAAOulC,EAAA,KAAIN,EAAA,KAAyBqC,oBACtC,GAEA,CAAAvnC,IAAA,WAAAC,MAAA,eAAAunC,EAAA7hC,EAAAL,IAAAQ,MAMA,SAAA2hC,IAAA,OAAAniC,IAAAoB,MAAA,SAAAghC,GAAA,cAAAA,EAAA9gC,KAAA8gC,EAAA7gC,MAAA,cAAA6gC,EAAA73B,OAAA,SACS21B,EAAA,KAAIP,EAAA,KAAe0C,YAAU,wBAAAD,EAAArgC,OAAA,GAAAogC,EAAA,UACrC,yBAAAD,EAAA5/B,MAAA,KAAAxI,UAAA,EARD,IAUA,CAAAY,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAKA,SAAA+hC,IAAA,OAAAviC,IAAAoB,MAAA,SAAAohC,GAAA,cAAAA,EAAAlhC,KAAAkhC,EAAAjhC,MAAA,cAAAihC,EAAAj4B,OAAA,SACS21B,EAAA,KAAIR,EAAA,KAAgB+C,cAAY,wBAAAD,EAAAzgC,OAAA,GAAAwgC,EAAA,UACxC,yBAAAD,EAAAhgC,MAAA,KAAAxI,UAAA,EAPD,IASA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAMA,SAAAmiC,EAAsBC,GAAqB,OAAA5iC,IAAAoB,MAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,cAAAshC,EAAAt4B,OAAA,SAClC21B,EAAA,KAAIR,EAAA,KAAgBoD,gBAAgBF,IAAc,wBAAAC,EAAA9gC,OAAA,GAAA4gC,EAAA,UAC1D,gBAAAr/B,GAAA,OAAAo/B,EAAApgC,MAAA,KAAAxI,UAAA,EARD,IAUA,CAAAY,IAAA,UAAAC,MAAA,eAAAooC,EAAA1iC,EAAAL,IAAAQ,MAMA,SAAAwiC,EAAcC,GAAoB,OAAAjjC,IAAAoB,MAAA,SAAA8hC,GAAA,cAAAA,EAAA5hC,KAAA4hC,EAAA3hC,MAAA,cAAA2hC,EAAA34B,OAAA,SACzB21B,EAAA,KAAIT,EAAA,KAAe0D,QAAQF,IAAa,wBAAAC,EAAAnhC,OAAA,GAAAihC,EAAA,UAChD,gBAAAI,GAAA,OAAAL,EAAAzgC,MAAA,KAAAxI,UAAA,EARD,IAUA,CAAAY,IAAA,oBAAAC,MAAA,eAAA0oC,EAAAhjC,EAAAL,IAAAQ,MAOA,SAAA8iC,EAAA1M,GAAA,IAAA2G,EAAAgG,EAAAC,EAAAzuB,EAAA0uB,EAAAlD,EAAAmD,EAAAC,EAAAC,EAAA,OAAA5jC,IAAAoB,MAAA,SAAAyiC,GAAA,cAAAA,EAAAviC,KAAAuiC,EAAAtiC,MAAA,OAGS,GAFPg8B,EAAmB3G,EAAnB2G,oBAAmBgG,EAAA3M,EACnB4M,UAAAA,OAAS,IAAAD,GAAQA,EACjBxuB,EAAO6hB,EAAP7hB,UAEI,EAAA1b,EAAAyqC,wBAAuBvG,IAAuD,IAA/BA,EAAoBxjC,OAAY,CAAA8pC,EAAAtiC,KAAA,cAC3E,IAAI3G,MAAM,uCAAsC,OAsBvD,OAnBG,EAAAvB,EAAAyqC,wBAAuBvG,IAAwBA,EAAoBxjC,OAAS,GACxEwmC,EAAoBiD,EACtBtD,EAAA,KAAIV,EAAA,KAAkBgB,0BACtBN,EAAA,KAAIV,EAAA,KAAkBe,kBACpBmD,GAAgB,EAAA5I,EAAAiJ,qBACpBxG,EAAoBn2B,IAAI0zB,EAAAkJ,iCAEpBL,EAAoBr0B,EAAAA,EAAA,GACrByF,GAAO,IACVsT,GAAIkY,EAAkBD,aACtB3lC,MAAO,IACPiG,KAAM2/B,EAAkBtlC,OAAO,YAAa,CAACyoC,IAC7CO,UAAWrF,EAAAlD,cAAcwI,eAE3BT,EAAiBE,GAEjBF,GAAiB,EAAApqC,EAAAyqC,wBAAuBvG,GAAoBjuB,EAAAA,EAAA,GACnDyF,GAAYwoB,EAAoB,IACrCA,EACLsG,EAAAtiC,KAAA,GACqC,EAAAu5B,EAAAqJ,gCACpCjE,EAAA,KAAIV,EAAA,KAAkBW,aACtBD,EAAA,KAAIX,EAAA,KACJkE,GACD,OAJ4B,OAAvBG,EAAuBC,EAAA7hC,KAAA6hC,EAAAt5B,OAAA,SAKtB,IAAI80B,EAAAp0B,QAAmB24B,IAAwB,wBAAAC,EAAA9hC,OAAA,GAAAuhC,EAAA,UACvD,gBAAAc,GAAA,OAAAf,EAAA/gC,MAAA,KAAAxI,UAAA,EA1CD,IA4CA,CAAAY,IAAA,6BAAAC,MAAA,eAAA0pC,EAAAhkC,EAAAL,IAAAQ,MAMA,SAAA8jC,EAAiCzqC,GAAa,IAAA0jC,EAAA,OAAAv9B,IAAAoB,MAAA,SAAAmjC,GAAA,cAAAA,EAAAjjC,KAAAijC,EAAAhjC,MAAA,OAO3C,OANKg8B,EAAkD,CACtDlV,GAAI,KAAKiY,aACTzmC,MAAAA,EACAc,MAAO,IACPiG,KAAM,KACNk9B,UAAW,GACZyG,EAAAh6B,OAAA,SACM,KAAKi6B,kBAAkB,CAAEjH,oBAAAA,KAAsB,wBAAAgH,EAAAxiC,OAAA,GAAAuiC,EAAA,UACvD,gBAAAG,GAAA,OAAAJ,EAAA/hC,MAAA,KAAAxI,UAAA,EAfD,IAiBA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+pC,EAAArkC,EAAAL,IAAAQ,MAMA,SAAAmkC,EAAsBC,GAAgC,IAAAC,EAAA,OAAA7kC,IAAAoB,MAAA,SAAA0jC,GAAA,cAAAA,EAAAxjC,KAAAwjC,EAAAvjC,MAAA,cAAAujC,EAAAvjC,KAAA,EAChB,KAAKijC,kBAAkB,CACzDjH,oBAAqBqH,EAAgBhkC,OACrC,OAGA,OALIikC,EAAqBC,EAAA9iC,KAG3B4iC,EAAgBG,WAAWC,SAAQ,SAAC54B,GAClCy4B,EAAsBI,aAAa74B,EACrC,IAAE04B,EAAAv6B,OAAA,SACKs6B,GAAqB,wBAAAC,EAAA/iC,OAAA,GAAA4iC,EAAA,UAC7B,gBAAAO,GAAA,OAAAR,EAAApiC,MAAA,KAAAxI,UAAA,EAdD,IAgBA,CAAAY,IAAA,qBAAAC,MAAA,eAAAwqC,EAAA9kC,EAAAL,IAAAQ,MAMA,SAAA4kC,EAAyBR,GAAgC,IAAArH,EAAA8H,EAAA,OAAArlC,IAAAoB,MAAA,SAAAkkC,GAAA,cAAAA,EAAAhkC,KAAAgkC,EAAA/jC,MAAA,OACP,OAA1Cg8B,EAAsBqH,EAAgBhkC,KAAI0kC,EAAA/jC,KAAA,EAC3B2+B,EAAA,KAAIV,EAAA,KAAkBW,aAAaoF,mBAAmBhI,GAAoB,OAAnF,OAAN8H,EAAMC,EAAAtjC,KAAAsjC,EAAA/6B,OAAA,SACL86B,GAAM,wBAAAC,EAAAvjC,OAAA,GAAAqjC,EAAA,UACd,gBAAAI,GAAA,OAAAL,EAAA7iC,MAAA,KAAAxI,UAAA,EAVD,IAYA,CAAAY,IAAA,sBAAAC,MAAA,eAAA8qC,EAAAplC,EAAAL,IAAAQ,MAMA,SAAAklC,EAA0B3oC,GAAY,OAAAiD,IAAAoB,MAAA,SAAAukC,GAAA,cAAAA,EAAArkC,KAAAqkC,EAAApkC,MAAA,cAAAokC,EAAAp7B,OAAA,UAC7B,EAAA40B,EAAAyG,mBAAkB1F,EAAA,KAAIX,EAAA,KAAcxiC,IAAK,wBAAA4oC,EAAA5jC,OAAA,GAAA2jC,EAAA,UACjD,gBAAAG,GAAA,OAAAJ,EAAAnjC,MAAA,KAAAxI,UAAA,EARD,IAUA,CAAAY,IAAA,gBAAAC,MAAA,eAAAmrC,EAAAzlC,EAAAL,IAAAQ,MAOA,SAAAulC,EACEnB,EACAoB,GAA2B,IAAAC,EAAA,OAAAjmC,IAAAoB,MAAA,SAAA8kC,GAAA,cAAAA,EAAA5kC,KAAA4kC,EAAA3kC,MAAA,OAGK,OAHL2kC,EAAApkC,GAGZ,KAAKw+B,aAAY4F,EAAA3kC,KAAA,EACX,KAAK4kC,qBAAoB,cAAAD,EAAA/jC,GAAA+jC,EAAAlkC,KAAAkkC,EAAA3kC,KAAA,EAC7B,KAAK6kC,gBAAgBxE,aAAY,OAC7B,OAD6BsE,EAAAptB,GAAAotB,EAAAlkC,KAAAkkC,EAAAniB,GAC3B6gB,EAAgBhkC,KAJjCqlC,EAAyB,CAC7B3I,YAAW4I,EAAApkC,GACXm7B,YAAWiJ,EAAA/jC,GACXwJ,QAAOu6B,EAAAptB,GACPykB,oBAAmB2I,EAAAniB,IAAAmiB,EAAA37B,OAAA,UAEd,EAAA40B,EAAAkH,yBAAwBnG,EAAA,KAAIX,EAAA,KAAc0G,EAA2BD,IAAc,yBAAAE,EAAAnkC,OAAA,GAAAgkC,EAAA,UAC3F,gBAAAO,EAAAC,GAAA,OAAAT,EAAAxjC,MAAA,KAAAxI,UAAA,EAlBD,IAoBA,CAAAY,IAAA,kBAAAC,MAAA,eAAA6rC,EAAAnmC,EAAAL,IAAAQ,MAQA,SAAAimC,EACE7B,GAAkE,IAAA8B,EAAAC,EAAAC,EAAAC,EAAAz6B,EAAA6wB,EAAAoI,EAAAR,EAAAiC,EAAAhtC,UAAA,OAAAkG,IAAAoB,MAAA,SAAA2lC,GAAA,cAAAA,EAAAzlC,KAAAylC,EAAAxlC,MAAA,OAKf,GAJnDmlC,EAAAI,EAAA/sC,OAAA,QAAAC,IAAA8sC,EAAA,GAAAA,EAAA,GAI6B,yBAEX,EAAAztC,EAAA2tC,mCAAkCpC,GAAgB,CAAAmC,EAAAxlC,KAAA,eAAAwlC,EAAAxlC,KAAA,EAC1D,KAAK0lC,sBAAsBrC,GAAgB,OAAAmC,EAAAjlC,GAAAilC,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,eAAAwlC,EAAAjlC,GACjD8iC,EAAe,OAFJ,OAAX+B,EAAWI,EAAAjlC,GAAAilC,EAAAxlC,KAAA,GAIM,KAAKy/B,YAAW,QAAzB,OAAN4F,EAAMG,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,GACgB2+B,EAAA,KAAIX,EAAA,KAAa2H,mBAAkB,QAA5C,GAAbL,EAAaE,EAAA/kC,KACD,CAAA+kC,EAAAxlC,KAAA,eACV,IAAI3G,MAAM,mEAAkE,QAInF,GAFsBgsC,EAAOvK,MAC5B,SAAC8K,GAAa,OAAKN,IAAiB,EAAAxtC,EAAA+tC,YAAWD,EAAON,EAAc,IAEnD,CAAAE,EAAAxlC,KAAA,eACX,IAAI3G,MAAM,kDAAiD,WAI7C,yBAAlB8rC,EAAwC,CAAAK,EAAAxlC,KAAA,gBAAAwlC,EAAAxlC,KAAA,GACxB,KAAK8lC,cAAcV,EAAa,MAAK,QAAvDv6B,EAAS26B,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,oBACkB,yBAAlBmlC,EAAwC,CAAAK,EAAAxlC,KAAA,gBAAAwlC,EAAAxlC,KAAA,GAC/B,KAAK8lC,cAAcV,EAAa,MAAK,QAAvDv6B,EAAS26B,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,oBACkB,sBAAlBmlC,EAAqC,CAAAK,EAAAxlC,KAAA,gBAAAwlC,EAAAxlC,KAAA,GAC5B,KAAK8lC,cAAcV,GAAY,QAAjDv6B,EAAS26B,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,wBAAAwlC,EAAAxlC,KAAA,GAEiB,KAAK4kC,qBAAoB,QAAlC,GAAXlJ,EAAW8J,EAAA/kC,MACZ,EAAA68B,EAAAyI,gBAAezI,EAAAZ,cAAcO,SAAUvB,GAAY,CAAA8J,EAAAxlC,KAAA,eAChD,IAAI3G,MAAM,iDAAgD,eAAAmsC,EAAAxlC,KAAA,GAE7C,KAAKgkC,mBAAmBoB,GAAY,QAA7C,OAANtB,EAAM0B,EAAA/kC,KAAA+kC,EAAAxlC,KAAA,GACM,KAAKgmC,oBAAoBlC,GAAO,QAAlDj5B,EAAS26B,EAAA/kC,KAAA,eAAA+kC,EAAAxlC,KAAA,GAGyB,KAAKijC,kBAAkB,CACzDjH,oBAAqBoJ,EAAY/lC,OACjC,QAI2C,OANvCikC,EAAqBkC,EAAA/kC,KAG3B2kC,EAAY5B,WAAWC,SAAQ,SAAC54B,GAC9By4B,EAAsBI,aAAa74B,EACrC,IACAy4B,EAAsBI,aAAa74B,GAAU26B,EAAAx8B,OAAA,SACtCs6B,GAAqB,yBAAAkC,EAAAhlC,OAAA,GAAA0kC,EAAA,UAC7B,gBAAAe,GAAA,OAAAhB,EAAAlkC,MAAA,KAAAxI,UAAA,EAxDD,IA0DA,CAAAY,IAAA,yBAAAC,MAAA,eAAA8sC,EAAApnC,EAAAL,IAAAQ,MASA,SAAAknC,EACE3qC,EACAgY,GAA4B,IAAA6xB,EAAAC,EAAA,OAAA7mC,IAAAoB,MAAA,SAAAumC,GAAA,cAAAA,EAAArmC,KAAAqmC,EAAApmC,MAAA,cAAAomC,EAAApmC,KAAA,EAEP,KAAKy/B,YAAW,OAAzB,OAAN4F,EAAMe,EAAA3lC,KAAA2lC,EAAApmC,KAAA,EACgB2+B,EAAA,KAAIX,EAAA,KAAa2H,mBAAkB,OAA5C,GAAbL,EAAac,EAAA3lC,KACD,CAAA2lC,EAAApmC,KAAA,cACV,IAAI3G,MAAM,mEAAkE,OAInF,GAFsBgsC,EAAOvK,MAC5B,SAAC8K,GAAa,OAAKN,IAAiB,EAAAxtC,EAAA+tC,YAAWD,EAAON,EAAc,IAEnD,CAAAc,EAAApmC,KAAA,eACX,IAAI3G,MAAM,0DAAyD,aAEhE,OAAPma,QAAO,IAAPA,OAAO,EAAPA,EAAS6yB,QAAc,OAAP7yB,QAAO,IAAPA,OAAO,EAAPA,EAAS8yB,UAAQ,CAAAF,EAAApmC,KAAA,eAC7B,IAAI3G,MAAM,mEAAkE,eAAA+sC,EAAAp9B,OAAA,SAE7E21B,EAAA,KAAIV,EAAA,KAAkBW,aAAa2H,YAAY/qC,EAAIuS,EAAA,CACxDvU,KAAM8rC,GACH9xB,KACH,yBAAA4yB,EAAA5lC,OAAA,GAAA2lC,EAAA,UACH,gBAAAK,EAAAC,GAAA,OAAAP,EAAAnlC,MAAA,KAAAxI,UAAA,EA/BD,IAiCA,CAAAY,IAAA,yBAAAC,MAAA,eAAAstC,EAAA5nC,EAAAL,IAAAQ,MAMA,SAAA0nC,EAA6B7C,GAAc,IAAAuB,EAAAuB,EAAAjnC,EAAAC,EAAAgmC,EAAA,OAAAnnC,IAAAoB,MAAA,SAAAgnC,GAAA,cAAAA,EAAA9mC,KAAA8mC,EAAA7mC,MAAA,cAAA6mC,EAAA7mC,KAAA,EACpB,KAAKy/B,YAAW,OAA/B4F,EAAMwB,EAAApmC,KACRmmC,EAA8B,GAAEjnC,EAAAmnC,EAChBzB,GAAMwB,EAAA9mC,KAAA,EAAAJ,EAAAiL,IAAA,WAAAhL,EAAAD,EAAA4E,KAAA7D,KAAA,CAAAmmC,EAAA7mC,KAAA,SAAV,OAAL4lC,EAAKhmC,EAAAxG,MAAAytC,EAAA7mC,KAAA,GACS2+B,EAAA,KAAIV,EAAA,KAAkBW,aAAamI,eAAenB,EAAO9B,GAAO,QAAzE+C,EAAApmC,KACDumC,GAAG,IACdJ,EAAkBxhC,KAAKwgC,GACxB,QAAAiB,EAAA7mC,KAAA,gBAAA6mC,EAAA7mC,KAAA,iBAAA6mC,EAAA9mC,KAAA,GAAA8mC,EAAAtmC,GAAAsmC,EAAA,SAAAlnC,EAAA7E,EAAA+rC,EAAAtmC,IAAA,eAAAsmC,EAAA9mC,KAAA,GAAAJ,EAAAoQ,IAAA82B,EAAA/lC,OAAA,mBAAA+lC,EAAA79B,OAAA,SAEI49B,GAAiB,yBAAAC,EAAArmC,OAAA,GAAAmmC,EAAA,yBACzB,gBAAAM,GAAA,OAAAP,EAAA3lC,MAAA,KAAAxI,UAAA,EAhBD,IAkBA,CAAAY,IAAA,gCAAAC,MAAA,eAAA8tC,EAAApoC,EAAAL,IAAAQ,MAUA,SAAAkoC,EACEC,EACA5zB,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAAwnC,GAAA,cAAAA,EAAAtnC,KAAAsnC,EAAArnC,MAAA,OAGf,OAHeqnC,EAAA9mC,GAAAwN,EAAAs5B,EAAAzmC,GAGhC,KAAKm+B,aAAYsI,EAAArnC,KAAA,EAET2+B,EAAA,KAAIN,EAAA,KAAyBiJ,gCACvCF,GACD,OALsB,OAKtBC,EAAA9vB,GAAA8vB,EAAA5mC,KAAA4mC,EAAA7kB,GAAA,CAJDsE,GAAEugB,EAAAzmC,GACFxH,MAAO,IACPiG,KAAIgoC,EAAA9vB,IAAA8vB,EAAA5kB,GAGDjP,EANCwoB,GAAmB,EAAAqL,EAAA9mC,IAAA8mC,EAAA7kB,GAAA6kB,EAAA5kB,IAAA4kB,EAAArnC,KAAA,GAQK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAegE,EAAA5mC,KAAA4mC,EAAAr+B,OAAA,SACdq6B,GAAe,yBAAAgE,EAAA7mC,OAAA,GAAA2mC,EAAA,UACvB,gBAAAI,EAAAC,GAAA,OAAAN,EAAAnmC,MAAA,KAAAxI,UAAA,EAxBD,IA0BA,CAAAY,IAAA,iCAAAC,MAAA,eAAAquC,EAAA3oC,EAAAL,IAAAQ,MAQA,SAAAyoC,EACEl0B,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA8nC,GAAA,cAAAA,EAAA5nC,KAAA4nC,EAAA3nC,MAAA,OAGf,OAHe2nC,EAAApnC,GAAAwN,EAAA45B,EAAA/mC,GAGhC,KAAKm+B,aAAY4I,EAAA3nC,KAAA,EAET2+B,EAAA,KAAIN,EAAA,KAAyBuJ,mCAAkC,OAHpD,OAGoDD,EAAApwB,GAAAowB,EAAAlnC,KAAAknC,EAAAnlB,GAAA,CAF3EsE,GAAE6gB,EAAA/mC,GACFxH,MAAO,IACPiG,KAAIsoC,EAAApwB,IAAAowB,EAAAllB,GACDjP,EAJCwoB,GAAmB,EAAA2L,EAAApnC,IAAAonC,EAAAnlB,GAAAmlB,EAAAllB,IAAAklB,EAAA3nC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAesE,EAAAlnC,KAAAknC,EAAA3+B,OAAA,SACdq6B,GAAe,yBAAAsE,EAAAnnC,OAAA,GAAAknC,EAAA,UACvB,gBAAAG,GAAA,OAAAJ,EAAA1mC,MAAA,KAAAxI,UAAA,EAnBD,IAqBA,CAAAY,IAAA,sBAAAC,MAAA,eAAA0uC,EAAAhpC,EAAAL,IAAAQ,MAUA,SAAA8oC,EACEC,EACAx0B,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAAooC,GAAA,cAAAA,EAAAloC,KAAAkoC,EAAAjoC,MAAA,OAGf,OAHeioC,EAAA1nC,GAAAwN,EAAAk6B,EAAArnC,GAGhC,KAAKm+B,aAAYkJ,EAAAjoC,KAAA,EAET2+B,EAAA,KAAIP,EAAA,KAAe8J,sBAAsBF,GAAa,OAH3C,OAG2CC,EAAA1wB,GAAA0wB,EAAAxnC,KAAAwnC,EAAAzlB,GAAA,CAFlEsE,GAAEmhB,EAAArnC,GACFxH,MAAO,IACPiG,KAAI4oC,EAAA1wB,IAAA0wB,EAAAxlB,GACDjP,EAJCwoB,GAAmB,EAAAiM,EAAA1nC,IAAA0nC,EAAAzlB,GAAAylB,EAAAxlB,IAAAwlB,EAAAjoC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAe4E,EAAAxnC,KAAAwnC,EAAAj/B,OAAA,SACdq6B,GAAe,yBAAA4E,EAAAznC,OAAA,GAAAunC,EAAA,UACvB,gBAAAI,EAAAC,GAAA,OAAAN,EAAA/mC,MAAA,KAAAxI,UAAA,EAtBD,IAwBA,CAAAY,IAAA,uBAAAC,MAAA,eAAAivC,EAAAvpC,EAAAL,IAAAQ,MAQA,SAAAqpC,EAA2B90B,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA0oC,GAAA,cAAAA,EAAAxoC,KAAAwoC,EAAAvoC,MAAA,OAExC,OAFwCuoC,EAAAhoC,GAAAwN,EAAAw6B,EAAA3nC,GAEzD,KAAKm+B,aAAYwJ,EAAAvoC,KAAA,EAET2+B,EAAA,KAAIP,EAAA,KAAeoK,yBAAwB,OAHhC,OAGgCD,EAAAhxB,GAAAgxB,EAAA9nC,KAAA8nC,EAAA/lB,GAAA,CAFvDsE,GAAEyhB,EAAA3nC,GACFxH,MAAO,IACPiG,KAAIkpC,EAAAhxB,IAAAgxB,EAAA9lB,GACDjP,EAJCwoB,GAAmB,EAAAuM,EAAAhoC,IAAAgoC,EAAA/lB,GAAA+lB,EAAA9lB,IAAA8lB,EAAAvoC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAekF,EAAA9nC,KAAA8nC,EAAAv/B,OAAA,SACdq6B,GAAe,yBAAAkF,EAAA/nC,OAAA,GAAA8nC,EAAA,UACvB,gBAAAG,GAAA,OAAAJ,EAAAtnC,MAAA,KAAAxI,UAAA,EAjBD,IAmBA,CAAAY,IAAA,uBAAAC,MAAA,eAAAsvC,EAAA5pC,EAAAL,IAAAQ,MASA,SAAA0pC,EACEtH,EACA7tB,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA+oC,GAAA,cAAAA,EAAA7oC,KAAA6oC,EAAA5oC,MAAA,OAGf,OAHe4oC,EAAAroC,GAAAwN,EAAA66B,EAAAhoC,GAGhC,KAAKm+B,aAAY6J,EAAA5oC,KAAA,EAET2+B,EAAA,KAAIR,EAAA,KAAgB0K,uBAAuBxH,GAAc,OAH9C,OAG8CuH,EAAArxB,GAAAqxB,EAAAnoC,KAAAmoC,EAAApmB,GAAA,CAFrEsE,GAAE8hB,EAAAhoC,GACFxH,MAAO,IACPiG,KAAIupC,EAAArxB,IAAAqxB,EAAAnmB,GACDjP,EAJCwoB,GAAmB,EAAA4M,EAAAroC,IAAAqoC,EAAApmB,GAAAomB,EAAAnmB,IAAAmmB,EAAA5oC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAeuF,EAAAnoC,KAAAmoC,EAAA5/B,OAAA,SACdq6B,GAAe,yBAAAuF,EAAApoC,OAAA,GAAAmoC,EAAA,UACvB,gBAAAG,EAAAC,GAAA,OAAAL,EAAA3nC,MAAA,KAAAxI,UAAA,EArBD,IAuBA,CAAAY,IAAA,wBAAAC,MAAA,eAAA4vC,EAAAlqC,EAAAL,IAAAQ,MASA,SAAAgqC,EACE5H,EACA7tB,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAAqpC,GAAA,cAAAA,EAAAnpC,KAAAmpC,EAAAlpC,MAAA,OAGf,OAHekpC,EAAA3oC,GAAAwN,EAAAm7B,EAAAtoC,GAGhC,KAAKm+B,aAAYmK,EAAAlpC,KAAA,EAET2+B,EAAA,KAAIR,EAAA,KAAgBgL,wBAAwB9H,GAAc,OAH/C,OAG+C6H,EAAA3xB,GAAA2xB,EAAAzoC,KAAAyoC,EAAA1mB,GAAA,CAFtEsE,GAAEoiB,EAAAtoC,GACFxH,MAAO,IACPiG,KAAI6pC,EAAA3xB,IAAA2xB,EAAAzmB,GACDjP,EAJCwoB,GAAmB,EAAAkN,EAAA3oC,IAAA2oC,EAAA1mB,GAAA0mB,EAAAzmB,IAAAymB,EAAAlpC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAe6F,EAAAzoC,KAAAyoC,EAAAlgC,OAAA,SACdq6B,GAAe,yBAAA6F,EAAA1oC,OAAA,GAAAyoC,EAAA,UACvB,gBAAAG,EAAAC,GAAA,OAAAL,EAAAjoC,MAAA,KAAAxI,UAAA,EArBD,IAuBA,CAAAY,IAAA,mBAAAC,MAAA,eAAAkwC,EAAAxqC,EAAAL,IAAAQ,MAWA,SAAAsqC,EAAAC,EAEEh2B,GAAsC,IAAAkuB,EAAA+H,EAAAzN,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA6pC,GAAA,cAAAA,EAAA3pC,KAAA2pC,EAAA1pC,MAAA,OAGf,OAJrB0hC,EAAY8H,EAAZ9H,aAAc+H,EAASD,EAATC,UAASC,EAAAnpC,GAAAwN,EAAA27B,EAAA9oC,GAInB,KAAKm+B,aAAY2K,EAAA1pC,KAAA,EAET2+B,EAAA,KAAIT,EAAA,KAAeyL,gCAAgCjI,EAAc+H,GAAU,OAHhE,OAGgEC,EAAAnyB,GAAAmyB,EAAAjpC,KAAAipC,EAAAlnB,GAAA,CAFvFsE,GAAE4iB,EAAA9oC,GACFxH,MAAO,IACPiG,KAAIqqC,EAAAnyB,IAAAmyB,EAAAjnB,GACDjP,EAJCwoB,GAAmB,EAAA0N,EAAAnpC,IAAAmpC,EAAAlnB,GAAAknB,EAAAjnB,IAAAinB,EAAA1pC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAeqG,EAAAjpC,KAAAipC,EAAA1gC,OAAA,SACdq6B,GAAe,yBAAAqG,EAAAlpC,OAAA,GAAA+oC,EAAA,UACvB,gBAAAK,EAAAC,GAAA,OAAAP,EAAAvoC,MAAA,KAAAxI,UAAA,EAvBD,IAyBA,CAAAY,IAAA,sBAAAC,MAAA,eAAA0wC,EAAAhrC,EAAAL,IAAAQ,MAWA,SAAA8qC,EAAAC,EAEEx2B,GAAsC,IAAAkuB,EAAA+H,EAAAzN,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAAoqC,GAAA,cAAAA,EAAAlqC,KAAAkqC,EAAAjqC,MAAA,OAGf,OAJrB0hC,EAAYsI,EAAZtI,aAAc+H,EAASO,EAATP,UAASQ,EAAA1pC,GAAAwN,EAAAk8B,EAAArpC,GAInB,KAAKm+B,aAAYkL,EAAAjqC,KAAA,EAET2+B,EAAA,KAAIT,EAAA,KAAegM,sBAAsBxI,EAAc+H,GAAU,OAHtD,OAGsDQ,EAAA1yB,GAAA0yB,EAAAxpC,KAAAwpC,EAAAznB,GAAA,CAF7EsE,GAAEmjB,EAAArpC,GACFxH,MAAO,IACPiG,KAAI4qC,EAAA1yB,IAAA0yB,EAAAxnB,GACDjP,EAJCwoB,GAAmB,EAAAiO,EAAA1pC,IAAA0pC,EAAAznB,GAAAynB,EAAAxnB,IAAAwnB,EAAAjqC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAe4G,EAAAxpC,KAAAwpC,EAAAjhC,OAAA,SACdq6B,GAAe,yBAAA4G,EAAAzpC,OAAA,GAAAupC,EAAA,UACvB,gBAAAI,EAAAC,GAAA,OAAAN,EAAA/oC,MAAA,KAAAxI,UAAA,EAvBD,IAyBA,CAAAY,IAAA,oBAAAC,MAAA,eAAAixC,EAAAvrC,EAAAL,IAAAQ,MAWA,SAAAqrC,EAAAC,EAEE/2B,GAAsC,IAAAg3B,EAAAC,EAAAzO,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA6qC,GAAA,cAAAA,EAAA3qC,KAAA2qC,EAAA1qC,MAAA,OAGf,OAJrBwqC,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBAAeC,EAAAnqC,GAAAwN,EAAA28B,EAAA9pC,GAI5B,KAAKm+B,aAAY2L,EAAA1qC,KAAA,EAET2+B,EAAA,KAAIT,EAAA,KAAeyM,oBAAoBH,EAAiBC,GAAgB,OAH7D,OAG6DC,EAAAnzB,GAAAmzB,EAAAjqC,KAAAiqC,EAAAloB,GAAA,CAFpFsE,GAAE4jB,EAAA9pC,GACFxH,MAAO,IACPiG,KAAIqrC,EAAAnzB,IAAAmzB,EAAAjoB,GACDjP,EAJCwoB,GAAmB,EAAA0O,EAAAnqC,IAAAmqC,EAAAloB,GAAAkoB,EAAAjoB,IAAAioB,EAAA1qC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAeqH,EAAAjqC,KAAAiqC,EAAA1hC,OAAA,SACdq6B,GAAe,yBAAAqH,EAAAlqC,OAAA,GAAA8pC,EAAA,UACvB,gBAAAM,EAAAC,GAAA,OAAAR,EAAAtpC,MAAA,KAAAxI,UAAA,EAvBD,IAyBA,CAAAY,IAAA,0BAAAC,MAAA,eAAA0xC,EAAAhsC,EAAAL,IAAAQ,MASA,SAAA8rC,EACEtB,EACAj2B,GAAsC,IAAAwoB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAAmrC,GAAA,cAAAA,EAAAjrC,KAAAirC,EAAAhrC,MAAA,OAGf,OAHegrC,EAAAzqC,GAAAwN,EAAAi9B,EAAApqC,GAGhC,KAAKm+B,aAAYiM,EAAAhrC,KAAA,EAET2+B,EAAA,KAAIT,EAAA,KAAe+M,0BAA0BxB,GAAU,OAH5C,OAG4CuB,EAAAzzB,GAAAyzB,EAAAvqC,KAAAuqC,EAAAxoB,GAAA,CAFnEsE,GAAEkkB,EAAApqC,GACFxH,MAAO,IACPiG,KAAI2rC,EAAAzzB,IAAAyzB,EAAAvoB,GACDjP,EAJCwoB,GAAmB,EAAAgP,EAAAzqC,IAAAyqC,EAAAxoB,GAAAwoB,EAAAvoB,IAAAuoB,EAAAhrC,KAAA,GAMK,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAxD,OAAfqH,EAAe2H,EAAAvqC,KAAAuqC,EAAAhiC,OAAA,SACdq6B,GAAe,yBAAA2H,EAAAxqC,OAAA,GAAAuqC,EAAA,UACvB,gBAAAG,EAAAC,GAAA,OAAAL,EAAA/pC,MAAA,KAAAxI,UAAA,EArBD,IAuBA,CAAAY,IAAA,wBAAAC,MAAA,eAAAgyC,EAAAtsC,EAAAL,IAAAQ,MAMA,SAAAosC,EACEC,GAA2D,IAAA3vB,EAAAqgB,EAAAqH,EAAA,OAAA5kC,IAAAoB,MAAA,SAAA0rC,GAAA,cAAAA,EAAAxrC,KAAAwrC,EAAAvrC,MAAA,OAa1D,OAXKg8B,EAAkD,CACtDlV,GAAIwkB,EAA2BxkB,GAC/B1tB,MAAOkyC,EAA2BlyC,MAClCiG,KAAMisC,EAA2BjsC,MAAQ,KACzCqjC,UAAW4I,EAA2B5I,UACtCnG,UAAW+O,EAA2B/O,UACtCC,QAAS8O,EAA2B9O,QACpCC,SAAUr5B,OAAOkoC,EAA2B7O,UAC5C+O,SAAUF,EAA2BE,SACrCC,eAAgBH,EAA2BG,eAC3CnzC,MAAOgzC,EAA2BhzC,OACnCizC,EAAAvrC,KAAA,EAC6B,KAAKijC,kBAAkB,CAAEjH,oBAAAA,IAAsB,OAI3E,OAJIqH,EAAekI,EAAA9qC,KACmB,QAAxCkb,EAAA2vB,EAA2BI,qBAAa,IAAA/vB,GAAAA,EAAE9V,KAAI,SAAC8lC,GAC7C,IAAM9gC,EAAY,IAAIgzB,EAAAn0B,QAAciiC,EAAa/F,MAAO+F,EAAa9gC,WACrEw4B,EAAgBK,aAAa74B,EAC/B,IAAE0gC,EAAAviC,OAAA,SACKq6B,GAAe,wBAAAkI,EAAA/qC,OAAA,GAAA6qC,EAAA,UACvB,gBAAAO,GAAA,OAAAR,EAAArqC,MAAA,KAAAxI,UAAA,EA3BD,IA6BA,CAAAY,IAAA,qBAAAC,MAAA,eAAAyyC,EAAA/sC,EAAAL,IAAAQ,MAOA,SAAA6sC,EACEzI,EACA7vB,GAA4B,IAAA4xB,EAAA9B,EAAAQ,EAAAiI,EAAAC,EAAAC,EAAArG,EAAAP,EAAAC,EAAA4G,EAAA,OAAAztC,IAAAoB,MAAA,SAAAssC,GAAA,cAAAA,EAAApsC,KAAAosC,EAAAnsC,MAAA,YAEV,EAAAlI,EAAA2tC,mCAAkCpC,GAAgB,CAAA8I,EAAAnsC,KAAA,eAAAmsC,EAAAnsC,KAAA,EAC1D,KAAK0lC,sBAAsBrC,GAAgB,OAAA8I,EAAA5rC,GAAA4rC,EAAA1rC,KAAA0rC,EAAAnsC,KAAA,eAAAmsC,EAAA5rC,GACjD8iC,EAAe,OAFJ,OAAX+B,EAAW+G,EAAA5rC,GAAA4rC,EAAAnsC,KAAA,GAIqB,KAAKosC,gBAAgBhH,GAAY,QAA1C,OAArB9B,EAAqB6I,EAAA1rC,KAAA0rC,EAAAnsC,KAAA,GAEN,KAAKgkC,mBAAmBV,GAAsB,QAAvD,OAANQ,EAAMqI,EAAA1rC,KAAA0rC,EAAAnsC,KAAA,GACsB,KAAKqsC,uBAAuBvI,GAAO,QAA/DiI,EAAmBI,EAAA1rC,KAAAurC,EAAAlF,EACLiF,GAAmB,IAAvC,IAAAC,EAAAphC,MAAAqhC,EAAAD,EAAAznC,KAAA7D,MAAWklC,EAAKqG,EAAA7yC,MACdkqC,EAAsBI,cAAa,EAAA9F,EAAA0O,+BAA8B1G,GAClE,OAAA2G,GAAAP,EAAAlxC,EAAAyxC,EAAA,SAAAP,EAAAj8B,GAAA,QAAAo8B,EAAAnsC,KAAA,GACoB,KAAKy/B,YAAW,QAAzB,OAAN4F,EAAM8G,EAAA1rC,KAAA0rC,EAAAnsC,KAAA,GACgB2+B,EAAA,KAAIX,EAAA,KAAa2H,mBAAkB,QAA5C,GAAbL,EAAa6G,EAAA1rC,KACD,CAAA0rC,EAAAnsC,KAAA,eACV,IAAI3G,MAAM,mEAAkE,QAInF,OAFGgsC,EAAOpkB,SAASqkB,IAClBhC,EAAsBI,cAAa,EAAA9F,EAAA0O,+BAA8BhH,IAClE6G,EAAAnsC,KAAA,GAEuB2+B,EAAA,KAAIV,EAAA,KAAkBW,aAAa4N,mBACzDlJ,EAAqBv1B,EAAA,CAEnBvU,KAAM8rC,GACH9xB,IAEN,QANc,OAAT04B,EAASC,EAAA1rC,KAAA0rC,EAAAnjC,OAAA,SAORkjC,GAAS,yBAAAC,EAAA3rC,OAAA,GAAAsrC,EAAA,UACjB,gBAAAW,EAAAC,GAAA,OAAAb,EAAA9qC,MAAA,KAAAxI,UAAA,EAvCD,IAyCA,CAAAY,IAAA,qBAAAC,MAAA,eAAAuzC,EAAA7tC,EAAAL,IAAAQ,MAUA,SAAA2tC,EACEvJ,EACA7vB,GAA4B,IAAA4xB,EAAA9B,EAAAQ,EAAAiI,EAAAc,EAAAC,EAAAlH,EAAAP,EAAAC,EAAAmE,EAAAsD,EAAA3zC,EAAAV,EAAAs0C,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAotC,GAAA,cAAAA,EAAAltC,KAAAktC,EAAAjtC,MAAA,YAEV,EAAAlI,EAAA2tC,mCAAkCpC,GAAgB,CAAA4J,EAAAjtC,KAAA,eAAAitC,EAAAjtC,KAAA,EAC1D,KAAK0lC,sBAAsBrC,GAAgB,OAAA4J,EAAA1sC,GAAA0sC,EAAAxsC,KAAAwsC,EAAAjtC,KAAA,eAAAitC,EAAA1sC,GACjD8iC,EAAe,OAFJ,OAAX+B,EAAW6H,EAAA1sC,GAAA0sC,EAAAjtC,KAAA,GAIqB,KAAKosC,gBAAgBhH,GAAY,QAA1C,OAArB9B,EAAqB2J,EAAAxsC,KAAAwsC,EAAAjtC,KAAA,GAEN,KAAKgkC,mBAAmBV,GAAsB,QAAvD,OAANQ,EAAMmJ,EAAAxsC,KAAAwsC,EAAAjtC,KAAA,GACsB,KAAKqsC,uBAAuBvI,GAAO,QAA/DiI,EAAmBkB,EAAAxsC,KAAAosC,EAAA/F,EACLiF,GAAmB,IAAvC,IAAAc,EAAAjiC,MAAAkiC,EAAAD,EAAAtoC,KAAA7D,MAAWklC,EAAKkH,EAAA1zC,MACdkqC,EAAsBI,cAAa,EAAA9F,EAAA0O,+BAA8B1G,GAClE,OAAA2G,GAAAM,EAAA/xC,EAAAyxC,EAAA,SAAAM,EAAA98B,GAAA,QAAAk9B,EAAAjtC,KAAA,GACoB,KAAKy/B,YAAW,QAAzB,OAAN4F,EAAM4H,EAAAxsC,KAAAwsC,EAAAjtC,KAAA,GACgB2+B,EAAA,KAAIX,EAAA,KAAa2H,mBAAkB,QAG9D,OAHKL,EAAa2H,EAAAxsC,OACE4kC,EAAOpkB,SAASqkB,IACnChC,EAAsBI,cAAa,EAAA9F,EAAA0O,+BAA8BhH,IAClE2H,EAAAjtC,KAAA,GAEuB,KAAKigC,eAAc,QAA5B,MAATwJ,EAASwD,EAAAxsC,MACC6iC,EAAsBE,WAAW0J,MAAI,CAAAD,EAAAjtC,KAAA,SACwB,MAArE+sC,EAAoBtD,EAAYnG,EAAsBE,WAAW0J,KACjE,IAAI7zC,MAAK,SAAAgD,OACJ0wC,EAAoB,EAAI,MAAQ,KAAI,KAAA1wC,OAAI0wC,EAAiB,cAAA1wC,OAChE0wC,EAAoB,EAAI,IAAM,GAChC,aACD,QAG2D,IAAxD3zC,EAAQgkC,EAAA+P,UAAU3zC,KAAK8pC,EAAsBjkC,KAAKjG,QAC7Cg0C,SAAQ,CAAAH,EAAAjtC,KAAA,gBAAAitC,EAAAjtC,KAAA,GACK,KAAKygC,aAAY,QAA1B,GAAP/nC,EAAOu0C,EAAAxsC,MACTrH,EAAM4tC,GAAG5J,EAAA+P,UAAU3zC,KAAKd,IAAS,CAAAu0C,EAAAjtC,KAAA,eAC7B,IAAI3G,MAAM,0BAAyB,aAIlC,OAAPma,QAAO,IAAPA,OAAO,EAAPA,EAAS6yB,QAAc,OAAP7yB,QAAO,IAAPA,OAAO,EAAPA,EAAS8yB,UAAQ,CAAA2G,EAAAjtC,KAAA,eAC7B,IAAI3G,MAAM,mEAAkE,eAAA4zC,EAAAjtC,KAAA,GAE3D2+B,EAAA,KAAIV,EAAA,KAAkBW,aAAayO,gBAC1D/J,EAAqBv1B,EAAA,CAEnBvU,KAAM8rC,GACH9xB,IAEN,QANe,OAAVw5B,EAAUC,EAAAxsC,KAAAwsC,EAAAjkC,OAAA,SAOTgkC,GAAU,yBAAAC,EAAAzsC,OAAA,GAAAosC,EAAA,UAClB,gBAAAU,EAAAC,GAAA,OAAAZ,EAAA5rC,MAAA,KAAAxI,UAAA,EA5DD,KA4DC,EAAAY,IAAA,SAAAC,MAAA,eAAAo0C,EAAA1uC,EAAAL,IAAAQ,MAjyBD,SAAAwuC,EAAAC,GAAA,IAAAnP,EAAAxC,EAAAyC,EAAAC,EAAAkP,EAAA,OAAAlvC,IAAAoB,MAAA,SAAA+tC,GAAA,cAAAA,EAAA7tC,KAAA6tC,EAAA5tC,MAAA,OAM4B,OAL1Bu+B,EAAUmP,EAAVnP,WACAxC,EAAW2R,EAAX3R,YACAyC,EAAkBkP,EAAlBlP,mBACAC,EAAgBiP,EAAhBjP,iBAEMkP,EAAU,IAAI5P,EAAM6P,EAAA5tC,KAAA,EACpB2tC,EAAQE,KAAK,CAAEtP,WAAAA,EAAYxC,YAAAA,EAAayC,mBAAAA,EAAoBC,iBAAAA,IAAmB,cAAAmP,EAAA5kC,OAAA,SAC9E2kC,GAAO,wBAAAC,EAAAptC,OAAA,GAAAitC,EAAA,KACf,gBAAAK,GAAA,OAAAN,EAAAzsC,MAAA,KAAAxI,UAAA,EAwxBA,MAxxBAwlC,CAAA,CAzBO,uFAozBVpjC,EAAAA,QAAeojC,0LCz4BFpjC,EAAAA,kBAAiC,QACjCA,EAAAA,kBAAiC,QAejCA,EAAAA,wBAAmD,CAC9D,QAAS,CACPozC,sBAAuB,QACvBC,wBAAyB,QACzBC,wBAAyB,QACzBC,6BAA8B,QAC9BC,iBAAkB,QAClBC,yBAA0B,QAC1BC,sBAAuB,QACvBC,kBAAmB,SAErB,QAAS,CACPP,sBAAuB,QACvBC,6BAAyBv1C,EACzBw1C,wBAAyB,QACzBC,6BAA8B,QAC9BC,iBAAkB,QAClBC,yBAA0B,QAC1BC,sBAAuB,QACvBC,kBAAmB,SAErB,QAAS,CACPP,sBAAuB,QACvBC,6BAAyBv1C,EACzBw1C,wBAAyB,QACzBC,6BAA8B,QAC9BC,iBAAkB,QAClBC,yBAA0B,QAC1BC,sBAAuB,QACvBC,kBAAmB,SAErB,QAAS,CACPP,sBAAuB,QACvBC,6BAAyBv1C,EACzBw1C,wBAAyB,QACzBC,6BAA8B,QAC9BC,iBAAkB,QAClBC,yBAA0B,QAC1BC,sBAAuB,QACvBC,kBAAmB,UAIV3zC,EAAAA,0BAA4B,CACvC,klBC9DF,IAAA4zC,EAAA52C,EAAA,OAwBA6iC,EAAA7iC,EAAA,OAcA,SAAgB62C,EACd9S,EACAtxB,GACmC,IAAnCo0B,EAAAjmC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGMk2C,EAA4B,CAAEtR,QADpB3C,EAAAkU,wBAAwBhT,GAAaqS,sBACRlT,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GACpF,OAAInU,EAAAoU,0BAA0B3tB,SAAS7W,IAAYo0B,GAC1C,EAAA+P,EAAAM,4BAA2BJ,IAE7B,EAAAF,EAAAO,8BAA6BL,EACtC,CAEA,SAAgBM,EACdrT,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAawS,6BACrD,OAAO,EAAAK,EAAAS,2CAA0C,CAC/C7R,QAAAA,EACAtC,QAASzwB,EAAQ9O,WACjBqzC,UAAU,GAEd,CAEA,SAAgBM,EACdvT,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAa0S,yBACrD,OAAO,EAAAG,EAAAW,gCAA+B,CAAE/R,QAAAA,EAAStC,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GAC1F,CAEA,SAAgBQ,EACdzT,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAayS,iBACrD,OAAO,EAAAI,EAAAa,wBAAuB,CAAEjS,QAAAA,EAAStC,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GAClF,CAEA,SAAgBU,EACd3T,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAauS,wBACrD,OAAO,EAAAM,EAAAe,2BAA0B,CAAEnS,QAAAA,EAAStC,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GACrF,CAEA,SAAgBY,EACd7T,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAa2S,sBACrD,OAAO,EAAAE,EAAAiB,6BAA4B,CAAErS,QAAAA,EAAStC,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GACvF,CAEA,SAAgBc,EACd/T,EACAtxB,GAEA,IAAM+yB,EAAU3C,EAAAkU,wBAAwBhT,GAAa4S,kBACrD,OAAO,EAAAC,EAAAmB,yBAAwB,CAAEvS,QAAAA,EAAStC,QAASzwB,EAAQ9O,WAAYqzC,UAAU,GACnF,CAEqC,SAAAgB,IAqBpC,OArBoCA,EAAA7wC,EAAAL,IAAAQ,MAA9B,SAAAC,EAAAsK,GAAA,IAAA+0B,EAAA7C,EAAAtxB,EAAAwlC,EAAApR,EAAAqR,EAAAC,EAAAC,EAAA,OAAAtxC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAeH,OAdFu+B,EAAU/0B,EAAV+0B,WACA7C,EAAWlyB,EAAXkyB,YACAtxB,EAAOZ,EAAPY,QACAwlC,EAAiBpmC,EAAjBomC,kBACApR,EAAkBh1B,EAAlBg1B,mBACAqR,EAAermC,EAAfqmC,gBAEMC,EAAsBtB,EAA0B9S,EAAatxB,EAASo0B,GACtEuR,EAAqBxR,EAAWyR,gBAAgB,CACpDtU,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAAA,EACAG,sBAAwC,OAAjBL,QAAiB,IAAjBA,EAAAA,EAAoC,OAAfC,QAAe,IAAfA,OAAe,EAAfA,EAAiBK,sBAC7DC,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,oBACpClwC,EAAAF,KAAA,EAC+Bu+B,EAAW8R,mBAAmBN,EAAmBhR,cAAa,OAAvE,GAAA7+B,EAAAO,KACD,CAAAP,EAAAF,KAAA,cACf,IAAI3G,MAAM,6DAA4D,cAAA6G,EAAA8I,OAAA,SAEvE+mC,GAAkB,wBAAA7vC,EAAAM,OAAA,GAAAtB,EAAA,MAC1B6B,MAAA,KAAAxI,UAAA,CAE4C,SAAA+3C,IAqB5C,OArB4CA,EAAAxxC,EAAAL,IAAAQ,MAAtC,SAAAs4B,EAAAuH,GAAA,IAAAP,EAAA7C,EAAAtxB,EAAAylC,EAAAU,EAAAC,EAAA,OAAA/xC,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMqF,OAL1Fu+B,EAAUO,EAAVP,WACA7C,EAAWoD,EAAXpD,YACAtxB,EAAO00B,EAAP10B,QACAylC,EAAe/Q,EAAf+Q,gBAEMU,EAAyBlB,EAAsC3T,EAAatxB,GAAQtK,EAAAE,KAAA,EACnDu+B,EAAWkS,4BAA4B,CAC5E/U,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqBS,EACrBN,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,wBACxCP,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBc,sBACpC,OAN4B,OAAxBH,EAAwB1wC,EAAAW,KAAAX,EAAAE,KAAA,EAOGu+B,EAAW8R,mBAC1CG,EAAyBzR,cAC1B,OAFuB,GAAAj/B,EAAAW,KAGD,CAAAX,EAAAE,KAAA,eACf,IAAI3G,MAAM,oEAAmE,eAAAyG,EAAAkJ,OAAA,SAE9EwnC,GAAwB,yBAAA1wC,EAAAU,OAAA,GAAA+2B,EAAA,MAChCx2B,MAAA,KAAAxI,UAAA,CAE4D,SAAAq4C,IAwB5D,OAxB4DA,EAAA9xC,EAAAL,IAAAQ,MAAtD,SAAAkgC,EAAA9J,GAAA,IAAAkJ,EAAA7C,EAAAtxB,EAAAylC,EAAAgB,EAAAC,EAAA,OAAAryC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OASJ,OARDu+B,EAAUlJ,EAAVkJ,WACA7C,EAAWrG,EAAXqG,YACAtxB,EAAOirB,EAAPjrB,QACAylC,EAAexa,EAAfwa,gBAEMgB,EAA4B9B,EAChCrT,EACAtxB,GACDg1B,EAAAp/B,KAAA,EACqCu+B,EAAWwS,wCAAwC,CACvFrV,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqBe,EACrBZ,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBzI,uBACxC+I,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBmB,qBACpC,OAN2B,OAAvBF,EAAuB1R,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,EAOIu+B,EAAW8R,mBAC1CS,EAAwB/R,cACzB,OAFuB,GAAAK,EAAA3+B,KAGD,CAAA2+B,EAAAp/B,KAAA,eACf,IAAI3G,MAAM,gFAA+E,eAAA+lC,EAAAp2B,OAAA,SAE1F8nC,GAAuB,yBAAA1R,EAAA5+B,OAAA,GAAA2+B,EAAA,MAC/Bp+B,MAAA,KAAAxI,UAAA,CAEyC,SAAA04C,IAmBzC,OAnByCA,EAAAnyC,EAAAL,IAAAQ,MAAnC,SAAAsgC,EAAAiK,GAAA,IAAAjL,EAAA7C,EAAAtxB,EAAAylC,EAAAqB,EAAAlS,EAAA,OAAAvgC,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,OAM2E,OALhFu+B,EAAUiL,EAAVjL,WACA7C,EAAW8N,EAAX9N,YACAtxB,EAAOo/B,EAAPp/B,QACAylC,EAAerG,EAAfqG,gBAEMqB,EAAsB/B,EAA+BzT,EAAatxB,GAAQo1B,EAAAx/B,KAAA,EAChDu+B,EAAW4S,qBAAqB,CAC9DzV,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqBoB,EACrBjB,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBuB,iBACxCjB,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBwB,eACpC,OANqB,OAAjBrS,EAAiBQ,EAAA/+B,KAAA++B,EAAAx/B,KAAA,EAOUu+B,EAAW8R,mBAAmBrR,EAAkBD,cAAa,OAAtE,GAAAS,EAAA/+B,KACD,CAAA++B,EAAAx/B,KAAA,eACf,IAAI3G,MAAM,6DAA4D,eAAAmmC,EAAAx2B,OAAA,SAEvEg2B,GAAiB,yBAAAQ,EAAAh/B,OAAA,GAAA++B,EAAA,MACzBx+B,MAAA,KAAAxI,UAAA,CAEiD,SAAA+4C,IAqBjD,OArBiDA,EAAAxyC,EAAAL,IAAAQ,MAA3C,SAAA0gC,EAAAqK,GAAA,IAAAzL,EAAA7C,EAAAtxB,EAAAylC,EAAA0B,EAAAtS,EAAA,OAAAxgC,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,OAM2F,OALhGu+B,EAAUyL,EAAVzL,WACA7C,EAAWsO,EAAXtO,YACAtxB,EAAO4/B,EAAP5/B,QACAylC,EAAe7F,EAAf6F,gBAEM0B,EAA8BtC,EAAuCvT,EAAatxB,GAAQw1B,EAAA5/B,KAAA,EACxDu+B,EAAWiT,6BAA6B,CAC9E9V,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqByB,EACrBtB,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiB4B,yBACxCtB,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,uBACpC,OAN6B,OAAzBzS,EAAyBW,EAAAn/B,KAAAm/B,EAAA5/B,KAAA,EAOEu+B,EAAW8R,mBAC1CpR,EAA0BF,cAC3B,OAFuB,GAAAa,EAAAn/B,KAGD,CAAAm/B,EAAA5/B,KAAA,eACf,IAAI3G,MAAM,qEAAoE,eAAAumC,EAAA52B,OAAA,SAE/Ei2B,GAAyB,yBAAAW,EAAAp/B,OAAA,GAAAm/B,EAAA,MACjC5+B,MAAA,KAAAxI,UAAA,CAE8C,SAAAo5C,IAqB9C,OArB8CA,EAAA7yC,EAAAL,IAAAQ,MAAxC,SAAA8gC,EAAAwK,GAAA,IAAAhM,EAAA7C,EAAAtxB,EAAAylC,EAAA+B,EAAAC,EAAA,OAAApzC,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,OAMqF,OAL1Fu+B,EAAUgM,EAAVhM,WACA7C,EAAW6O,EAAX7O,YACAtxB,EAAOmgC,EAAPngC,QACAylC,EAAetF,EAAfsF,gBAEM+B,EAA2BrC,EAAoC7T,EAAatxB,GAAQ41B,EAAAhgC,KAAA,EACrDu+B,EAAWuT,0BAA0B,CACxEpW,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqB8B,EACrB3B,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBkC,sBACxC5B,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,oBACpC,OAN0B,OAAtBH,EAAsB7R,EAAAv/B,KAAAu/B,EAAAhgC,KAAA,EAOKu+B,EAAW8R,mBAC1CwB,EAAuB9S,cACxB,OAFuB,GAAAiB,EAAAv/B,KAGD,CAAAu/B,EAAAhgC,KAAA,eACf,IAAI3G,MAAM,kEAAiE,eAAA2mC,EAAAh3B,OAAA,SAE5E6oC,GAAsB,yBAAA7R,EAAAx/B,OAAA,GAAAu/B,EAAA,MAC9Bh/B,MAAA,KAAAxI,UAAA,CAE0C,SAAA05C,IAmB1C,OAnB0CA,EAAAnzC,EAAAL,IAAAQ,MAApC,SAAAkhC,EAAAuN,GAAA,IAAAnP,EAAA7C,EAAAtxB,EAAAylC,EAAAqC,EAAAC,EAAA,OAAA1zC,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,OAM6E,OALlFu+B,EAAUmP,EAAVnP,WACA7C,EAAWgS,EAAXhS,YACAtxB,EAAOsjC,EAAPtjC,QACAylC,EAAenC,EAAfmC,gBAEMqC,EAAuBzC,EAAgC/T,EAAatxB,GAAQg2B,EAAApgC,KAAA,EACjDu+B,EAAW6T,sBAAsB,CAChE1W,YAAAA,EACAtxB,QAAAA,EACA0lC,oBAAqBoC,EACrBjC,sBAAsC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBwC,kBACxClC,kBAAkC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiByC,gBACpC,OANsB,OAAlBH,EAAkB/R,EAAA3/B,KAAA2/B,EAAApgC,KAAA,EAOSu+B,EAAW8R,mBAAmB8B,EAAmBpT,cAAa,OAAvE,GAAAqB,EAAA3/B,KACD,CAAA2/B,EAAApgC,KAAA,eACf,IAAI3G,MAAM,8DAA6D,eAAA+mC,EAAAp3B,OAAA,SAExEmpC,GAAkB,yBAAA/R,EAAA5/B,OAAA,GAAA2/B,EAAA,MAC1Bp/B,MAAA,KAAAxI,UAAA,CA/NDoC,EAAAA,0BAAA6zC,EAaA7zC,EAAAA,kDAAAo0C,EAYAp0C,EAAAA,uCAAAs0C,EAQAt0C,EAAAA,+BAAAw0C,EAQAx0C,EAAAA,sCAAA00C,EAQA10C,EAAAA,oCAAA40C,EAQA50C,EAAAA,gCAAA80C,EAQA90C,EAAAA,gBAFC,SAEoCkH,GAAA,OAAA8tC,EAAA5uC,MAAA,KAAAxI,UAAA,EAuBrCoC,EAAAA,wBAFC,SAE4CmH,GAAA,OAAAwuC,EAAAvvC,MAAA,KAAAxI,UAAA,EAuB7CoC,EAAAA,wCAFC,SAE4DoH,GAAA,OAAA6uC,EAAA7vC,MAAA,KAAAxI,UAAA,EA0B7DoC,EAAAA,qBAFC,SAEyCknC,GAAA,OAAAoP,EAAAlwC,MAAA,KAAAxI,UAAA,EAqB1CoC,EAAAA,6BAFC,SAEiDkoC,GAAA,OAAAyO,EAAAvwC,MAAA,KAAAxI,UAAA,EAuBlDoC,EAAAA,0BAFC,SAE8CuoC,GAAA,OAAAyO,EAAA5wC,MAAA,KAAAxI,UAAA,EAuB/CoC,EAAAA,sBAFC,SAE0CgpC,GAAA,OAAAsO,EAAAlxC,MAAA,KAAAxI,UAAA,mPRlP3C,IAAAglC,EAAAxE,EAAAphC,EAAA,QAsBEgD,EAAAA,gBAtBK4iC,EAAA7zB,QACP,IAAA6oC,EAAAxZ,EAAAphC,EAAA,QAQA66C,EAAAzZ,EAAAphC,EAAA,QAcEgD,EAAAA,YAdK63C,EAAA9oC,QASP,IAAA5R,EAAAH,EAAA,OAmBE6N,OAAAA,eAAAA,EAAAA,iCAAAA,CAAA2B,YAAA,EAAAC,IAAA,kBAnBOtP,EAAA8qC,8BAA8B,IAEvCjoC,EAAAA,QAAe43C,EAAA7oC,m5BSff,IAAA8wB,EAAA7iC,EAAA,OACA86C,EAAA96C,EAAA,MAQM+6C,EAAe,WAArB,SAAAA,IAAA35C,EAAA,KAAA25C,GACEC,EAAA1hC,IAAA,aACA2hC,EAAA3hC,IAAA,aACA4hC,EAAA5hC,IAAA,aACA6hC,EAAA7hC,IAAA,aACA8hC,EAAA9hC,IAAA,YA0EF,CA/DG,OA+DF/X,EAAAw5C,EAAA,EAAAv5C,IAAA,OAAAC,MAAA,eAAAklC,EAAAx/B,EAAAL,IAAAQ,MA7DC,SAAAC,EAAAsK,GAAA,IAAA+0B,EAAAxC,EAAAyC,EAAAC,EAAAr0B,EAAAylC,EAAAmD,EAAAtX,EAAA,OAAAj9B,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAIkB,OAHhBu+B,EAAU/0B,EAAV+0B,WACAxC,EAAWvyB,EAAXuyB,YACAyC,EAAkBh1B,EAAlBg1B,mBACAC,EAAgBj1B,EAAhBi1B,iBAAgBv+B,EAAAF,KAAA,EAEMu+B,EAAW8B,aAAY,OAGA,OAHvCj2B,EAAOlK,EAAAO,KACPovC,EAAkC,OAAhBpR,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAmBr0B,GAC3Cs0B,EAAA,KAAIiU,EAAqBlU,EAAgB,KACzCC,EAAA,KAAIkU,EAAuBpU,EAAkB,KAAAt+B,EAAAF,KAAA,GAET,EAAAyyC,EAAAzC,iBAAgB,CAClDzR,WAAAA,EACA7C,YAAalB,EAAAyY,kBACb7oC,QAAAA,EACAo0B,mBAAAA,EACAoR,kBAAmB7T,EACnB8T,gBAAAA,IACA,OAPyB,OAArBmD,EAAqB9yC,EAAAO,KAAAP,EAAAF,KAAA,GAQDgzC,EAAsB3T,aAAY,QACxD,OADE3D,EAAWx7B,EAAAO,KAAAP,EAAAK,GACjBm+B,EAAAx+B,EAAAU,GAAA,KAAIV,EAAAqX,GAAAs7B,EAAA3yC,EAAAF,KAAA,IAAuB,EAAAyyC,EAAAzC,iBAAgB,CACzCzR,WAAAA,EACA7C,YAAAA,EACAtxB,QAAAA,EACAo0B,mBAAAA,EACAoR,kBAAmB7T,EACnB8T,gBAAAA,IACA,QACE,OADF3vC,EAAAsiB,GAAAtiB,EAAAO,MAAA,EAAAP,EAAAK,IAAAL,EAAAU,GAAAV,EAAAqX,GAAArX,EAAAsiB,GAAA,KAAAtiB,EAAAuiB,GACFic,EAAAx+B,EAAAwiB,GAAA,KAAIxiB,EAAAgzC,GAAAJ,EAAA5yC,EAAAF,KAAA,IAA4B,EAAAyyC,EAAAtB,sBAAqB,CACnD5S,WAAAA,EACA7C,YAAAA,EACAtxB,QAAAA,EACAylC,gBAAAA,IACA,QACE,OADF3vC,EAAAizC,GAAAjzC,EAAAO,MAAA,EAAAP,EAAAuiB,IAAAviB,EAAAwiB,GAAAxiB,EAAAgzC,GAAAhzC,EAAAizC,GAAA,KAAAjzC,EAAAkzC,GACF1U,EAAAx+B,EAAAmzC,GAAA,KAAInzC,EAAAozC,IAAAP,EAAA7yC,EAAAF,KAAA,IAAoC,EAAAyyC,EAAAjB,8BAA6B,CACnEjT,WAAAA,EACA7C,YAAAA,EACAtxB,QAAAA,EACAylC,gBAAAA,IACA,QAAA3vC,EAAAqzC,IAAArzC,EAAAO,MAAA,EAAAP,EAAAkzC,IAAAlzC,EAAAmzC,GAAAnzC,EAAAozC,IAAApzC,EAAAqzC,IAAA,8BAAArzC,EAAAM,OAAA,GAAAtB,EAAA,UACH,gBAAA2C,GAAA,OAAAy8B,EAAAv9B,MAAA,KAAAxI,UAAA,EAqBF,IArBE,CAAAY,IAAA,mBAAAiO,IAED,WACE,OAAOu3B,EAAA,KAAIgU,EAAA,IACb,GAAC,CAAAx5C,IAAA,qBAAAiO,IAED,WACE,OAAOu3B,EAAA,KAAIiU,EAAA,IACb,GAAC,CAAAz5C,IAAA,eAAAiO,IAED,WACE,OAAOu3B,EAAA,KAAIkU,EAAA,IACb,GAAC,CAAA15C,IAAA,oBAAAiO,IAED,WACE,OAAOu3B,EAAA,KAAImU,EAAA,IACb,GAAC,CAAA35C,IAAA,4BAAAiO,IAED,WACE,OAAOu3B,EAAA,KAAIoU,EAAA,IACb,IAAC,EAAA55C,IAAA,SAAAC,MAAA,eAAAo0C,EAAA1uC,EAAAL,IAAAQ,MAvED,SAAAs4B,EAAAuH,GAAA,IAAAP,EAAAxC,EAAAyC,EAAAC,EAAA+U,EAAA,OAAA/0C,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM+C,OAL7Cu+B,EAAUO,EAAVP,WACAxC,EAAW+C,EAAX/C,YACAyC,EAAkBM,EAAlBN,mBACAC,EAAgBK,EAAhBL,iBAEM+U,EAAkB,IAAId,EAAiB5yC,EAAAE,KAAA,EACvCwzC,EAAgB3F,KAAK,CAAEtP,WAAAA,EAAYxC,YAAAA,EAAayC,mBAAAA,EAAoBC,iBAAAA,IAAmB,cAAA3+B,EAAAkJ,OAAA,SACtFwqC,GAAe,wBAAA1zC,EAAAU,OAAA,GAAA+2B,EAAA,KACvB,gBAAAz1B,GAAA,OAAA0rC,EAAAzsC,MAAA,KAAAxI,UAAA,EA8DA,MA9DAm6C,CAAA,CAhBkB,yEAiFrB/3C,EAAAA,QAAe+3C,y4BC9Ff,IAAApV,EAAA3lC,EAAA,OACAG,EAAAH,EAAA,OACAK,EAAAL,EAAA,OAEM87C,EAAsB,WAM1B,SAAAA,EAAYlV,EAAwBK,GAAgC7lC,EAAA,KAAA06C,GALpEC,EAAAziC,IAAA,aACA0iC,EAAA1iC,IAAA,aAEA2iC,EAAA3iC,IAAA,KAAQ,sEAGNytB,EAAA,KAAIgV,EAAenV,EAAU,KAC7BG,EAAA,KAAIiV,EAAiB/U,EAAY,IACnC,CA8CC,OA9CA1lC,EAAAu6C,EAAA,EAAAt6C,IAAA,iCAAAC,MAEO,SAA+BguC,GAErC,IADuBzI,EAAA,KAAI+U,EAAA,KAAarY,UAAU+L,KAC3B,EAAAtvC,EAAA+7C,eAAczM,GACnC,MAAM,IAAI/tC,MAAM,4CAEpB,GAAC,CAAAF,IAAA,sCAAAC,MAEO,SACN06C,EACAC,GAEA,IAAI,EAAAj8C,EAAA+tC,YAAWiO,EAAwBC,GACrC,MAAM,IAAI16C,MAAM,+CAEpB,GAAC,CAAAF,IAAA,mCAAAC,MAEO,SAAiCguC,GACvC,IAAI,EAAAtvC,EAAA+7C,eAAczM,GAChB,MAAM,IAAI/tC,MAAM,2CAEpB,GAAC,CAAAF,IAAA,qBAAAC,MAAA,eAAA46C,EAAAl1C,EAAAL,IAAAQ,MAED,SAAAC,IAAA,IAAAw8B,EAAA,OAAAj9B,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAC4B2+B,EAAA,KAAIgV,EAAA,KAAetU,aAAY,OAAxC,GAAX3D,EAAWx7B,EAAAO,OACb,EAAA68B,EAAAyI,gBAAezI,EAAAZ,cAAcM,sBAAuBtB,GAAY,CAAAx7B,EAAAF,KAAA,eAAAE,EAAA8I,OAAA,SAC3D21B,EAAA,KAAI+U,EAAA,KAAaO,aAAatV,EAAA,KAAIgV,EAAA,KAAe5U,aAAcJ,EAAA,KAAIiV,EAAA,OAAO,aAE3E,IAAIv6C,MACR,mFACD,wBAAA6G,EAAAM,OAAA,GAAAtB,EAAA,UAEJ,yBAAA80C,EAAAjzC,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,kCAAAC,MAAA,eAAA86C,EAAAp1C,EAAAL,IAAAQ,MAED,SAAAs4B,EAAsC6P,GAA8B,IAAA0M,EAAA,OAAAr1C,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAA3D,KAAKm0C,+BAA+B/M,GAAuBtnC,EAAAE,KAAA,EACtB,KAAK0gC,qBAAoB,OAC0B,OADlFoT,EAAsBh0C,EAAAW,KAC5B,KAAK2zC,oCAAoCN,EAAwB1M,GAAuBtnC,EAAAkJ,OAAA,SACjF21B,EAAA,KAAIgV,EAAA,KAAej6C,OAAO,qBAAsB,CAAC0tC,KAAwB,wBAAAtnC,EAAAU,OAAA,GAAA+2B,EAAA,UACjF,gBAAA11B,GAAA,OAAAqyC,EAAAnzC,MAAA,KAAAxI,UAAA,EAPA,IAOA,CAAAY,IAAA,mCAAAC,MAAA,eAAAi7C,EAAAv1C,EAAAL,IAAAQ,MAED,SAAAkgC,IAAA,IAAA2U,EAAA,OAAAr1C,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EACuC,KAAK0gC,qBAAoB,OACD,OADvDoT,EAAsB1U,EAAA3+B,KAC5B,KAAK6zC,iCAAiCR,GAAuB1U,EAAAp2B,OAAA,SACtD21B,EAAA,KAAIgV,EAAA,KAAej6C,OAAO,qBAAsB,CAAC1B,EAAAu8C,gBAAc,wBAAAnV,EAAA5+B,OAAA,GAAA2+B,EAAA,UACvE,yBAAAkV,EAAAtzC,MAAA,KAAAxI,UAAA,EANA,MAMAk7C,CAAA,CAvDyB,6CA0D5B94C,EAAAA,QAAe84C,y4BC9Df,IAAAnW,EAAA3lC,EAAA,OACAG,EAAAH,EAAA,OACAK,EAAAL,EAAA,OAEM68C,EAAY,WAMhB,SAAAA,EAAYjW,EAAwBK,GAAgC7lC,EAAA,KAAAy7C,GALpEC,EAAAxjC,IAAA,aACAyjC,EAAAzjC,IAAA,aAEA0jC,EAAA1jC,IAAA,KAAQ,sEAGNytB,EAAA,KAAI+V,EAAelW,EAAU,KAC7BG,EAAA,KAAIgW,EAAiB9V,EAAY,IACnC,CA2CC,OA3CA1lC,EAAAs7C,EAAA,EAAAr7C,IAAA,uBAAAC,MAEO,SAAqB4uC,GAE3B,IADuBrJ,EAAA,KAAI8V,EAAA,KAAapZ,UAAU2M,KAC3B,EAAAlwC,EAAA+7C,eAAc7L,GACnC,MAAM,IAAI3uC,MAAM,iCAEpB,GAAC,CAAAF,IAAA,4BAAAC,MAEO,SAA0Bw7C,EAAsBC,GACtD,IAAI,EAAA/8C,EAAA+tC,YAAW+O,EAAcC,GAC3B,MAAM,IAAIx7C,MAAM,oCAEpB,GAAC,CAAAF,IAAA,yBAAAC,MAEO,SAAuB4uC,GAC7B,IAAI,EAAAlwC,EAAA+7C,eAAc7L,GAChB,MAAM,IAAI3uC,MAAM,gCAEpB,GAAC,CAAAF,IAAA,WAAAC,MAAA,eAAAunC,EAAA7hC,EAAAL,IAAAQ,MAED,SAAAC,IAAA,IAAAw8B,EAAA,OAAAj9B,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAC4B2+B,EAAA,KAAI+V,EAAA,KAAerV,aAAY,OAAxC,GAAX3D,EAAWx7B,EAAAO,OACb,EAAA68B,EAAAyI,gBAAezI,EAAAZ,cAAcK,eAAgBrB,GAAY,CAAAx7B,EAAAF,KAAA,eAAAE,EAAA8I,OAAA,SACpD21B,EAAA,KAAI8V,EAAA,KAAaR,aAAatV,EAAA,KAAI+V,EAAA,KAAe3V,aAAcJ,EAAA,KAAIgW,EAAA,OAAO,aAE3E,IAAIt7C,MACR,sFACD,wBAAA6G,EAAAM,OAAA,GAAAtB,EAAA,UAEJ,yBAAAyhC,EAAA5/B,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,wBAAAC,MAAA,eAAA07C,EAAAh2C,EAAAL,IAAAQ,MAED,SAAAs4B,EAA4ByQ,GAAoB,IAAA4M,EAAA,OAAAn2C,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAvC,KAAK+0C,qBAAqB/M,GAAaloC,EAAAE,KAAA,EACZ,KAAK8gC,WAAU,OACgB,OADpD8T,EAAY90C,EAAAW,KAClB,KAAKu0C,0BAA0BJ,EAAc5M,GAAaloC,EAAAkJ,OAAA,SACnD21B,EAAA,KAAI+V,EAAA,KAAeh7C,OAAO,WAAY,CAACsuC,KAAc,wBAAAloC,EAAAU,OAAA,GAAA+2B,EAAA,UAC7D,gBAAA11B,GAAA,OAAAizC,EAAA/zC,MAAA,KAAAxI,UAAA,EAPA,IAOA,CAAAY,IAAA,yBAAAC,MAAA,eAAA67C,EAAAn2C,EAAAL,IAAAQ,MAED,SAAAkgC,IAAA,IAAAyV,EAAA,OAAAn2C,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EAC6B,KAAK8gC,WAAU,OACD,OADnC8T,EAAYxV,EAAA3+B,KAClB,KAAKy0C,uBAAuBN,GAAaxV,EAAAp2B,OAAA,SAClC21B,EAAA,KAAI+V,EAAA,KAAeh7C,OAAO,WAAY,CAAC1B,EAAAu8C,gBAAc,wBAAAnV,EAAA5+B,OAAA,GAAA2+B,EAAA,UAC7D,yBAAA8V,EAAAl0C,MAAA,KAAAxI,UAAA,EANA,MAMAi8C,CAAA,CApDe,6CAuDlB75C,EAAAA,QAAe65C,u4BC3Df,IAAA18C,EAAAH,EAAA,OACAK,EAAAL,EAAA,OAEMw9C,EAAa,WAIjB,SAAAA,EAAY5W,EAAwBK,GAAgC7lC,EAAA,KAAAo8C,GAHpEC,EAAAnkC,IAAA,aACAokC,EAAApkC,IAAA,aAGEytB,EAAA,KAAI0W,EAAe7W,EAAU,KAC7BG,EAAA,KAAI2W,EAAiBzW,EAAY,IACnC,CA+CC,OA/CA1lC,EAAAi8C,EAAA,EAAAh8C,IAAA,wBAAAC,MAEO,SAAsBioC,GAE5B,IADuB1C,EAAA,KAAIyW,EAAA,KAAa/Z,UAAUgG,KAC3B,EAAAvpC,EAAAw9C,qBAAoBjU,GACzC,MAAM,IAAIhoC,MAAM,kCAEpB,GAAC,CAAAF,IAAA,6BAAAC,MAEO,SAA2BioC,EAAuBkU,GAGxD,GAFoBA,EAAQC,WAAU,SAAC3b,GAAc,OAAK,EAAA/hC,EAAA+tC,YAAWhM,EAAQwH,EAAc,KAC1D,EAE/B,MAAM,IAAIhoC,MAAM,qCAEpB,GAAC,CAAAF,IAAA,0BAAAC,MAEO,SAAwBioC,EAAuBkU,GACrD,IAAME,EAAcF,EAAQC,WAAU,SAAC3b,GAAc,OAAK,EAAA/hC,EAAA+tC,YAAWhM,EAAQwH,EAAc,IAE3F,KADkBoU,GAAe,GAE/B,MAAM,IAAIp8C,MAAM,sCAElB,OAAOo8C,CACT,GAAC,CAAAt8C,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAED,SAAAC,IAAA,OAAAT,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAA8I,OAAA,SACS21B,EAAA,KAAI0W,EAAA,KAAenU,cAAY,wBAAAhhC,EAAAM,OAAA,GAAAtB,EAAA,UACvC,yBAAA6hC,EAAAhgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAED,SAAAs4B,EAAsB8J,GAAqB,OAAA5iC,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SAClC21B,EAAA,KAAI0W,EAAA,KAAe9T,gBAAgBF,IAAc,wBAAAvhC,EAAAU,OAAA,GAAA+2B,EAAA,UACzD,gBAAA11B,GAAA,OAAAs/B,EAAApgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,yBAAAC,MAAA,eAAAs8C,EAAA52C,EAAAL,IAAAQ,MAED,SAAAkgC,EAA6BkC,GAAqB,IAAAkU,EAAA,OAAA92C,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OACP,OAAzC,KAAK21C,sBAAsBtU,GAAcjC,EAAAp/B,KAAA,EACnB,KAAKkhC,aAAY,OACgB,OADjDqU,EAAOnW,EAAA3+B,KACb,KAAKm1C,2BAA2BvU,EAAekU,GAAQnW,EAAAp2B,OAAA,SAChD21B,EAAA,KAAI0W,EAAA,KAAe37C,OAAO,eAAgB,CAAC2nC,KAAe,wBAAAjC,EAAA5+B,OAAA,GAAA2+B,EAAA,UAClE,gBAAAr9B,GAAA,OAAA4zC,EAAA30C,MAAA,KAAAxI,UAAA,EAPA,IAOA,CAAAY,IAAA,0BAAAC,MAAA,eAAAy8C,EAAA/2C,EAAAL,IAAAQ,MAED,SAAAsgC,EAA8B8B,GAAqB,IAAAkU,EAAAE,EAAAK,EAAA,OAAAr3C,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,OACR,OAAzC,KAAK21C,sBAAsBtU,GAAc7B,EAAAx/B,KAAA,EACnB,KAAKkhC,aAAY,OAEkD,OAFnFqU,EAAO/V,EAAA/+B,KACPg1C,EAAc,KAAKM,wBAAwB1U,EAAekU,GAC1DO,EAAoC,IAAhBL,EAAoBz9C,EAAAg+C,iBAAmBT,EAAQE,EAAc,GAAEjW,EAAAx2B,OAAA,SAClF21B,EAAA,KAAI0W,EAAA,KAAe37C,OAAO,gBAAiB,CAACo8C,EAAmBzU,KAAe,wBAAA7B,EAAAh/B,OAAA,GAAA++B,EAAA,UACtF,gBAAAx9B,GAAA,OAAA8zC,EAAA90C,MAAA,KAAAxI,UAAA,EARA,MAQA48C,CAAA,CAtDgB,+BAyDnBx6C,EAAAA,QAAew6C,w5BC5Df,IAAAr9C,EAAAH,EAAA,OACAK,EAAAL,EAAA,OAEMs+C,EAAY,WAIhB,SAAAA,EAAY1X,EAAwBK,GAAgC7lC,EAAA,KAAAk9C,GAHpEC,EAAAjlC,IAAA,aACAklC,EAAAllC,IAAA,aAGEytB,EAAA,KAAIwX,EAAe3X,EAAU,KAC7BG,EAAA,KAAIyX,EAAiBvX,EAAY,IACnC,CAqGC,OArGA1lC,EAAA+8C,EAAA,EAAA98C,IAAA,uBAAAC,MAEO,SAAqBsoC,EAAsB0U,GAEjD,IADuBzX,EAAA,KAAIuX,EAAA,KAAa7a,UAAUqG,KAC3B,EAAA5pC,EAAAw9C,qBAAoB5T,GACzC,MAAM,IAAIroC,MAAM+8C,GAAgB,iCAEpC,GAAC,CAAAj9C,IAAA,oBAAAC,MAEO,SAAkBqwC,EAAmB4M,GAC3C,GAAI5M,GAAa,EACf,MAAM,IAAIpwC,MAAM,wCAElB,GAAIowC,EAAY4M,EACd,MAAM,IAAIh9C,MAAM,sCAEpB,GAAC,CAAAF,IAAA,4BAAAC,MAEO,SACNsoC,EACA2D,EACA+Q,GAIA,GAFmB/Q,EAAOmQ,WAAU,SAAC5P,GAAa,OAAK,EAAA9tC,EAAA+tC,YAAWD,EAAOlE,EAAa,KACxD,EAE5B,MAAM,IAAIroC,MAAM+8C,GAAgB,uCAEpC,GAAC,CAAAj9C,IAAA,yBAAAC,MAEO,SACNsoC,EACA2D,EACA+Q,GAEA,IAAME,EAAajR,EAAOmQ,WAAU,SAAC5P,GAAa,OAAK,EAAA9tC,EAAA+tC,YAAWD,EAAOlE,EAAa,IAEtF,KADgB4U,GAAc,GAE5B,MAAM,IAAIj9C,MAAM+8C,GAAgB,oCAElC,OAAOE,CACT,GAAC,CAAAn9C,IAAA,YAAAC,MAAA,eAAAkmC,EAAAxgC,EAAAL,IAAAQ,MAED,SAAAC,IAAA,IAAAmmC,EAAA,OAAA5mC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACuB2+B,EAAA,KAAIwX,EAAA,KAAe1W,YAAW,OAAvC,OAAN4F,EAAMnlC,EAAAO,KAAAP,EAAA8I,OAAA,SAAAunB,EACD8U,IAAM,wBAAAnlC,EAAAM,OAAA,GAAAtB,EAAA,UAClB,yBAAAogC,EAAAv+B,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,eAAAC,MAAA,eAAA0mC,EAAAhhC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SACS21B,EAAA,KAAIwX,EAAA,KAAelW,gBAAc,wBAAAngC,EAAAU,OAAA,GAAA+2B,EAAA,UACzC,yBAAAuI,EAAA/+B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,UAAAC,MAAA,eAAAooC,EAAA1iC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAcuC,GAAoB,OAAAjjC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SACzB21B,EAAA,KAAIwX,EAAA,KAAevU,QAAQF,IAAa,wBAAAtC,EAAA5+B,OAAA,GAAA2+B,EAAA,UAChD,gBAAAt9B,GAAA,OAAA2/B,EAAAzgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,kCAAAC,MAAA,eAAAm9C,EAAAz3C,EAAAL,IAAAQ,MAED,SAAAsgC,EAAsCmC,EAAsB+H,GAAkB,IAAApE,EAAAmR,EAAA,OAAA/3C,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,OACrC,OAAvC,KAAKy2C,qBAAqB/U,GAAalC,EAAAx/B,KAAA,EAClB,KAAKy/B,YAAW,OACe,GAD9C4F,EAAM7F,EAAA/+B,KACZ,KAAKi2C,0BAA0BhV,EAAc2D,GACf,OAAToE,QAAS,IAATA,EAAS,CAAAjK,EAAAx/B,KAAA,QAAAw/B,EAAAj/B,GAATkpC,EAASjK,EAAAx/B,KAAA,uBAAAw/B,EAAAx/B,KAAA,GAAW,KAAKigC,eAAc,QAAAT,EAAAj/B,GAAAi/B,EAAA/+B,KAAA,QACL,OADjD+1C,EAAYhX,EAAAj/B,GAClB,KAAKo2C,kBAAkBH,EAAcnR,EAAO7sC,OAAS,GAAEgnC,EAAAx2B,OAAA,SAChD21B,EAAA,KAAIwX,EAAA,KAAez8C,OAAO,wBAAyB,CAACgoC,EAAc8U,KAAc,yBAAAhX,EAAAh/B,OAAA,GAAA++B,EAAA,UACxF,gBAAAz9B,EAAAC,GAAA,OAAAw0C,EAAAx1C,MAAA,KAAAxI,UAAA,EATA,IASA,CAAAY,IAAA,wBAAAC,MAAA,eAAAw9C,EAAA93C,EAAAL,IAAAQ,MAED,SAAA0gC,EAA4B+B,EAAsB+H,GAAkB,IAAApE,EAAAiR,EAAAE,EAAAK,EAAA,OAAAp4C,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,OAC3B,OAAvC,KAAKy2C,qBAAqB/U,GAAa9B,EAAA5/B,KAAA,EAClB,KAAKy/B,YAAW,OAC+B,GAD9D4F,EAAMzF,EAAAn/B,KACN61C,EAAa,KAAKQ,uBAAuBpV,EAAc2D,GAC/B,OAAToE,QAAS,IAATA,EAAS,CAAA7J,EAAA5/B,KAAA,QAAA4/B,EAAAr/B,GAATkpC,EAAS7J,EAAA5/B,KAAA,uBAAA4/B,EAAA5/B,KAAA,GAAW,KAAKigC,eAAc,QAAAL,EAAAh/B,GAAAg/B,EAAAn/B,KAAAm/B,EAAAr/B,GAAAq/B,EAAAh/B,GAAI,EAAC,QAEoB,OAF/E41C,EAAY5W,EAAAr/B,GAClB,KAAKo2C,kBAAkBH,EAAcnR,EAAO7sC,OAAS,GAC/Cq+C,EAAkC,IAAfP,EAAmBt+C,EAAAg+C,iBAAmB3Q,EAAOiR,EAAa,GAAE1W,EAAA52B,OAAA,SAC9E21B,EAAA,KAAIwX,EAAA,KAAez8C,OAAO,cAAe,CAACm9C,EAAkBnV,EAAc8U,KAAc,yBAAA5W,EAAAp/B,OAAA,GAAAm/B,EAAA,UAChG,gBAAAkC,EAAAgB,GAAA,OAAA+T,EAAA71C,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,sBAAAC,MAAA,eAAA29C,EAAAj4C,EAAAL,IAAAQ,MAED,SAAA8gC,EAA0ByK,EAAyBC,GAAuB,IAAApF,EAAA2R,EAAAH,EAAA,OAAAp4C,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,OAEQ,OADhF,KAAKy2C,qBAAqBhM,EAAiB,sCAC3C,KAAKgM,qBAAqBjM,EAAiB,sCAAqCxK,EAAAhgC,KAAA,EAC3D,KAAKy/B,YAAW,OAWsD,OAXrF4F,EAAMrF,EAAAv/B,KACZ,KAAKi2C,0BACHjM,EACApF,EACA,4CAEI2R,EAAgB,KAAKF,uBACzBtM,EACAnF,EACA,wCAEIwR,EAAqC,IAAlBG,EAAsBh/C,EAAAg+C,iBAAmB3Q,EAAO2R,EAAgB,GAAEhX,EAAAh3B,OAAA,SACpF21B,EAAA,KAAIwX,EAAA,KAAez8C,OAAO,YAAa,CAC5Cm9C,EACArM,EACAC,KACA,wBAAAzK,EAAAx/B,OAAA,GAAAu/B,EAAA,UACH,gBAAAmD,EAAAS,GAAA,OAAAoT,EAAAh2C,MAAA,KAAAxI,UAAA,EAtBA,IAsBA,CAAAY,IAAA,4BAAAC,MAAA,eAAA69C,EAAAn4C,EAAAL,IAAAQ,MAED,SAAAkhC,EAAgCsJ,GAAiB,IAAApE,EAAA,OAAA5mC,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,cAAAogC,EAAApgC,KAAA,EAC1B,KAAKy/B,YAAW,OACW,OAD1C4F,EAAMjF,EAAA3/B,KACZ,KAAKk2C,kBAAkBlN,EAAWpE,EAAO7sC,QAAO4nC,EAAAp3B,OAAA,SACzC21B,EAAA,KAAIwX,EAAA,KAAez8C,OAAO,kBAAmB,CAAC+vC,KAAW,wBAAArJ,EAAA5/B,OAAA,GAAA2/B,EAAA,UACjE,gBAAA8D,GAAA,OAAAgT,EAAAl2C,MAAA,KAAAxI,UAAA,EANA,MAMA09C,CAAA,CA5Ge,+BA+GlBt7C,EAAAA,QAAes7C,k/BC5Gf,IAAAiB,EAAAv/C,EAAA,OACA4jC,EAAAxC,EAAAphC,EAAA,QACAw/C,EAAAx/C,EAAA,OAEA6iC,EAAA7iC,EAAA,OACA86C,EAAA96C,EAAA,MAKA46C,EAAAxZ,EAAAphC,EAAA,QAEAK,EAAAL,EAAA,OACAG,EAAAH,EAAA,MAmDMy/C,EAAiB,IACjBC,EAAiB,IASjBC,EAEF,CACF,QAAS,CACPC,qBAAsB,uEAIpBC,EAAW,WAAjB,SAAAA,IAAAz+C,EAAA,KAAAy+C,GACEC,EAAAxmC,IAAA,aACAymC,EAAAzmC,IAAA,aACA0mC,EAAA1mC,IAAA,aACA2mC,EAAA3mC,IAAA,aACA4mC,EAAA5mC,IAAA,aACA6mC,EAAA7mC,IAAA,YA8LF,CAnLG,OAmLF/X,EAAAs+C,EAAA,EAAAr+C,IAAA,OAAAC,MAAA,eAAAklC,EAAAx/B,EAAAL,IAAAQ,MAjLS,SAAAC,EAAAsK,GAAA,IAAA+0B,EAAA7C,EAAA8C,EAAAC,EAAAr0B,EAAAylC,EAAA,OAAApxC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OASmC,OARzCu+B,EAAU/0B,EAAV+0B,WACA7C,EAAWlyB,EAAXkyB,YACA8C,EAAkBh1B,EAAlBg1B,mBACAC,EAAgBj1B,EAAhBi1B,iBAEAC,EAAA,KAAIkZ,EAAerZ,EAAU,KAC7BG,EAAA,KAAIiZ,EAAgBjc,EAAW,KAC/BgD,EAAA,KAAIgZ,EAAuBlZ,EAAkB,KAC7CE,EAAA,KAAI+Y,EAAqBhZ,EAAgB,KAAAv+B,EAAAF,KAAA,EACnB2+B,EAAA,KAAIiZ,EAAA,KAAavX,aAAY,OAE/C,OAFEj2B,EAAOlK,EAAAO,KACPovC,EAAkC,OAAhBpR,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAmBr0B,GAAQlK,EAAAK,GACnDm+B,EAAAx+B,EAAAU,GAAA,KAAIV,EAAAqX,GAAAsgC,EAAA33C,EAAAF,KAAA,IAAmC,EAAAyyC,EAAAsF,yBAAwB,CAC7DxZ,WAAAA,EACA7C,YAAAA,EACAtxB,QAAAA,EACAylC,gBAAAA,IACA,QACE,OADF3vC,EAAAsiB,GAAAtiB,EAAAO,MAAA,EAAAP,EAAAK,IAAAL,EAAAU,GAAAV,EAAAqX,GAAArX,EAAAsiB,GAAA,KAAAtiB,EAAAuiB,GACFic,EAAAx+B,EAAAwiB,GAAA,KAAIxiB,EAAAgzC,GAAA4E,EAAA53C,EAAAF,KAAA,IAA6B,EAAAyyC,EAAAzC,iBAAgB,CAC/CzR,WAAAA,EACA7C,YAAAA,EACAtxB,QAAAA,EACAo0B,mBAAAA,EACAqR,gBAAAA,IACA,QAAA3vC,EAAAizC,GAAAjzC,EAAAO,MAAA,EAAAP,EAAAuiB,IAAAviB,EAAAwiB,GAAAxiB,EAAAgzC,GAAAhzC,EAAAizC,GAAA,8BAAAjzC,EAAAM,OAAA,GAAAtB,EAAA,UACH,gBAAA2C,GAAA,OAAAy8B,EAAAv9B,MAAA,KAAAxI,UAAA,EAwJF,IAxJE,CAAAY,IAAA,gBAAAC,MAED,WACE,OAAOulC,EAAA,KAAIiZ,EAAA,IACb,GAAC,CAAAz+C,IAAA,iBAAAC,MAED,WACE,OAAOulC,EAAA,KAAIgZ,EAAA,IACb,GAAC,CAAAx+C,IAAA,aAAAC,MAED,WACE,OAAOulC,EAAA,KAAIkZ,EAAA,KAA2B9Y,YACxC,GAAC,CAAA5lC,IAAA,aAAAC,MAAA,eAAA8mC,EAAAphC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SACS21B,EAAA,KAAIiZ,EAAA,KAAavX,cAAY,wBAAAvgC,EAAAU,OAAA,GAAA+2B,EAAA,UACrC,yBAAA2I,EAAAn/B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,sBAAAC,MAAA,eAAA4+C,EAAAl5C,EAAAL,IAAAQ,MAEO,SAAAkgC,EAAAL,GAAA,IAAAuG,EAAAoE,EAAAwO,EAAAnxB,EAAAoxB,EAAA74C,EAAA84C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA98B,EAAAyrB,EAAAh9B,EAAAylC,EAAAiB,EAAA,OAAAryC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OAQwB,GAP9BqlC,EAAMvG,EAANuG,OACAoE,EAAS3K,EAAT2K,UAASwO,EAAAnZ,EACThY,GAAAA,OAAE,IAAAmxB,EAAGjgD,EAAAu8C,aAAY0D,EAAAC,EAAApZ,EACjBz/B,KAAAA,OAAI,IAAA64C,EAAGlgD,EAAA0gD,WAAUR,EACjBC,EAAerZ,EAAfqZ,gBAAeC,EAAAtZ,EACfuZ,aAAAA,OAAY,IAAAD,EAAGpgD,EAAAu8C,aAAY6D,EAAAE,EAAAxZ,EAC3ByZ,QAAAA,OAAO,IAAAD,EAAG,EAACA,EAAAE,EAAA1Z,EACX2Z,gBAAAA,OAAe,IAAAD,EAAGxgD,EAAAu8C,aAAYiE,IAE1B,EAAAjd,EAAA7xB,SAAgBi1B,EAAA,KAAIgZ,EAAA,KAAe,WAAU,CAAAvY,EAAAp/B,KAAA,eAAAo/B,EAAAp2B,OAAA,SACxC21B,EAAA,KAAImZ,EAAA,KAAqBp+C,OAAO,QAAS,CAC9C2rC,EACAoE,EACA3iB,EACAznB,EACAg5C,EACAE,EACAE,KACA,WAGAN,EAAe,CAAA/Y,EAAAp/B,KAAA,QACjBonC,EAAyB+Q,EAAe/Y,EAAAp/B,KAAA,uBAAAo/B,EAAAp/B,KAAA,EAElB2+B,EAAA,KAAIiZ,EAAA,KAAavX,aAAY,OACM,OADnDj2B,EAAOg1B,EAAA3+B,KACPovC,EAAwC,QAAtBl0B,EAAAgjB,EAAA,KAAI8Y,EAAA,YAAkB,IAAA97B,OAAA,EAAAA,EAAGvR,GAAQg1B,EAAAp/B,KAAA,IACnB,EAAAyyC,EAAA1B,yCAAwC,CAC5ExS,WAAYI,EAAA,KAAIiZ,EAAA,KAChBlc,YAAaiD,EAAA,KAAIgZ,EAAA,KACjBvtC,QAAAA,EACAylC,gBAAAA,IACA,QALIiB,EAAuB1R,EAAA3+B,KAM7B2mC,EAAyB0J,EAAwB/R,aAAY,eAAAK,EAAAp2B,OAAA,SAExD21B,EAAA,KAAImZ,EAAA,KAAqBp+C,OAAO,QAAS,CAC9C2rC,EACAoE,EACA3iB,EACAznB,EACA+nC,EACAiR,EACAE,EACAE,KACA,yBAAArZ,EAAA5+B,OAAA,GAAA2+B,EAAA,UACH,gBAAAr9B,GAAA,OAAAk2C,EAAAj3C,MAAA,KAAAxI,UAAA,EA/CA,IA+CA,CAAAY,IAAA,qBAAAC,MAAA,eAAAu/C,EAAA75C,EAAAL,IAAAQ,MAED,SAAAsgC,EAAAlK,GAAA,IAAAujB,EAAAC,EAAAr/C,EAAAs/C,EAAAC,EAAAC,EAAA78C,EAAA88C,EAAAhyC,EAAAmD,EAAAsxB,EAAAwd,EAAAC,EAAA/8C,EAAAg9C,EAAA,OAAA36C,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,OAO0D,OANxD44C,EAAiBvjB,EAAjBujB,kBACAC,EAAoBxjB,EAApBwjB,sBAEA,EAAA/gD,EAAAuhD,2BAA0BT,IAC1B,EAAA9gD,EAAAwhD,8BAA6BT,GAEvBr/C,EAAOmlC,EAAA,KAAIkZ,EAAA,KAA2B9Y,aAAYS,EAAAx/B,KAAA,EAE9B,KAAKu5C,oBAAoBX,GAAkB,OAQpE,OARKE,EAAWtZ,EAAA/+B,KACXs4C,EAAYF,EAAqBE,UACjCC,GAAe,EAAA9B,EAAAl9C,UACnB2kC,EAAA,KAAIiZ,EAAA,KAAa4B,iBAAiB,CAAC,WAAY,CAACT,KAChDz9C,SAAS,OAELa,GAAO,EAAA+6C,EAAAx7C,YACX,EAAAw7C,EAAAl9C,UAAS,MAAO,EAAAk9C,EAAAx7C,YAAU,EAAAw7C,EAAAl9C,UAAS8+C,IAAcx9C,SAAS,OAAS09C,IACpExZ,EAAAx/B,KAAA,GAE+B2+B,EAAA,KAAIkZ,EAAA,KAA2BoB,oBAAmB,QAKjF,OALKA,EAAiBzZ,EAAA/+B,KAEjBwG,EAAQ03B,EAAA,KAAIiZ,EAAA,KAAa4B,iBAC7B,CAAC,WACD,CAAC7a,EAAA,KAAImZ,EAAA,KAAqB/Y,eAC3BS,EAAAx/B,KAAA,GAEqB2+B,EAAA,KAAIiZ,EAAA,KAAavX,aAAY,QAAtC,GAAPj2B,EAAOo1B,EAAA/+B,MAGT,CAAC22C,EAAgBC,GAAgBp2B,SAAS7W,GAAQ,CAAAo1B,EAAAx/B,KAAA,gBAAAw/B,EAAAx/B,KAAA,GAC1B2+B,EAAA,KAAImZ,EAAA,KAAqBzY,aAAY,QAC2B,OADpF3D,EAAW8D,EAAA/+B,KACXy4C,EAAe5B,EAAoC5b,GAAa6b,qBAAoB/X,EAAAx2B,OAAA,SACnFmuC,EAAA36C,MAAYi9C,eAAejgD,EAAM0/C,EAAc/8C,EAAM8K,IAAM,QAOyB,OAJvFkyC,GAAkB,EAAAjC,EAAAl9C,UAASiN,GAAO3L,SAAS,OAC3Cc,EAAW68C,EAAoBE,EAE/BC,EACJ,MAAO,EAAAlC,EAAA14C,mBAAiB,EAAA04C,EAAAl9C,UAASR,IAAO,EAAA09C,EAAAl9C,UAASmC,IAAO,EAAA+6C,EAAAl9C,UAASoC,IAAWd,SAAS,OAAMkkC,EAAAx2B,OAAA,SACtF21B,EAAA,KAAIiZ,EAAA,KAAa8B,sBAAsBN,IAAa,yBAAA5Z,EAAAh/B,OAAA,GAAA++B,EAAA,UAC5D,gBAAAx9B,GAAA,OAAA42C,EAAA53C,MAAA,KAAAxI,UAAA,EA3CA,IA2CA,CAAAY,IAAA,aAAAC,MAAA,eAAAugD,EAAA76C,EAAAL,IAAAQ,MAED,SAAA0gC,EAAA6J,GAAA,IAAAoP,EAAAC,EAAArlC,EAAAhS,EAAAma,EAAA2pB,EAAAwT,EAAAC,EAAAhd,EAAA6d,EAAA,OAAAn7C,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,OASG,OARD44C,EAAiBpP,EAAjBoP,kBACAC,EAAoBrP,EAApBqP,qBACArlC,EAAOg2B,EAAPh2B,QACAhS,EAAQgoC,EAARhoC,UAEA,EAAA1J,EAAAuhD,2BAA0BT,GACtBC,IACF,EAAA/gD,EAAAwhD,8BAA6BT,GAC9BjZ,EAAA5/B,KAAA,EAC2B2+B,EAAA,KAAIiZ,EAAA,KAAajS,mBAAkB,OAA5C,GAAbL,EAAa1F,EAAAn/B,KACD,CAAAm/B,EAAA5/B,KAAA,cACV,IAAI3G,MAAM,mEAAkE,cAAAumC,EAAA5/B,KAAA,GAE1D,KAAKu5C,oBAAoBX,GAAkB,QAGF,GAH7DE,EAAWlZ,EAAAn/B,KACXs4C,EAC2B,QAA/Bp9B,EAAoB,OAApBk9B,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBE,iBAAS,IAAAp9B,EAAAA,GACjB,IAAbic,KAAKC,MAAe/oB,KAAKooB,MAAsB,IAAhBpoB,KAAK+qC,WAAkBv+C,aAE9C,OAAPkY,QAAO,IAAPA,OAAO,EAAPA,EAAS6yB,QAAc,OAAP7yB,QAAO,IAAPA,OAAO,EAAPA,EAAS8yB,UAAQ,CAAA1G,EAAA5/B,KAAA,eAC7B,IAAI3G,MAAM,mEAAkE,eAAAumC,EAAA5/B,KAAA,GAE1D2+B,EAAA,KAAIkZ,EAAA,KAA2BiC,YAAY,CACnE5J,sBAAuBvR,EAAA,KAAImZ,EAAA,KAAqB/Y,aAChD+Z,YAAAA,EACAC,UAAAA,EACAvlC,QAAOzF,EAAA,CACLvU,KAAM8rC,GACH9xB,GAELhS,SAAAA,IACA,QATe,OAAXu6B,EAAW6D,EAAAn/B,KAAAm/B,EAAA5/B,KAAA,GAUgB2+B,EAAA,KAAIiZ,EAAA,KAAavH,mBAAmBtU,GAAY,QAAzD,GAAA6D,EAAAn/B,KACD,CAAAm/B,EAAA5/B,KAAA,eACf,IAAI3G,MAAM,6DAA4D,eAAAumC,EAAA5/B,KAAA,GAE3DuyC,EAAA7oC,QAAKmE,OAAO,CAC7B0wB,WAAYI,EAAA,KAAIiZ,EAAA,KAChB7b,YAAAA,EACAyC,mBAAoBG,EAAA,KAAI+Y,EAAA,KACxBjZ,iBAAkBE,EAAA,KAAI8Y,EAAA,OACtB,QALQ,OAAJmC,EAAIha,EAAAn/B,KAAAm/B,EAAA52B,OAAA,SAMH4wC,GAAI,yBAAAha,EAAAp/B,OAAA,GAAAm/B,EAAA,UACZ,gBAAAkC,GAAA,OAAA8X,EAAA54C,MAAA,KAAAxI,UAAA,EA7CA,KA6CA,EAAAY,IAAA,SAAAC,MAAA,eAAAo0C,EAAA1uC,EAAAL,IAAAQ,MA3LD,SAAA8gC,EAAAiK,GAAA,IAAAzL,EAAAwb,EAAAre,EAAAse,EAAAxb,EAAAC,EAAAwb,EAAA,OAAAx7C,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,OAM0C,OALxCu+B,EAAUyL,EAAVzL,WAAUwb,EAAA/P,EACVtO,YAAAA,OAAW,IAAAqe,EAAGvf,EAAAyY,kBAAiB8G,EAAAC,EAAAhQ,EAC/BxL,mBAAAA,OAAkB,IAAAwb,GAAQA,EAC1Bvb,EAAgBuL,EAAhBvL,iBAEMwb,EAAiB,IAAIzC,EAAaxX,EAAAhgC,KAAA,EAClCi6C,EAAepM,KAAK,CAAEtP,WAAAA,EAAY7C,YAAAA,EAAa8C,mBAAAA,EAAoBC,iBAAAA,IAAmB,cAAAuB,EAAAh3B,OAAA,SACrFixC,GAAc,wBAAAja,EAAAx/B,OAAA,GAAAu/B,EAAA,KACtB,gBAAA8C,GAAA,OAAA2K,EAAAzsC,MAAA,KAAAxI,UAAA,EAkLA,MAlLAi/C,CAAA,CAjBc,uFAsMjB78C,EAAAA,QAAe68C,wJC/Rf,IAAApa,EAAAzlC,EAAA,OAGagD,EAAAA,0BAA4B,SAAH6O,GAAsD,IAAhD67B,EAAM77B,EAAN67B,OAAQoE,EAASjgC,EAATigC,UAClD,GAAIpE,EAAO7sC,QAAU,EAAG,MAAM,IAAIa,MAAM,2CACxC,GAAIowC,GAAa,EAAG,MAAM,IAAIpwC,MAAM,gDACpC,GAAIowC,EAAYpE,EAAO7sC,OACrB,MAAM,IAAIa,MAAM,yDACpB,EAEasB,EAAAA,6BAA+B,SAAHmkC,GAAiD,IAA3Cia,EAASja,EAATia,UAC7C,GAAI3b,EAAA+P,UAAU3zC,KAAKu/C,GAAWmB,GAAG,GAC/B,MAAM,IAAI7gD,MAAM,+CACpB,2ICbasB,EAAAA,aAAY,KAAA0B,OAAQ,IAAI89C,OAAO,KAC/Bx/C,EAAAA,WAAa,KACbA,EAAAA,iBAAmB,yPCIhC,IAAA3C,EAAAL,EAAA,OAEA,SAAgBkuC,EAAWuU,EAAcC,GACvC,OAAOD,EAAKh/C,gBAAkBi/C,EAAKj/C,aACrC,CAEA,SAAgBy4C,EAAc34C,GAC5B,OAAO2qC,EAAW3qC,EAASlD,EAAAu8C,aAC7B,CANA55C,EAAAA,WAAAkrC,EAIAlrC,EAAAA,cAAAk5C,EAQAl5C,EAAAA,oBAAA,SAAoCO,GAClC,OAAO24C,EAAc34C,IALvB,SAA2BA,GACzB,OAAO2qC,EAAW3qC,EAASlD,EAAAg+C,iBAC7B,CAGmCsE,CAAkBp/C,EACrD,EAEAP,EAAAA,uBAAA,SACE4/C,GAEA,YAA+D9hD,KAAb,OAA1C8hD,QAAgB,IAAhBA,OAAgB,EAAhBA,EAA4C/hD,OACtD,EAEAmC,EAAAA,kCAAA,SACE0oC,GAEA,YAA2E5qC,IAAnE4qC,EAAoDmX,UAC9D,qIChCMC,EAAgB,WAWpB,SAAAA,EAAYC,EAAgB7vC,GAAiB9R,EAAA,KAAA0hD,GAC3C,KAAKC,OAASA,EACd,KAAKr7C,KAAOwL,CACd,CAkBC,OAhBD3R,EAAAuhD,EAAA,EAAAthD,IAAA,aAAAC,MAKA,WACE,OAAO,KAAKiG,IACd,GAEA,CAAAlG,IAAA,cAAAC,MAKA,WACE,MAAO,EACT,KAACqhD,CAAA,CAhCmB,GAmCtB9/C,EAAAA,QAAe8/C,sVChCf,IAAAvD,EAAAv/C,EAAA,OACAG,EAAAH,EAAA,OACAkmC,EAAA9E,EAAAphC,EAAA,QAYA,SAAgBgjD,EACd7W,EACAj5B,EACA62B,GAEA,IAAIkZ,EACJ,IACE,IAAMC,EAAS,CACblwC,EAAGpR,OAAOC,KAAKqR,EAAU3O,MAAM,EAAG,IAAK,OACvC0O,EAAGrR,OAAOC,KAAKqR,EAAU3O,MAAM,GAAI,KAAM,OACzCkI,EAAGvI,SAASgP,EAAU3O,MAAM,IAAK,KAAM,KAEnC4+C,GAAgB,EAAA5D,EAAA6D,WACpBxhD,OAAOC,KAAKsqC,EAAO5nC,MAAM,GAAI,OAC7B2+C,EAAOz2C,EACPy2C,EAAOlwC,EACPkwC,EAAOjwC,GAEHowC,GAAmB,EAAA9D,EAAA55C,cAAY,EAAA45C,EAAAl6C,cAAa89C,IAClDF,IAAa,EAAA9iD,EAAA+tC,YAAWmV,EAAkBtZ,GAC1C,MAAO5mC,GACP8/C,GAAY,EAEd,OAAOA,CACT,CAlCAjgD,EAAAA,8BAAA,SAA8C+mC,GAC5C,IAAM72B,EACJ,6BACA62B,EAAaxlC,MAAM,GADnB,qEAKF,OAAO,IAAI2hC,EAAAn0B,QAAiBg4B,EAAc72B,EAC5C,EAEAlQ,EAAAA,yBAAAggD,EA8EuC,SAAAM,IAWtC,OAXsCA,EAAAn8C,EAAAL,IAAAQ,MAAhC,SAAAC,EACLq/B,EACA/iC,GAAY,IAAA8pC,EAAAz6B,EAAA,OAAApM,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAEgBu+B,EAAWoH,mBAAkB,OAAtC,GAAbL,EAAaplC,EAAAO,KACD,CAAAP,EAAAF,KAAA,cACV,IAAI3G,MAAM,mEAAkE,cAAA6G,EAAAF,KAAA,EAE9Du+B,EAAW2c,YAAY1/C,GAAK,OACwB,OADtEqP,EAAS3K,EAAAO,KACboK,GAAY,EAAAlQ,EAAAwgD,oBAAmB,WAAYtwC,EAAWrP,EAAM8pC,GAAcplC,EAAA8I,OAAA,SACnE,IAAI60B,EAAAn0B,QAAiB47B,EAAez6B,IAAU,yBAAA3K,EAAAM,OAAA,GAAAtB,EAAA,MACtD6B,MAAA,KAAAxI,UAAA,CAE4C,SAAA6iD,IAY5C,OAZ4CA,EAAAt8C,EAAAL,IAAAQ,MAAtC,SAAAs4B,EACLgH,EACAmG,EACAD,GAA2B,IAAAa,EAAAz6B,EAAA,OAAApM,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAECu+B,EAAWoH,mBAAkB,OAAtC,GAAbL,EAAaxlC,EAAAW,KACD,CAAAX,EAAAE,KAAA,cACV,IAAI3G,MAAM,mEAAkE,cAAAyG,EAAAE,KAAA,EAE9Du+B,EAAWuH,cAAcpB,EAA2BD,GAAc,OAC1B,OAD1D55B,EAAS/K,EAAAW,KACboK,GAAY,EAAAlQ,EAAAwgD,oBAAmB,oBAAqBtwC,GAAU/K,EAAAkJ,OAAA,SACvD,IAAI60B,EAAAn0B,QAAiB47B,EAAez6B,IAAU,yBAAA/K,EAAAU,OAAA,GAAA+2B,EAAA,MACtDx2B,MAAA,KAAAxI,UAAA,CAxEYoC,EAAAA,mBAAsC,SACjDwqC,EACAt6B,EACAwwC,EACA/V,GAEA,IAEIgW,EAAaz/C,SAASgP,EAAU3O,OAAO,GAAI,IAC/C,IAH0B,CAAC,EAAG,EAAG,GAAI,IAGd+kB,SAASq6B,GAC9B,MAAM,IAAIjiD,MAAM,qBAEI,aAAlB8rC,IAYEmW,EAjBmC,KAkBrCA,GAlBqC,IAqBZX,EACzBU,EAFwBxwC,EAAU3O,MAAM,GAAI,GAAKo/C,EAAWhgD,SAAS,IAIrEgqC,KAGAgW,GAAc,IAUlB,MAPsB,sBAAlBnW,GAEEmW,EAhCmC,KAiCrCA,GAjCqC,IAoCzCzwC,EAAYA,EAAU3O,MAAM,GAAI,GAAKo/C,EAAWhgD,SAAS,GAE3D,EAEAX,EAAAA,kBAFC,SAEsCkH,EAAAC,GAAA,OAAAm5C,EAAAl6C,MAAA,KAAAxI,UAAA,EAavCoC,EAAAA,wBAFC,SAE4CoH,EAAA8/B,EAAAgB,GAAA,OAAAuY,EAAAr6C,MAAA,KAAAxI,UAAA,qICxGvCgjD,EAAkB,WAItB,SAAAA,EAAYl8C,GAAyBtG,EAAA,KAAAwiD,GAFrC,KAAA/X,WAAyC,IAAIriB,IAG3C,KAAK9hB,KAAOA,CACd,CAiBC,OAjBAnG,EAAAqiD,EAAA,EAAApiD,IAAA,eAAAC,MAED,SAAayR,GACX,KAAK24B,WAAWvyB,IAAIpG,EAAU6vC,OAAOt/C,cAAeyP,EACtD,GAAC,CAAA1R,IAAA,oBAAAC,MAED,WAAiB,IAAA2P,EAAA,KACTyyC,EAAUlhD,MAAMd,KAAK,KAAKgqC,WAAWiY,QAAQC,OAE/CC,GADeH,EAAQhjD,OACT,IACdojD,EAAe,GAMnB,OALAJ,EAAQ/X,SAAQ,SAAC6B,GACf,IAAMz6B,EAAY9B,EAAKy6B,WAAWp8B,IAAIk+B,GACtCqW,GAAwB,OAAT9wC,QAAS,IAATA,OAAS,EAATA,EAAWgxC,aAAqD3/C,MAAM,GACrF0/C,GAAyB,OAAT/wC,QAAS,IAATA,OAAS,EAATA,EAAWixC,aAC7B,IACO,KAAOH,EAAcC,CAC9B,KAACL,CAAA,CAvBqB,GA0BxB5gD,EAAAA,QAAe4gD,uJChCf,IAAAne,EAAAzlC,EAAA,OACA0lC,EAAA1lC,EAAA,OAEA,SAASokD,EAAqB18C,GAU5B,OAAQA,EAAKqJ,MAAM,SAAsBoM,QATzB,SAACknC,EAAqBC,GACpC,MAAqB,OAAjBA,EACKD,EAAc,EAEF,OAAjBC,EACKD,EAAc,EAEhBA,EAAc,EACvB,GACyD,EAC3D,CAEmC,SAAAE,IAgElC,OAhEkCA,EAAAp9C,EAAAL,IAAAQ,MAA5B,SAAAC,EACL0/B,EACAL,EACAzX,EACAq1B,EACA98C,EACAqjC,GAAwB,IAAA0Z,EAAArgB,EAAAsgB,EAAAC,EAAAC,EAAAC,EAAA5gD,EAAA6gD,EAAA,OAAAh+C,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAUtB,OAREo8C,EAAkB,EAChBrgB,EAAc6C,EAAaG,aAE3Bsd,EAAuBzd,EAAallC,OAAO,gBAAiB,CAChEotB,EACAq1B,EACA98C,EACAqjC,IACAxiC,EAAAH,KAAA,EAAAG,EAAAF,KAAA,EAGQu+B,EAAWke,YAAY,CAC3B31B,GAAIiV,EACJviC,KAAMuiC,EACN18B,KAAMg9C,IACN,OALEC,EAAgBp8C,EAAAO,KAMpBnF,WACF8gD,EAAkBhf,EAAA+P,UAAU3zC,KAAK,KAAO8iD,EAAiBt0C,UAAU,MAAM00C,WAAa,IAAKx8C,EAAAF,KAAA,iBAAAE,EAAAH,KAAA,GAAAG,EAAAK,GAAAL,EAAA,sBAGzFk8C,EAAkB,GAAC,CAAAl8C,EAAAF,KAAA,SACfu8C,EAAoBR,EAAqBM,GAC3CG,EAAgB,IACX5gD,EAAI,EAAC,aAAEA,EAAI,IAAE,CAAAsE,EAAAF,KAAA,gBAAAE,EAAAH,KAAA,GAAAG,EAAAF,KAAA,GAEau+B,EAAWp+B,KAAK,CAC7C2mB,GAAIiV,EACJviC,KAAMuiC,EACN18B,KAAMg9C,EACN5f,SAAU,EACV6J,SAAU8V,EAAkBG,EAAoBC,IAChD,QANoB,GAOG,OAPHt8C,EAAAO,KAOO,CAAAP,EAAAF,KAAA,gBAAAE,EAAA8I,OAAA,oBAAA9I,EAAAF,KAAA,iBAAAE,EAAAH,KAAA,GAAAG,EAAAU,GAAAV,EAAA,kBAI/Bk8C,GAAmBI,EACnBA,GAAiB,EAAC,QAdI5gD,IAAGsE,EAAAF,KAAA,wBAAAE,EAAA8I,OAAA,SAgBpBozC,EAAkBI,GAAa,eAAAt8C,EAAAH,KAAA,GAAAG,EAAAF,KAAA,GAIZu+B,EAAWke,YAAY,CAC/C31B,GAAAA,EACAttB,KAAMuiC,EACN3iC,MAAO+iD,EACP98C,KAAAA,IACA,QALe,OAAXo9C,EAAWv8C,EAAAO,KAAAP,EAAA8I,OAAA,SAMVyzC,GAAW,WAAAv8C,EAAAH,KAAA,GAAAG,EAAAqX,GAAArX,EAAA,UAEdwiC,IAAcrF,EAAAlD,cAAcwI,aAAY,CAAAziC,EAAAF,KAAA,gBAAAE,EAAA8I,OAAA,SACnC,GAAC,eAAA9I,EAAA8I,OAAA,SAEH5I,QAAQE,OAAMJ,EAAAqX,KAAO,yBAAArX,EAAAM,OAAA,GAAAtB,EAAA,oCAE/B6B,MAAA,KAAAxI,UAAA,CAhEDoC,EAAAA,cAFC,SAEkCkH,EAAAC,EAAAC,EAAA8/B,EAAAgB,EAAAK,GAAA,OAAAgZ,EAAAn7C,MAAA,KAAAxI,UAAA,mPChBnC,IAAAR,EAAAJ,EAAA,OACAglD,EAAAhlD,EAAA,OACA0lC,EAAA1lC,EAAA,OAQA2lC,EAAA3lC,EAAA,OACAK,EAAAL,EAAA,OACAilD,EAAAjlD,EAAA,MAYoD,SAAAklD,IA4CnD,OA5CmDA,EAAA/9C,EAAAL,IAAAQ,MAA7C,SAAAC,EACL0/B,EACAL,EACAue,GAA8B,IAAAnhC,EAAAohC,EAAA18B,EAAA28B,EAAAC,EAAA1gB,EAAAb,EAAA,OAAAj9B,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAUqB,GAVrBE,EAAAK,GAGxBu8C,EAAGh2B,GAAE5mB,EAAAU,GACFk8C,EAAG1jD,MAAK8G,EAAAqX,GACTulC,EAAGz9C,KAAIa,EAAAsiB,GACU,QAAZ7G,EAAAmhC,EAAGpa,iBAAS,IAAA/mB,EAAAA,EAAI0hB,EAAAlD,cAAc+iB,KAAIh9C,EAAAuiB,GAC1B,QAAVs6B,EAAAD,EAAGtgB,eAAO,IAAAugB,EAAAA,EAAI,EAAC78C,EAAAwiB,GACH,QAAXrC,EAAAy8B,EAAGrgB,gBAAQ,IAAApc,EAAAA,EAAI,EAACngB,EAAAgzC,GAChB4J,EAAGtR,UAAYxzC,EAAAu8C,aAAYr0C,EAAAizC,GACrB2J,EAAGrR,gBAAkBzzC,EAAAu8C,aACtB,QAARyI,EAAAF,EAAGxkD,aAAK,IAAA0kD,EAAA,CAAA98C,EAAAF,KAAA,SAAAE,EAAAkzC,GAAA4J,EAAA98C,EAAAF,KAAA,wBAAAE,EAAAF,KAAA,GAAW4+B,EAAaiB,WAAU,QAAA3/B,EAAAkzC,GAAAlzC,EAAAO,KAAA,QAA5C,GAA4CP,EAAAmzC,GAAAnzC,EAAAkzC,GAT7C6J,EAAe,CACnBn2B,GAAE5mB,EAAAK,GACFnH,MAAK8G,EAAAU,GACLvB,KAAIa,EAAAqX,GACJmrB,UAASxiC,EAAAsiB,GACTga,QAAOt8B,EAAAuiB,GACPga,SAAQv8B,EAAAwiB,GACR8oB,SAAQtrC,EAAAgzC,GACRzH,eAAcvrC,EAAAizC,GACd76C,MAAK4H,EAAAmzC,IAIqB,qBAAjByJ,EAAGvgB,UAAyB,CAAAr8B,EAAAF,KAAA,gBAAAE,EAAA8I,OAAA,SAAA+E,EAAAA,EAAA,GAEhCkvC,GAAe,IAClB1gB,UAAWugB,EAAGvgB,aAAS,eAAAr8B,EAAAF,KAAA,GAGD4+B,EAAaS,aAAY,QAAlC,GAAX3D,EAAWx7B,EAAAO,OAEf,EAAA68B,EAAAyI,gBAAezI,EAAAZ,cAAcI,qBAAsBpB,IACtB,IAA7BuhB,EAAgBxgB,SAAc,CAAAv8B,EAAAF,KAAA,SAE9Bu8B,EAAY,EAACr8B,EAAAF,KAAA,wBAAAE,EAAAF,KAAA,IAEK,EAAA48C,EAAAO,eAChBve,EACAL,EACA0e,EAAgBn2B,GAChBm2B,EAAgB7jD,MAChB6jD,EAAgB59C,KAChB49C,EAAgBva,WACjB,QAPDnG,EAASr8B,EAAAO,KAAA,eAAAP,EAAA8I,OAAA,SAAA+E,EAAAA,EAAA,GAUNkvC,GAAe,IAClB1gB,UAAAA,KAAS,yBAAAr8B,EAAAM,OAAA,GAAAtB,EAAA,MAEZ6B,MAAA,KAAAxI,UAAA,CAtDDoC,EAAAA,+BAAA,SACEmiD,SAMA,OAJqB/uC,EAAAA,EAAA,GAChB+uC,GAAE,IACLpa,UAAuB,QAAZ/mB,EAAAmhC,EAAGpa,iBAAS,IAAA/mB,EAAAA,EAAI0hB,EAAAlD,cAAc+iB,MAG7C,EAEAviD,EAAAA,+BAFC,SAEmDkH,EAAAC,EAAAC,GAAA,OAAA86C,EAAA97C,MAAA,KAAAxI,UAAA,EAuDpDoC,EAAAA,oBAAA,SAAoCyiD,GAClC,MAAO,KAAOA,EAAIv3C,KAAI,SAACi3C,GAAE,OAV3B,SAA+BA,GAC7B,IAAMz9C,GAAO,EAAAtH,EAAAslD,UAASP,EAAGz9C,MAKzB,OAJgB,EAAAs9C,EAAAW,MACd,CAAC,QAAS,UAAW,UAAW,UAAW,SAC3C,CAACR,EAAGpa,UAAWoa,EAAGh2B,GAAIg2B,EAAG1jD,MAAOiG,EAAK7G,OAAQ6G,IAEhCnD,MAAM,EACvB,CAGgCqhD,CAAsBT,EAAG,IAAEU,KAAK,GAChE,sCCjFa,IAAA9iD,EAAA/C,EAAAA,OAAAA,QAAA8lD,EAAA9lD,EAAAA,OAAAA,QAAAoW,EAAApW,EAAAA,OAAAA,QAAA8G,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QACb6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ+iD,UAAY/iD,EAAQgjD,eAAY,EACxC,IAAMC,EAAWjmD,EAAQ,OACnBkmD,EAAclmD,EAAQ,OACtBG,EAAUH,EAAQ,OAwSxB,SACemmD,EAAc1U,EAAAC,GAAA,OAAA0U,EAAAh9C,MAAC,KAADxI,UAAA,UAAAwlD,IAW5B,OAX4BA,EAAAj/C,EAAAL,IAAAQ,MAA7B,SAAA8oC,EAA8BiW,EAAYC,GAAS,IAAAC,EAAAC,EAAAC,EAAA,OAAA3/C,IAAAoB,MAAA,SAAAooC,GAAA,cAAAA,EAAAloC,KAAAkoC,EAAAjoC,MAAA,UAC1Ci+C,EAAUxhB,UAAawhB,EAAUG,aAAY,CAAAnW,EAAAjoC,KAAA,eAAAioC,EAAAjoC,KAAA,EACtBg+C,EAAWK,aAAY,OAAzCH,EAASjW,EAAAxnC,KAET09C,EAAUD,EAAUI,mBAAqBJ,EAAUzhB,SAGnD2hB,EAAeD,EAAQnpC,IAAI,GAAGM,IAAI,GAAGvS,IAAIm7C,EAAUK,sBACzDN,EAAUG,aAAeA,EACzBH,EAAUM,qBAAuBL,EAAUK,qBAAqB,wBAAAtW,EAAAznC,OAAA,GAAAunC,EAAA,MAEvEhnC,MAAA,KAAAxI,UAAA,CA5DDoC,EAAQgjD,UAvPR,SAAmBa,GACf,gBAAAC,GAAA7/C,EAAA8/C,EAAAD,GAAA,IAAAv9C,EAAArC,EAAA6/C,GAAA,SAAAA,IAAA,OAAA3lD,EAAA,KAAA2lD,GAAAx9C,EAAAH,MAAA,KAAAxI,UAAA,CAmPK,OAnPLW,EAAAwlD,EAAA,EAAAvlD,IAAA,cAAAC,MACI,WACI,MAAM,IAAIC,MAAM,4CACpB,GAAC,CAAAF,IAAA,cAAAC,MACD,WACI,MAAM,IAAIC,MAAM,4CACpB,GAAC,CAAAF,IAAA,YAAAC,MACD,WACI,MAAM,IAAIC,MAAM,4CACpB,GAAC,CAAAF,IAAA,kBAAAC,MAAA,eAAAulD,EAAA7/C,EAAAL,IAAAQ,MACD,SAAAC,IAAA,IAAAhE,EAAA,OAAAuD,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAC0BhH,KAAK4lD,cAAcC,yBAAwB,OAApD,OAAP3jD,EAAOgF,EAAAO,KAAAP,EAAA8I,OAAA,SACN60C,EAAYiB,eAAeC,QAAQ7jD,EAASlC,KAAKgmD,cAAY,wBAAA9+C,EAAAM,OAAA,GAAAtB,EAAA,UACvE,yBAAAy/C,EAAA59C,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,uBAAAC,MAAA,eAAA6lD,EAAAngD,EAAAL,IAAAQ,MACD,SAAAs4B,IAAA,IAAA2nB,EAAA,OAAAzgD,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC4BhH,KAAK4lD,cAAcO,4BAA2B,OAAvD,OAATD,EAASp/C,EAAAW,KAAAX,EAAAkJ,OAAA,SACR,CACHo2C,MAAOvB,EAAYwB,iBAAiBN,QAAQG,EAAUI,QAAStmD,KAAKgmD,eACvE,wBAAAl/C,EAAAU,OAAA,GAAA+2B,EAAA,UACJ,yBAAA0nB,EAAAl+C,MAAA,KAAAxI,UAAA,EANA,IAMA,CAAAY,IAAA,eAAAC,MAAA,eAAAmmD,EAAAzgD,EAAAL,IAAAQ,MACD,SAAAkgC,EAAmBqgB,EAAOC,GAAQ,IAAAC,EAAA,OAAAjhD,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OAC6C,GAAjE,OAAVw/C,QAA4B,IAAVA,IAA4BA,EAAQ1nD,EAAQ6nD,eAC1D,EAAI7nD,EAAQ8nD,OAAOJ,GAAQ,CAAFpgB,EAAAp/B,KAAA,SACM,OADNo/B,EAAA7+B,GACZvH,KAAK6mD,cAAazgB,EAAAp/B,KAAA,EAAkBhH,KAAK+lC,aAAY,OAAU,OAAVK,EAAAx+B,GAAAw+B,EAAA3+B,KAAA2+B,EAAA7nB,GAAEkoC,EAAQrgB,EAAAp/B,KAAA,EAAAo/B,EAAA7+B,GAA5CkgC,WAAUtgC,KAAAi/B,EAAA7+B,GAAA6+B,EAAAx+B,GAAAw+B,EAAA7nB,IAAA,OAIN,eAAA6nB,EAAAp2B,OAAC,SAADo2B,EAAA3+B,MAJM,QAIhB,OADpBi/C,EAAgB7B,EAAYiC,sBAAsBf,QAAQS,EAAOxmD,KAAK6mD,eAAczgB,EAAA5c,GAC7Ek9B,EAAatgB,EAAAp/B,KAAA,GAAiBhH,KAAK+lC,aAAY,eAAAK,EAAA3c,GAAA2c,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,GAAAo/B,EAAA5c,GAAjCu9B,UAAS5/C,KAAAi/B,EAAA5c,GAAA4c,EAAA3c,IAAA,yBAAA2c,EAAA5+B,OAAA,GAAA2+B,EAAA,UAE3C,gBAAAt9B,EAAAC,GAAA,OAAAy9C,EAAAx+C,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,iBAAAC,MAAA,eAAA4mD,EAAAlhD,EAAAL,IAAAQ,MACD,SAAAsgC,EAAqBigB,GAAK,IAAAS,EAAA,OAAAxhD,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,UAClBw/C,GAAS1nD,EAAQ6nD,YAAW,CAAAngB,EAAAx/B,KAAA,eAAAw/B,EAAAx2B,OAAA,SACrBlR,EAAQ6nD,aAAW,cAAAngB,EAAAx/B,KAAA,EAGChH,KAAKknD,uBAAsB,OAAO,OAAvDD,EAAWzgB,EAAA/+B,KAAuC2+C,MAAK5f,EAAAx/B,KAAA,EAChDigD,EAAYE,eAAeX,GAAM,cAAAhgB,EAAAx2B,OAAA,SAAAw2B,EAAA/+B,MAAA,yBAAA++B,EAAAh/B,OAAA,GAAA++B,EAAA,UAErD,gBAAAx9B,GAAA,OAAAi+C,EAAAj/C,MAAA,KAAAxI,UAAA,EATA,IASA,CAAAY,IAAA,eAAAC,MAAA,eAAAgnD,EAAAthD,EAAAL,IAAAQ,MACD,SAAA0gC,EAAmB6f,EAAOlzC,EAAQ2xC,GAAS,IAAAoC,EAAAX,EAAA,OAAAjhD,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,YACnC,EAAIlI,EAAQ8nD,OAAOJ,GAAQ,CAAF5f,EAAA5/B,KAAA,cACnB,IAAI3G,MAAM,+EAA8E,OAGV,GADpFgnD,EAA8B,OAAdpC,QAAoC,IAAdA,OAAuB,EAASA,EAAUoC,cAC9EX,EAAgB7B,EAAYiC,sBAAsBf,QAAQS,EAAOxmD,KAAKgmD,aACvD,MAAjBqB,EAAqB,CAAAzgB,EAAA5/B,KAAA,gBAAA4/B,EAAA5/B,KAAA,EACEhH,KAAK4lD,cAAcO,4BAA2B,OAArEkB,EAAazgB,EAAAn/B,KAA0D6+C,QAAO1f,EAAA5/B,KAAA,wBAGvEi+C,EAAUoC,cAAc,eAAAzgB,EAAA5/B,KAAA,GAEtB0/C,EAAcY,QAAQD,EAAe/zC,EAAQ2xC,GAAU,eAAAre,EAAA52B,OAAA,SAAA42B,EAAAn/B,MAAA,yBAAAm/B,EAAAp/B,OAAA,GAAAm/B,EAAA,UACvE,gBAAAkC,EAAAgB,EAAAK,GAAA,OAAAkd,EAAAr/C,MAAA,KAAAxI,UAAA,EAdA,IAcA,CAAAY,IAAA,cAAAC,MAAA,eAAAmnD,EAAAzhD,EAAAL,IAAAQ,MACD,SAAA8gC,EAAkBx3B,GAAM,IAAAoT,EAAAohC,EAAAyD,EAAAC,EAAA,OAAAhiD,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,cAAAggC,EAAAhgC,KAAA,EAEShH,KAAK0nD,kBAAiB,OACe,GAD5DF,EAAcxgB,EAAAv/B,KACdggD,EAAU1yC,EAAAA,EAAA,IAAQ,EAAIjW,EAAQ6oD,qBAAwBp4C,GAC7B,QAA9BoT,EAAK8kC,EAAWhkB,gBAA6B,IAAP9gB,EAAa,CAAAqkB,EAAAhgC,KAAA,QAAKggC,EAAAhgC,KAAA,uBAAAggC,EAAAhgC,KAAA,GAAgChH,KAAK6mD,cAAce,cAAa,QAA5DH,EAAWhkB,SAAQuD,EAAAv/B,KAAA,QAEvD,OADe,QAAvCs8C,EAAK0D,EAAWI,yBAAsC,IAAP9D,IAAsB0D,EAAWI,kBAAoB/oD,EAAQgpD,yCAAyC9gB,EAAAz/B,GAC/Iq9C,EAASzQ,UAASnN,EAAAhgC,KAAA,GAAYwgD,EAAeO,sBAAsBN,EAAWhkB,SAAUgkB,EAAWna,SAAUma,EAAWI,mBAAkB,eAAA7gB,EAAAp/B,GAAAo/B,EAAAv/B,KAAAu/B,EAAAh3B,OAAA,SAAAg3B,EAAAz/B,GAAvH/G,KAAI2G,KAAA6/B,EAAAz/B,GAAAy/B,EAAAp/B,KAAA,yBAAAo/B,EAAAx/B,OAAA,GAAAu/B,EAAA,UACjC,gBAAA4D,GAAA,OAAA4c,EAAAx/C,MAAA,KAAAxI,UAAA,EARA,IAQA,CAAAY,IAAA,UAAAC,MAAA,eAAA4nD,EAAAliD,EAAAL,IAAAQ,MACD,SAAAkhC,EAAciF,GAAW,IAAAzpB,EAAAslC,EAAAC,EAAAC,EAAA,OAAA1iD,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,cAAAogC,EAAApgC,KAAA,EAEGhH,KAAKooD,aAAahc,GAAY,OAAvC,GAAT6b,EAAS7gB,EAAA3/B,KACX2kC,EAAYoa,OAAS1nD,EAAQ6nD,YAAW,CAAAvf,EAAApgC,KAAA,eAAAogC,EAAAp3B,OAAA,SACjChQ,KAAKqoD,eAAeJ,IAAU,cAAA7gB,EAAApgC,KAAA,EAGPhH,KAAKknD,uBAAsB,OAApC,GAAfgB,EAAe9gB,EAAA3/B,MACjB2kC,EAAYkc,aAAc,CAAFlhB,EAAApgC,KAAA,gBAAAogC,EAAApgC,KAAA,GACAhH,KAAKsoD,aAAalc,EAAYoa,MAAOpa,EAAY94B,OAAMyB,EAAA,CAC3EsyC,cAAoD,QAApC1kC,EAAKypB,EAAYib,qBAAkC,IAAP1kC,EAAgBA,EAAKulC,EAAgB9B,MAAMlkD,SACpGkqC,EAAYmc,mBACjB,QAHa,OAATJ,EAAS/gB,EAAA3/B,KAAA2/B,EAAApgC,KAAG,GAIZmhD,EAAUK,OAAM,QAEK,OAFLphB,EAAA7/B,GAEbvH,KAAK4lD,cAAaxe,EAAApgC,KAAA,GAA6BhH,KAAKgmD,YAAYyC,gBAAgBR,GAAU,eAAA7gB,EAAAx/B,GAAAw/B,EAAA3/B,KAAA2/B,EAAApgC,KAAA,GAAAogC,EAAA7/B,GAAvEmhD,sBAAqBvhD,KAAAigC,EAAA7/B,GAAA6/B,EAAAx/B,IAAA,eAAAw/B,EAAAp3B,OAAC,SAADo3B,EAAA3/B,MAAA,yBAAA2/B,EAAA5/B,OAAA,GAAA2/B,EAAA,UAE5D,gBAAA8D,GAAA,OAAA+c,EAAAjgD,MAAA,KAAAxI,UAAA,EAlBA,IAkBA,CAAAY,IAAA,qBAAAC,MAAA,eAAAuoD,EAAA7iD,EAAAL,IAAAQ,MACD,SAAAshC,EAAyB6E,GAAW,IAAA6b,EAAA,OAAAxiD,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,cAAAwgC,EAAAxgC,KAAA,EACRhH,KAAKooD,aAAahc,GAAY,OAAvC,GAAT6b,EAASzgB,EAAA//B,KACX2kC,EAAYoa,OAAS1nD,EAAQ6nD,YAAW,CAAAnf,EAAAxgC,KAAA,eAAAwgC,EAAAxgC,KAAA,EAC3BhH,KAAK4oD,0BAA0BX,GAAU,OAGA,eAAAzgB,EAAAx3B,OAAA,SAAAw3B,EAAA//B,MAHA,cAAA+/B,EAAAxgC,KAAA,GAGzChH,KAAK6mD,cAAcpD,YAAYwE,GAAU,yBAAAzgB,EAAAhgC,OAAA,GAAA+/B,EAAA,UAE7D,gBAAA+D,GAAA,OAAAqd,EAAA5gD,MAAA,KAAAxI,UAAA,EATA,IASA,CAAAY,IAAA,eAAAC,MAAA,eAAAyoD,EAAA/iD,EAAAL,IAAAQ,MACD,SAAA2hC,EAAmBwE,GAAW,IAAAzpB,EAAAohC,EAAA18B,EAAA28B,EAAA8E,EAAAlmC,EAAAmmC,EAAAb,EAAApE,EAAAh2B,EAAA04B,EAAAlzC,EAAA01C,EAAA/D,EAAAgE,EAAAzB,EAAA0B,EAAAC,EAAA7gD,EAAA,OAAA7C,IAAAoB,MAAA,SAAAghC,GAAA,cAAAA,EAAA9gC,KAAA8gC,EAAA7gC,MAAA,cAAA6gC,EAAA7gC,KAAA,EAEIhH,KAAKknD,uBAAsB,OAI5B,GAJvBgB,EAAergB,EAAApgC,KACjB2kC,EAAYib,eACZa,EAAgB9B,MAAMgD,OAAOhd,EAAYib,eAElCvD,EAAEt3C,OAAAwyB,OAAA,IAAAylB,EAAKrY,GAAAA,IACD,QAAhBzpB,EAAKmhC,EAAGh2B,UAAuB,IAAPnL,EAAa,CAAAklB,EAAA7gC,KAAA,QAAK6gC,EAAA7gC,KAAA,uBAAA6gC,EAAA7gC,KAAA,GAAkBhH,KAAK+lC,aAAY,QAA/B+d,EAAGh2B,GAAE+Z,EAAApgC,KAAA,QAGkF,GAF5G,QAAzBs8C,EAAKD,EAAGkF,mBAAgC,IAAPjF,IAAsBD,EAAGkF,YAAcpE,EAASzQ,UAAU3zC,KAAK,IACzE,QAAvB6mB,EAAKy8B,EAAGmB,iBAA8B,IAAP59B,IAAsBy8B,EAAGmB,UAAY,CAAC,GACtC,QAA/BjB,EAAKF,EAAG+D,yBAAsC,IAAP7D,IAAsBF,EAAG+D,kBAAoB/oD,EAAQgpD,yCACpE,QAAxBgB,EAAKhF,EAAGuF,kBAA+B,IAAPP,EAAa,CAAAjhB,EAAA7gC,KAAA,SAAK6gC,EAAA7gC,KAAA,iBAA2I,OAA3I6gC,EAAAtgC,GAA8BzI,EAAQwqD,kCAAiCzhB,EAAAjgC,GAAE5H,KAAK6mD,cAAahf,EAAAtpB,GAAEve,KAAK4lD,cAAa/d,EAAAre,GAAEs6B,EAAG0C,MAAK3e,EAAApe,GAAEq6B,EAAGxwC,OAAMu0B,EAAAne,GAAEo6B,EAAGh2B,GAAE+Z,EAAA7gC,KAAA,GAAQhH,KAAK+lC,aAAY,QAAsB,OAAtB8B,EAAAqS,GAAArS,EAAApgC,KAAAogC,EAAAsS,GAAE2J,EAAG+D,kBAAiBhgB,EAAA7gC,KAAA,MAAA6gC,EAAAtgC,IAAAsgC,EAAAjgC,GAAAigC,EAAAtpB,GAAAspB,EAAAre,GAAAqe,EAAApe,GAAAoe,EAAAne,GAAAme,EAAAqS,GAAArS,EAAAsS,IAAA,QAAtL2J,EAAGuF,WAAUxhB,EAAApgC,KAAA,QACnB,OAAzCqmB,EAA8Cg2B,EAA9Ch2B,GAAI04B,EAA0C1C,EAA1C0C,MAAOlzC,EAAmCwwC,EAAnCxwC,OAAQ01C,EAA2BlF,EAA3BkF,YAAa/D,EAAcnB,EAAdmB,UAASpd,EAAA7gC,KAAA,GAC3C89C,EAAe9kD,KAAK6mD,cAAe5B,GAAU,QACuB,OAApEgE,EAAwBhE,EAAUG,cAAgBH,EAAUxhB,SAAQoE,EAAA7gC,KAAA,GAC7ChH,KAAK0nD,kBAAiB,QACd,OAD/BF,EAAc3f,EAAApgC,KAAAogC,EAAAuS,GACGoN,EAAc3f,EAAA7gC,KAAA,GAA6BiiD,EAAqB,QAAqC,OAArCphB,EAAAwS,GAAAxS,EAAApgC,KAAAogC,EAAAyS,IAAEwJ,EAAGuF,WAAUxhB,EAAA0S,IAAEuJ,EAAG+D,kBAAiBhgB,EAAA7gC,KAAA,GAAA6gC,EAAAuS,GAAtF2N,sBAAqB5gD,KAAA0gC,EAAAuS,GAAAvS,EAAAwS,GAAAxS,EAAAyS,IAAAzS,EAAA0S,KAAA,QAA7C,GAAR2O,EAAQrhB,EAAApgC,KACV++C,GAAS1nD,EAAQ6nD,YAAW,CAAA9e,EAAA7gC,KAAA,SACsF,OAAvF,QAA1B4b,EAAKqiC,EAAU7kD,aAA0B,IAAPwiB,IAAsBqiC,EAAU7kD,MAAQ8oD,EAASn/C,IAAIi/C,GAAaj/C,IAAIuJ,IAASu0B,EAAA73B,OAAA,SAAA+E,EAAA,CAE9Gw0C,gBAAiBz7B,EACjB07B,SAAU,KACVC,QAASn2C,EAGT+1C,WAAYvF,EAAGuF,YACZvF,IAAE,QAW6F,OAPhGx7C,EAAO,CACTwlB,EACA04B,EACAlzC,EACAwwC,EAAGuF,WACHvF,EAAG+D,mBAEoB,QAA1BkB,EAAK9D,EAAU7kD,aAA0B,IAAP2oD,IAAsB9D,EAAU7kD,MAAQ8oD,EAASn/C,IAAIi/C,IAAcnhB,EAAA7gC,KAAA,IAChG,EAAIlI,EAAQ4qD,eAAeR,EAAUjE,EAAU7kD,OAAM,eAAAynC,EAAA7gC,KAAA,IAI9CmiD,EAAAjB,EAAgB9B,MAAMuD,qBAAoBC,QAAO7hD,MAAAohD,EAAI7gD,EAAIjF,OAAA,CAAE4hD,KAAU,eAAApd,EAAA73B,OAAA,SAAA63B,EAAApgC,MAAA,yBAAAogC,EAAArgC,OAAA,GAAAogC,EAAA,UAEzF,gBAAAmE,GAAA,OAAA8c,EAAA9gD,MAAA,KAAAxI,UAAA,EA7CA,IA6CA,CAAAY,IAAA,oBAAAC,MAAA,eAAAypD,EAAA/jD,EAAAL,IAAAQ,MACD,SAAA+hC,EAAwB8hB,GAAc,IAAAhgD,EAAAtH,EAAAunD,EAAAC,EAAAC,EAAA1qD,UAAA,OAAAkG,IAAAoB,MAAA,SAAAohC,GAAA,cAAAA,EAAAlhC,KAAAkhC,EAAAjhC,MAAA,OACwB,OADtB8C,EAAKmgD,EAAAzqD,OAAA,QAAAC,IAAAwqD,EAAA,GAAAA,EAAA,GAAG,EACtCznD,EAAOoiD,EAASsF,OAAO1mD,MAAM2mD,QAAQL,GAAe7hB,EAAAjhC,KAAA,EACpChH,KAAK4lD,cAAcwE,sBAAsB5nD,GAAK,OAEyB,OAFvFunD,EAAO9hB,EAAAxgC,KACPuiD,EAAMD,EAAQM,KAAKC,QAAO,SAACN,GAAG,OAAKA,EAAI9nD,SAAWpD,EAAQyrD,sBAC5DP,EAAIQ,OAAO,IAAM5F,EAASsF,OAAO1mD,MAAMuN,GAAG,uCAAuC,IAAEjH,GAAMm+B,EAAAj4B,OAAA,SACtF,CACHg6C,IAAAA,EACAS,YAAaV,EAAQW,iBACxB,wBAAAziB,EAAAzgC,OAAA,GAAAwgC,EAAA,UACJ,gBAAAgE,GAAA,OAAA6d,EAAA9hD,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,0BAAAC,MAAA,eAAAuqD,EAAA7kD,EAAAL,IAAAQ,MACD,SAAAmiC,EAA8B0hB,GAAc,IAAAhgD,EAAAtH,EAAAunD,EAAAv2B,EAAAo3B,EAAAC,EAAAC,EAAAC,EAAAxrD,UAAA,OAAAkG,IAAAoB,MAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,OACkB,OADhB8C,EAAKihD,EAAAvrD,OAAA,QAAAC,IAAAsrD,EAAA,GAAAA,EAAA,GAAG,EAC5CvoD,EAAOoiD,EAASsF,OAAO1mD,MAAM2mD,QAAQL,GAAexhB,EAAAthC,KAAA,EACpChH,KAAK4lD,cAAcwE,sBAAsB5nD,GAAK,OAEpC,OAF1BunD,EAAOzhB,EAAA7gC,KACP+rB,EAAWlyB,MAAMd,KAAKupD,EAAQiB,WAAWv+C,WAAW69C,QAAO,SAAA95C,GAAA,IAAAs1B,EAAApkC,EAAA8O,EAAA,GAAGs1B,EAAA,GAAK,OAAAA,EAAA,GAAUmlB,QAAUnsD,EAAQyrD,oBAAoB,IAACK,EAAAlpD,EACtF8xB,EAAS1pB,GAAM,GAA5C+gD,EAAcD,EAAA,GAAEE,EAASF,EAAA,GAAAtiB,EAAAt4B,OAAA,SACzB,CACH66C,eAAAA,EACAC,UAAAA,IACH,wBAAAxiB,EAAA9gC,OAAA,GAAA4gC,EAAA,UACJ,gBAAA6E,GAAA,OAAA0d,EAAA5iD,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,2BAAAC,MAAA,eAAA8qD,EAAAplD,EAAAL,IAAAQ,MACD,SAAAwiC,EAA+BqhB,GAAc,IAAAhgD,EAAAqhD,EAAAnB,EAAAS,EAAAW,EAAAP,EAAAI,EAAAI,EAAA14C,EAAA24C,EAAA/rD,UAAA,OAAAkG,IAAAoB,MAAA,SAAA8hC,GAAA,cAAAA,EAAA5hC,KAAA4hC,EAAA3hC,MAAA,OAAW,OAAT8C,EAAKwhD,EAAA9rD,OAAA,QAAAC,IAAA6rD,EAAA,GAAAA,EAAA,GAAG,EAAC3iB,EAAA3hC,KAAA,EACjBhH,KAAKurD,kBAAkBzB,EAAgBhgD,GAAM,OAAxD,OAAwDqhD,EAAAxiB,EAAAlhC,KAAxEuiD,EAAGmB,EAAHnB,IAAKS,EAAWU,EAAXV,YAAW9hB,EAAA3hC,KAAA,EACShH,KAAKwrD,wBAAwB1B,EAAgBhgD,GAAM,OAChB,OADgBshD,EAAAziB,EAAAlhC,KAA5EojD,EAAcO,EAAdP,eACFI,EAASrG,EAASsF,OAAO1mD,MAAMioD,aAAazB,EAAIQ,OAAO,GAAI,IAAG7hB,EAAA3hC,KAAA,GAChDhH,KAAK4lD,cAAc8F,YAAY5B,EAAgBe,GAAe,QACE,OAD9EQ,EAAK1iB,EAAAlhC,KACLkL,EAAUiyC,EAASsF,OAAO1mD,MAAMmoD,gBAAgBvqD,OAAO,CAAC,SAAU4oD,EAAI3jD,MAAM,GAAEsiC,EAAA34B,OAAA,SAC7E,CACH47C,cAAe5B,EAAI4B,cACnBC,eAAgBR,EAAMt6C,GACtB+6C,kBAAmBrB,EACnB93C,QAAAA,EACAs4C,OAAAA,EACAI,MAAOA,EAAMA,QAChB,yBAAA1iB,EAAAnhC,OAAA,GAAAihC,EAAA,UACJ,gBAAA+E,GAAA,OAAA0d,EAAAnjD,MAAA,KAAAxI,UAAA,EAfA,IAeA,CAAAY,IAAA,qBAAAC,MAAA,eAAA2rD,EAAAjmD,EAAAL,IAAAQ,MACD,SAAA8iC,EAAyB+gB,GAAc,IAAAhgD,EAAAm7C,EAAA+G,EAAAJ,EAAAC,EAAAC,EAAAn5C,EAAAs4C,EAAAI,EAAA9B,EAAA0C,EAAAC,EAAAC,EAAAC,EAAA7sD,UAAA,OAAAkG,IAAAoB,MAAA,SAAAyiC,GAAA,cAAAA,EAAAviC,KAAAuiC,EAAAtiC,MAAA,OAAsB,OAApB8C,EAAKsiD,EAAA5sD,OAAA,QAAAC,IAAA2sD,EAAA,GAAAA,EAAA,GAAG,EAAGnH,EAASmH,EAAA5sD,OAAA,EAAA4sD,EAAA,QAAA3sD,EAAA6pC,EAAAtiC,KAAA,EACkChH,KAAKqsD,yBAAyBvC,EAAgBhgD,GAAM,OAA/D,GAA+DkiD,EAAA1iB,EAAA7hC,KAAvImkD,EAAaI,EAAbJ,cAAeC,EAAcG,EAAdH,eAAgBC,EAAiBE,EAAjBF,kBAAmBn5C,EAAOq5C,EAAPr5C,QAASs4C,EAAMe,EAANf,OAAQI,EAAKW,EAALX,QACvE,EAAIvsD,EAAQ8nD,OAAOqE,GAAS,CAAF3hB,EAAAtiC,KAAA,gBAAAsiC,EAAAtiC,KAAA,GACIhH,KAAK4lD,cAAcC,yBAAwB,QACW,OAD9E0D,EAAejgB,EAAA7hC,KACfwkD,EAASpH,EAAYiB,eAAeC,QAAQwD,EAAiBvpD,KAAKgmD,aAAY1c,EAAAtiC,KAAA,GACvEilD,EAAOK,sBAAsBV,EAAeC,EAAgBC,EAAmBn5C,EAAS04C,EAAqB,OAAdpG,QAAoC,IAAdA,EAAuBA,EAAY,CAAC,GAAE,QAIL,eAAA3b,EAAAt5B,OAAA,SAAAs5B,EAAA7hC,MAJK,QAG/H,OADvCykD,EAAWrH,EAAY0H,iBAAiBxG,QAAQkF,EAAQjrD,KAAK4lD,eAActc,EAAA/hC,GAChEs9C,EAAYwB,iBAAgB/c,EAAAtiC,KAAA,GAAeklD,EAASC,WAAU,QAA1B,OAA0B7iB,EAAA1hC,GAAA0hC,EAAA7hC,KAAA6hC,EAAA/qB,GAAEve,KAAKgmD,YAAhFmG,EAAQ7iB,EAAA/hC,GAAgCw+C,QAAO5+C,KAAAmiC,EAAA/hC,GAAA+hC,EAAA1hC,GAAA0hC,EAAA/qB,IAAA+qB,EAAAtiC,KAAA,GACxCmlD,EAASK,mBAAmBZ,EAAeC,EAAgBC,EAAmBn5C,EAAS04C,EAAqB,OAAdpG,QAAoC,IAAdA,EAAuBA,EAAY,CAAC,GAAE,yBAAA3b,EAAA9hC,OAAA,GAAAuhC,EAAA,UAC1K,gBAAA0E,GAAA,OAAAse,EAAAhkD,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,wBAAAC,MAAA,eAAAqsD,EAAA3mD,EAAAL,IAAAQ,MACD,SAAA8jC,EAA4B+f,GAAc,IAAAhgD,EAAA4iD,EAAA1C,EAAA2C,EAAA9B,EAAAI,EAAAI,EAAA9B,EAAA0C,EAAAC,EAAAC,EAAAS,EAAArtD,UAAA,OAAAkG,IAAAoB,MAAA,SAAAmjC,GAAA,cAAAA,EAAAjjC,KAAAijC,EAAAhjC,MAAA,OAAW,OAAT8C,EAAK8iD,EAAAptD,OAAA,QAAAC,IAAAmtD,EAAA,GAAAA,EAAA,GAAG,EAAC5iB,EAAAhjC,KAAA,EAC3BhH,KAAKurD,kBAAkBzB,EAAgBhgD,GAAM,OAAxD,OAAwD4iD,EAAA1iB,EAAAviC,KAA3DuiD,EAAG0C,EAAH1C,IAAGhgB,EAAAhjC,KAAA,EACsBhH,KAAKwrD,wBAAwB1B,EAAgBhgD,GAAM,OAIpF,OAJoF6iD,EAAA3iB,EAAAviC,KAA5EojD,EAAc8B,EAAd9B,eACFI,EAASrG,EAASsF,OAAO1mD,MAAMioD,aAAazB,EAAIQ,OAAO,GAAI,IAGjExgB,EAAAhjC,KAAA,GACoBhH,KAAK4lD,cAAc8F,YAAY5B,EAAgBe,GAAe,QAAvE,GAALQ,EAAKrhB,EAAAviC,OACP,EAAI3I,EAAQ8nD,OAAOqE,GAAS,CAAFjhB,EAAAhjC,KAAA,gBAAAgjC,EAAAhjC,KAAA,GACIhH,KAAK4lD,cAAcC,yBAAwB,QACW,OAD9E0D,EAAevf,EAAAviC,KACfwkD,EAASpH,EAAYiB,eAAeC,QAAQwD,EAAiBvpD,KAAKgmD,aAAYhc,EAAAhjC,KAAA,GACvEilD,EAAOY,yBAAyB7C,EAAI4B,cAAeP,EAAMt6C,IAAG,QAIL,eAAAi5B,EAAAh6B,OAAA,SAAAg6B,EAAAviC,MAJK,QAGhC,OADvCykD,EAAWrH,EAAY0H,iBAAiBxG,QAAQkF,EAAQjrD,KAAK4lD,eAAc5b,EAAAziC,GAChEs9C,EAAYwB,iBAAgBrc,EAAAhjC,KAAA,GAAeklD,EAASC,WAAU,QAA1B,OAA0BniB,EAAApiC,GAAAoiC,EAAAviC,KAAAuiC,EAAAzrB,GAAEve,KAAK6mD,cAAhFsF,EAAQniB,EAAAziC,GAAgCw+C,QAAO5+C,KAAA6iC,EAAAziC,GAAAyiC,EAAApiC,GAAAoiC,EAAAzrB,IAAAyrB,EAAAhjC,KAAA,GACxCmlD,EAASW,sBAAsB9C,EAAI4B,cAAeP,EAAMt6C,IAAG,yBAAAi5B,EAAAxiC,OAAA,GAAAuiC,EAAA,UAC3E,gBAAAkE,GAAA,OAAAwe,EAAA1kD,MAAA,KAAAxI,UAAA,EAjBA,IAiBA,CAAAY,IAAA,qBAAAC,MAAA,eAAA2sD,EAAAjnD,EAAAL,IAAAQ,MACD,SAAAmkC,EAAyB4iB,EAAa/H,GAAS,IAAA8E,EAAAkD,EAAAnJ,EAAAoJ,EAAAC,EAAAhB,EAAAD,EAAA1C,EAAA6B,EAAA,OAAA5lD,IAAAoB,MAAA,SAAA0jC,GAAA,cAAAA,EAAAxjC,KAAAwjC,EAAAvjC,MAAA,cAAAujC,EAAAvjC,KAAA,EACrBhH,KAAK4lD,cAAcwE,sBAAsBxF,EAASsF,OAAO1mD,MAAM2mD,QAAQ6C,IAAa,OAExC,GAF5DjD,EAAOxf,EAAA9iC,KACPwlD,EAAwBlD,EAAQiB,WAAWxO,WAAU,SAAC4Q,GAAS,OAAKA,EAAUnC,QAAUnsD,EAAQuuD,2BAA6BD,EAAUjtD,KAAO6sD,CAAW,IACtIjD,EAAQiB,WAAWiC,GACvB7sD,OAASwkD,EAASsF,OAAOoD,UAAUC,SAAQ,CAAAhjB,EAAAvjC,KAAA,cACtD,IAAI3G,MAAM,mCAAkC,cAAAkqC,EAAAvjC,KAAA,EAErChH,KAAK4lD,cAAc4H,eAAe5I,EAASsF,OAAO1mD,MAAM2mD,QAAQ6C,IAAa,OAMZ,OAN5ElJ,EAAEvZ,EAAA9iC,KAEFylD,GAAkB,EAAIpuD,EAAQ2uD,iBAAiB1D,EAAQvpD,MACvD2sD,EAAkBpD,EAAQj8B,GAC1Bq+B,EAAWtH,EAAYwB,iBAAiBN,QAAQmH,EAAiBltD,KAAKgmD,aACtEkG,EAAWrH,EAAY0H,iBAAiBxG,QAAQoH,EAAiBntD,KAAK4lD,eACtE4D,EAAW0C,EAASwB,UAAUC,mBAAmB,kBAAmB7J,EAAGz9C,MAAKkkC,EAAAvjC,KAAA,GAC9DhH,KAAK4lD,cAAc8F,YAAYsB,EAAaC,GAAsB,QAA3E,OAAL5B,EAAK9gB,EAAA9iC,KAAA8iC,EAAAvjC,KAAG,GACDmlD,EAASyB,mBAAmBpE,EAAoB,UAAGA,EAAmB,SAAGwD,EAAajD,EAAQ6B,cAAeP,EAAMt6C,GAAIg5C,EAAQW,eAAgBW,EAAMA,MAAqB,OAAdpG,QAAoC,IAAdA,EAAuBA,EAAY,CAAC,GAAE,eAAA1a,EAAAv6B,OAAA,SAAAu6B,EAAA9iC,MAAA,yBAAA8iC,EAAA/iC,OAAA,GAAA4iC,EAAA,UACxO,gBAAAmE,EAAAC,GAAA,OAAAue,EAAAhlD,MAAA,KAAAxI,UAAA,EAjBA,IAiBA,CAAAY,IAAA,iBAAAC,MAAA,eAAAytD,EAAA/nD,EAAAL,IAAAQ,MACD,SAAA4kC,EAAqBuB,GAAW,IAAA0hB,EAAA,OAAAroD,IAAAoB,MAAA,SAAAkkC,GAAA,cAAAA,EAAAhkC,KAAAgkC,EAAA/jC,MAAA,cAAA+jC,EAAA/jC,KAAA,EACGhH,KAAK+tD,oBAAoB3hB,GAAY,OAC3C,OADnB0hB,EAAgB/iB,EAAAtjC,KAAAsjC,EAAAxjC,GACfvH,KAAK4lD,cAAa7a,EAAA/jC,KAAA,EAA6BhH,KAAKgmD,YAAYyC,gBAAgBqF,GAAiB,cAAA/iB,EAAAnjC,GAAAmjC,EAAAtjC,KAAAsjC,EAAA/6B,OAAA,SAAA+6B,EAAAxjC,GAA9EmhD,sBAAqBvhD,KAAA4jC,EAAAxjC,GAAAwjC,EAAAnjC,KAAA,wBAAAmjC,EAAAvjC,OAAA,GAAAqjC,EAAA,UAClD,gBAAAgE,GAAA,OAAAgf,EAAA9lD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,4BAAAC,MAAA,eAAA4tD,EAAAloD,EAAAL,IAAAQ,MACD,SAAAklC,EAAgCiB,GAAW,IAAA0hB,EAAA,OAAAroD,IAAAoB,MAAA,SAAAukC,GAAA,cAAAA,EAAArkC,KAAAqkC,EAAApkC,MAAA,cAAAokC,EAAApkC,KAAA,EACRhH,KAAK+tD,oBAAoB3hB,GAAY,OAA9C,OAAhB0hB,EAAgB1iB,EAAA3jC,KAAA2jC,EAAAp7B,OAAA,SACfhQ,KAAK6mD,cAAcpD,YAAYqK,IAAiB,wBAAA1iB,EAAA5jC,OAAA,GAAA2jC,EAAA,UAC1D,gBAAAgE,GAAA,OAAA6e,EAAAjmD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,sBAAAC,MAAA,eAAA6tD,EAAAnoD,EAAAL,IAAAQ,MACD,SAAAulC,EAA0BY,GAAW,IAAAzpB,EAAAohC,EAAA18B,EAAA28B,EAAA8E,EAAAlmC,EAAAmmC,EAAArwB,EAAA8uB,EAAA1D,EAAAyF,EAAAE,EAAAD,EAAAH,EAAA6E,EAAAlF,EAAA/D,EAAA4C,EAAAsG,EAAAlF,EAAAC,EAAA,OAAAzjD,IAAAoB,MAAA,SAAA8kC,GAAA,cAAAA,EAAA5kC,KAAA4kC,EAAA3kC,MAAA,cAAA2kC,EAAA3kC,KAAA,EAEJhH,KAAK0nD,kBAAiB,OAMmF,GANhIF,EAAc7b,EAAAlkC,KACTq8C,EAAEt3C,OAAAwyB,OAAA,IAAAylB,EAAKrY,GAAAA,IACI,QAArBzpB,EAAKmhC,EAAG2F,eAA4B,IAAP9mC,IAAsBmhC,EAAG2F,QAAU7E,EAASzQ,UAAU3zC,KAAK,IAC/D,QAAzBujD,EAAKD,EAAGkF,mBAAgC,IAAPjF,IAAsBD,EAAGkF,YAAcpE,EAASzQ,UAAU3zC,KAAK,IACvE,QAAzB6mB,EAAKy8B,EAAGoK,mBAAgC,IAAP7mC,IAAsBy8B,EAAGoK,YAAc,IACjD,QAAvBlK,EAAKF,EAAGmB,iBAA8B,IAAPjB,IAAsBF,EAAGmB,UAAY,CAAC,GACtC,QAA/B6D,EAAKhF,EAAG+D,yBAAsC,IAAPiB,IAAsBhF,EAAG+D,kBAAoB/oD,EAAQgpD,yCAC/D,QAA7BllC,EAAKkhC,EAAGqK,uBAAoC,IAAPvrC,EAAa,CAAA+oB,EAAA3kC,KAAA,SAAK2kC,EAAA3kC,KAAA,wBAAA2kC,EAAA3kC,KAAA,GAA+BhH,KAAK+lC,aAAY,QAA5C+d,EAAGqK,gBAAexiB,EAAAlkC,KAAA,WACrD,QAAxBshD,EAAKjF,EAAGuF,kBAA+B,IAAPN,EAAa,CAAApd,EAAA3kC,KAAA,SAAK2kC,EAAA3kC,KAAA,wBAAA2kC,EAAA3kC,KAAA,GAA0BhH,KAAK4lD,cAAcwI,sBAAsBhiB,GAAY,QAA3E0X,EAAGuF,WAAU1d,EAAAlkC,KAAA,QAC2D,OAAvH8hD,EAA4HzF,EAA5HyF,gBAAiBE,EAA2G3F,EAA3G2F,QAASD,EAAkG1F,EAAlG0F,SAAUH,EAAwFvF,EAAxFuF,WAAY6E,EAA4EpK,EAA5EoK,YAAalF,EAA+DlF,EAA/DkF,YAAa/D,EAAkDnB,EAAlDmB,UAAW4C,EAAuC/D,EAAvC+D,kBAAmBsG,EAAoBrK,EAApBqK,gBAAexiB,EAAA3kC,KAAA,GACzH89C,EAAe9kD,KAAK6mD,cAAe5B,GAAU,QAExB,OADrBgE,EAAwBhE,EAAUG,cAAgBH,EAAUxhB,SAAQkI,EAAApkC,GACnDvH,KAAI2rC,EAAA3kC,KAAA,GACPiiD,EAAqB,QAE7B,OAF6Btd,EAAA/jC,GAAA+jC,EAAAlkC,KAAAkkC,EAAAptB,GACrCspC,EAAiBlc,EAAAniB,GACP6/B,EAAU1d,EAAAliB,GAAA,CAFpBga,SAAQkI,EAAA/jC,GACRigD,kBAAiBlc,EAAAptB,GACjB+uB,SAAQ3B,EAAAniB,IAAAmiB,EAAA3kC,KAAA,GAAA2kC,EAAApkC,GAHgB8mD,YAAWlnD,KAAAwkC,EAAApkC,GAAAokC,EAAAliB,IAAA,QAK4E,OAL7Gy/B,EAAQvd,EAAAlkC,KAKa,QAA1BixB,EAAKusB,EAAU7kD,aAA0B,IAAPs4B,IAAsBusB,EAAU7kD,MAAQ8oD,EAASn/C,IAAIi/C,GAAaj/C,IAAI0/C,IAAU9d,EAAA3kC,KAAA,IAC7G,EAAIlI,EAAQ4qD,eAAeR,EAAUjE,EAAU7kD,OAAM,eAAAurC,EAAA3kC,KAAA,GAC9CwgD,EAAemC,oBAAoB2E,qBAAqB/E,EAAiBE,EAASD,EAAUH,EAAYvqD,EAAQgpD,wCAAyCoG,EAAaC,EAAiBlJ,GAAU,eAAAtZ,EAAA37B,OAAA,SAAA27B,EAAAlkC,MAAA,yBAAAkkC,EAAAnkC,OAAA,GAAAgkC,EAAA,UACjN,gBAAA4D,GAAA,OAAA6e,EAAAlmD,MAAA,KAAAxI,UAAA,EAvBA,MAuBAmmD,CAAA,CAnPL,CAA6BF,EAqPjC,EA+CA7jD,EAAQ+iD,UA7CR,SAAmBc,GACf,gBAAA+I,GAAA3oD,EAAA8/C,EAAA6I,GAAA,IAAA7yB,EAAA71B,EAAA6/C,GAAA,SAAAA,IAAA,OAAA3lD,EAAA,KAAA2lD,GAAAhqB,EAAA3zB,MAAA,KAAAxI,UAAA,CAyCK,OAzCLW,EAAAwlD,EAAA,EAAAvlD,IAAA,cAAAC,MACI,WACI,MAAM,IAAIC,MAAM,4CACpB,GAAC,CAAAF,IAAA,YAAAC,MACD,WACI,MAAM,IAAIC,MAAM,4CACpB,GAAC,CAAAF,IAAA,aAAAC,MAAA,eAAAknC,EAAAxhC,EAAAL,IAAAQ,MACD,SAAAimC,EAAiBsa,GAAK,IAAAC,EAAAla,EAAAhtC,UAAA,OAAAkG,IAAAoB,MAAA,SAAA2lC,GAAA,cAAAA,EAAAzlC,KAAAylC,EAAAxlC,MAAA,OACa,OADXy/C,EAAQla,EAAA/sC,OAAA,QAAAC,IAAA8sC,EAAA,GAAAA,EAAA,GAAG,YAAWC,EAAAjlC,GAC7BvH,KAAK4lD,cAAapZ,EAAAxlC,KAAA,EAAkBhH,KAAK+lC,aAAY,OAAiB,OAAjByG,EAAA5kC,GAAA4kC,EAAA/kC,KAAA+kC,EAAAjuB,GAAEkoC,EAAQja,EAAAhjB,GAAEg9B,EAAKha,EAAAxlC,KAAA,EAAAwlC,EAAAjlC,GAAnDkgC,WAAUtgC,KAAAqlC,EAAAjlC,GAAAilC,EAAA5kC,GAAA4kC,EAAAjuB,GAAAiuB,EAAAhjB,IAAA,cAAAgjB,EAAAx8B,OAAC,SAADw8B,EAAA/kC,MAAA,yBAAA+kC,EAAAhlC,OAAA,GAAA0kC,EAAA,UAC7C,gBAAAuD,GAAA,OAAAnI,EAAAv/B,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,iBAAAC,MAAA,eAAAouD,EAAA1oD,EAAAL,IAAAQ,MACD,SAAAknC,IAAA,OAAA1nC,IAAAoB,MAAA,SAAAumC,GAAA,cAAAA,EAAArmC,KAAAqmC,EAAApmC,MAAA,OACmC,OADnComC,EAAA7lC,GACiBvH,KAAK4lD,cAAaxY,EAAApmC,KAAA,EAA6BhH,KAAK+lC,aAAY,cAAAqH,EAAAxlC,GAAAwlC,EAAA3lC,KAAA2lC,EAAApmC,KAAA,EAAAomC,EAAA7lC,GAA7CknD,sBAAqBtnD,KAAAimC,EAAA7lC,GAAA6lC,EAAAxlC,IAAA,cAAAwlC,EAAAp9B,OAAC,SAADo9B,EAAA3lC,MAAA,wBAAA2lC,EAAA5lC,OAAA,GAAA2lC,EAAA,UACxD,yBAAAqhB,EAAAzmD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,uBAAAC,MAAA,eAAAsuD,EAAA5oD,EAAAL,IAAAQ,MACD,SAAA0nC,IAAA,IAAAuY,EAAA,OAAAzgD,IAAAoB,MAAA,SAAAgnC,GAAA,cAAAA,EAAA9mC,KAAA8mC,EAAA7mC,MAAA,cAAA6mC,EAAA7mC,KAAA,EAC4BhH,KAAK4lD,cAAcO,4BAA2B,OAAvD,OAATD,EAASrY,EAAApmC,KAAAomC,EAAA79B,OAAA,SACR,CACHo2C,MAAOvB,EAAY0H,iBAAiBxG,QAAQG,EAAUyI,QAAS3uD,KAAK4uD,eACvE,wBAAA/gB,EAAArmC,OAAA,GAAAmmC,EAAA,UACJ,yBAAA+gB,EAAA3mD,MAAA,KAAAxI,UAAA,EANA,IAMA,CAAAY,IAAA,kBAAAC,MACD,SAAgBiG,GACZ,IAAIsc,EAAIohC,EACF8K,EAAU95C,EAAA,GAAQ1O,GAGxB,OAFoC,QAAnCsc,EAAKksC,EAAWC,qBAAkC,IAAPnsC,IAAsBksC,EAAWC,cAAgBhwD,EAAQiwD,+BACnE,QAAjChL,EAAK8K,EAAWX,mBAAgC,IAAPnK,IAAsB8K,EAAWX,YAAc,IAClFW,CACX,GAAC,CAAA1uD,IAAA,WAAAC,MAAA,eAAA4uD,EAAAlpD,EAAAL,IAAAQ,MACD,SAAAkoC,EAAe/B,GAAW,IAAA6iB,EAAAjb,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAwnC,GAAA,cAAAA,EAAAtnC,KAAAsnC,EAAArnC,MAAA,OACqB,OADrBqnC,EAAA9mC,GACGvH,KAAK4lD,cAAavX,EAAAzmC,GAAAmN,EAAAs5B,EAAArnC,KAAA,EAC3BhH,KAAK+lC,aAAY,OACf,OADesI,EAAA9vB,GAAA8vB,EAAA5mC,KAAA4mC,EAAA7kB,GAAA,CAA7BhpB,KAAI6tC,EAAA9vB,IAAA8vB,EAAA5kB,GACD2iB,EAAWiC,EAAA3kB,IAAA,EAAA2kB,EAAAzmC,IAAAymC,EAAA7kB,GAAA6kB,EAAA5kB,IAAA4kB,EAAArnC,KAAA,GAAAqnC,EAAA9mC,GAF0B2nD,cAAa/nD,KAAAknC,EAAA9mC,GAAA8mC,EAAA3kB,IAAA,QAAzC,OAAVulC,EAAU5gB,EAAA5mC,KAAA4mC,EAAArnC,KAAG,GAIMhH,KAAKyoD,gBAAgBwG,GAAW,QAAzC,OAAVjb,EAAU3F,EAAA5mC,KAAA4mC,EAAAr+B,OAAA,SACThQ,KAAK4lD,cAAcuJ,iBAAiBnb,IAAW,yBAAA3F,EAAA7mC,OAAA,GAAA2mC,EAAA,UACzD,gBAAA2B,GAAA,OAAAkf,EAAAjnD,MAAA,KAAAxI,UAAA,EARA,IAQA,CAAAY,IAAA,WAAAC,MAAA,eAAAgvD,EAAAtpD,EAAAL,IAAAQ,MACD,SAAAyoC,EAAetC,GAAW,IAAAijB,EAAArb,EAAA,OAAAvuC,IAAAoB,MAAA,SAAA8nC,GAAA,cAAAA,EAAA5nC,KAAA4nC,EAAA3nC,MAAA,OACqB,OADrB2nC,EAAApnC,GACGvH,KAAK4lD,cAAajX,EAAA/mC,GAAAmN,EAAA45B,EAAA3nC,KAAA,EAC3BhH,KAAK+lC,aAAY,OACf,OADe4I,EAAApwB,GAAAowB,EAAAlnC,KAAAknC,EAAAnlB,GAAA,CAA7BhpB,KAAImuC,EAAApwB,IAAAowB,EAAAllB,GACD2iB,EAAWuC,EAAAjlB,IAAA,EAAAilB,EAAA/mC,IAAA+mC,EAAAnlB,GAAAmlB,EAAAllB,IAAAklB,EAAA3nC,KAAA,GAAA2nC,EAAApnC,GAF0B+nD,cAAanoD,KAAAwnC,EAAApnC,GAAAonC,EAAAjlB,IAAA,QAAzC,OAAV2lC,EAAU1gB,EAAAlnC,KAAAknC,EAAA3nC,KAAG,GAIMhH,KAAKyoD,gBAAgB4G,GAAW,QAAzC,OAAVrb,EAAUrF,EAAAlnC,KAAAknC,EAAA3+B,OAAA,SACThQ,KAAK4lD,cAAcuJ,iBAAiBnb,IAAW,yBAAArF,EAAAnnC,OAAA,GAAAknC,EAAA,UACzD,gBAAAqB,GAAA,OAAAqf,EAAArnD,MAAA,KAAAxI,UAAA,EARA,MAQAmmD,CAAA,CAzCL,CAA6BF,EA2CjC,sCC1Sa,IAAA//C,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAA+G,EAAA/G,EAAAA,OAAAA,QAAAgH,EAAAhH,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QACb6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ4tD,gBAAkB5tD,EAAQ6tD,cAAW,EAC7C,IAAM5K,EAAWjmD,EAAQ,OACnBG,EAAUH,EAAQ,OAClBwU,EAAUxU,EAAQ,OACpB8wD,EAAW9wD,EAAQ,OACvB6N,OAAO6yB,eAAe19B,EAAS,WAAY,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOqhD,EAASD,QAAU,IAAK,IAC3GD,EAAe,SAAAG,GAAA9pD,EAAA2pD,EAAAG,GAAA,IAAAxnD,EAAArC,EAAA0pD,GACjB,SAAAA,EAAYI,EAAKC,EAAUlO,EAAQmO,GAAgB,IAAA9/C,EAEE,OAFFhQ,EAAA,KAAAwvD,IAC/Cx/C,EAAA7H,EAAAf,KAAA,KAAMwoD,EAAKC,EAAUlO,IAChBmO,eAAiBA,GAAkB,SAAS9/C,CACrD,CAmDC,OAnDA7P,EAAAqvD,EAAA,EAAApvD,IAAA,iBAAAC,MACD,SAAe+C,EAAM+8C,EAAc4P,GAC/B,GAA2B,UAAvB9vD,KAAK6vD,eACL,OAAO/wD,EAAQixD,kBAAkBC,mBAAmB,SAAU,CAAC7sD,EAAM+8C,EAAc4P,IAElF,GAA2B,iBAAvB9vD,KAAK6vD,eACV,OAAO/wD,EAAQixD,kBAAkBC,mBAAmB,gBAAiB,CACjE7sD,EACA+8C,EACA4P,EACA38C,EAAQ88C,0BAA0BC,WAItC,MAAM,IAAI7vD,MAAM,+BAADgD,OAAgCrD,KAAK6vD,gBAE5D,GAAC,CAAA1vD,IAAA,uBAAAC,MACD,WAKI,IAL0B,IAAA+vD,EACtBxtC,EAAIohC,EAAI18B,EACR28B,EAAI8E,EAGRzgD,EAAA9I,UAAAC,OALoB8I,EAAI,IAAAhH,MAAA+G,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAhJ,UAAAgJ,GAMxB,IAAM6nD,GAASD,EAAAzqD,EAAAC,EAAA4pD,EAAAtlD,WAAA,8BAAA9C,KAAAY,MAAAooD,EAAA,OAAA9sD,OAAiCiF,IAE5CtI,KAAK0tD,UAAU2C,OAAOC,OAAO9wD,OAAS,GAAK8I,EAAK9I,QAChD8I,EAAKioD,MAGT,IAAMrQ,GAAe,EAAIphD,EAAQ0xD,cAAcxwD,KAAK4vD,UAC9CE,EAAsBlL,EAASphD,MAAM6gD,SAASrkD,KAAK0tD,UAAU+C,aAAanoD,IAC1EooD,EAAiB1wD,KAAK2wD,eAVjB,qEAUsCzQ,EAAc4P,GAW/D,OAVAM,EAAUx/C,KAAO9R,EAAQ8xD,eACzBR,EAAUtiC,GAAKhvB,EAAQ+xD,0BACvBT,EAAU/pD,KAAOqqD,EACe,QAA/B/tC,EAAKytC,EAAUvB,kBAA+B,IAAPlsC,IAAsBytC,EAAUvB,WAAa,CAAC,GACnC,QAAlD9K,GAAMC,EAAKoM,EAAUvB,YAAYX,mBAAgC,IAAPnK,IAAsBC,EAAGkK,YAAc,IAC7C,QAApD7mC,GAAMyhC,EAAKsH,EAAUvB,YAAYC,qBAAkC,IAAPznC,IAAsByhC,EAAGgG,cAAgBhwD,EAAQiwD,+BAEzGqB,EAAUvB,WAAWX,YAAYjmC,SAASjoB,KAAK4vD,WAChDQ,EAAUvB,WAAWX,YAAY9hD,KAAKpM,KAAK4vD,UAExCQ,CACX,GAAC,CAAAjwD,IAAA,SAAAC,MAAA,eAAA0wD,EAAAhrD,EAAAL,IAAAQ,MACD,SAAAC,IAAA,IAAA6qD,EAAA58B,EAAA7rB,EAAA8rB,EAAA48B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7xD,UAAA,OAAAkG,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,WAAAmtB,EAAAi9B,EAAA5xD,OAAgB8I,EAAI,IAAAhH,MAAA6yB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ9rB,EAAI8rB,GAAAg9B,EAAAh9B,GAAA,OAAAltB,EAAAF,KAAA,GAAA+pD,EAAArrD,EAAAC,EAAA4pD,EAAAtlD,WAAA,gBAAA9C,KAAAY,MAAAgpD,EAAA,OAAA1tD,OACuBiF,IAAI,OAA7B,OAAR0oD,EAAQ9pD,EAAAO,KAAAP,EAAAF,KAAG,EACagqD,EAASK,kBAAkB7I,OAAM,OAG4C,OAHrGyI,EAAe/pD,EAAAO,KACfypD,GAAoB,EAAIpyD,EAAQwyD,sBAAsBL,GAAiBpkD,KAAI,SAAC0kD,GAAI,OAAKA,EAAKC,eAAe,IACzGL,EAA6B,IAAIvM,EAASsF,OAAOsF,SAAS0B,EAAkBA,EAAkB1xD,OAAS,GAAIwxD,EAAStD,UAAWsD,EAAStP,QAC9IkD,EAASphD,MAAMiuD,eAAeN,EAA4B,oBAAqBH,EAASK,mBAAmBnqD,EAAA8I,OAAA,SACpGmhD,GAA0B,yBAAAjqD,EAAAM,OAAA,GAAAtB,EAAA,UACpC,yBAAA4qD,EAAA/oD,MAAA,KAAAxI,UAAA,EARA,MAQAgwD,CAAA,CAvDgB,CAAS3K,EAASsF,OAAOqF,iBAyD9C5tD,EAAQ4tD,gBAAkBA,sCChE1B,IAAImC,EAAmB1xD,MAAQA,KAAK0xD,kBAAqBllD,OAAOqI,OAAU,SAAS6W,EAAGjR,EAAG9N,EAAGud,QAC7EzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B,IAAIglD,EAAOnlD,OAAOolD,yBAAyBn3C,EAAG9N,GACzCglD,KAAS,QAASA,GAAQl3C,EAAEulB,WAAa2xB,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAExjD,YAAY,EAAMC,IAAK,WAAa,OAAOqM,EAAE9N,EAAI,IAE5DH,OAAO6yB,eAAe3T,EAAGxB,EAAIynC,EACjC,EAAM,SAASjmC,EAAGjR,EAAG9N,EAAGud,QACTzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B+e,EAAExB,GAAMzP,EAAE9N,EACd,GACIolD,EAAsB/xD,MAAQA,KAAK+xD,qBAAwBvlD,OAAOqI,OAAU,SAAS6W,EAAGtgB,GACxFoB,OAAO6yB,eAAe3T,EAAG,UAAW,CAAEvd,YAAY,EAAM/N,MAAOgL,GACnE,EAAK,SAASsgB,EAAGtgB,GACbsgB,EAAW,QAAItgB,CACnB,GACI4mD,EAAgBhyD,MAAQA,KAAKgyD,cAAiB,SAAU12C,GACxD,GAAIA,GAAOA,EAAI0kB,WAAY,OAAO1kB,EAClC,IAAI7L,EAAS,CAAC,EACd,GAAW,MAAP6L,EAAa,IAAK,IAAI3O,KAAK2O,EAAe,YAAN3O,GAAmBH,OAAOvC,UAAUgoD,eAAe9qD,KAAKmU,EAAK3O,IAAI+kD,EAAgBjiD,EAAQ6L,EAAK3O,GAEtI,OADAolD,EAAmBtiD,EAAQ6L,GACpB7L,CACX,EACAjD,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ6tD,SAAW7tD,EAAQ4tD,gBAAkB5tD,EAAQuwD,SAAWvwD,EAAQwwD,aAAexwD,EAAQywD,OAASzwD,EAAQ0wD,SAAW1wD,EAAQ2wD,OAAS3wD,EAAQ4wD,aAAe5wD,EAAQwhC,MAAQxhC,EAAQ6B,WAAQ,EACnM7B,EAAQ6B,MAAQwuD,EAAarzD,EAAQ,QACrCgD,EAAQwhC,MAAQ6uB,EAAarzD,EAAQ,QACrC,IAAI6zD,EAAW7zD,EAAQ,OACvB6N,OAAO6yB,eAAe19B,EAAS,eAAgB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOokD,EAASD,YAAc,IACpH/lD,OAAO6yB,eAAe19B,EAAS,SAAU,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOokD,EAASF,MAAQ,IACxG9lD,OAAO6yB,eAAe19B,EAAS,WAAY,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOokD,EAASH,QAAU,IAC5G,IAAII,EAAW9zD,EAAQ,OACvB6N,OAAO6yB,eAAe19B,EAAS,SAAU,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOqkD,EAASL,MAAQ,IACxG,IAAIM,EAAa/zD,EAAQ,OACzB6N,OAAO6yB,eAAe19B,EAAS,eAAgB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOskD,EAAWP,YAAc,IACtH3lD,OAAO6yB,eAAe19B,EAAS,WAAY,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOskD,EAAWR,QAAU,IAC9G,IAAIS,EAAah0D,EAAQ,OACzB6N,OAAO6yB,eAAe19B,EAAS,kBAAmB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOukD,EAAWpD,eAAiB,IAC5H/iD,OAAO6yB,eAAe19B,EAAS,WAAY,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOukD,EAAWnD,QAAU,wCCtC9GhjD,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQixD,mBAAqBjxD,EAAQkxD,yBAA2BlxD,EAAQmxD,+BAAiCnxD,EAAQoxD,oBAAiB,EAClI,IAAMnO,EAAWjmD,EAAQ,OAEzB,SAASm0D,EAA+BE,GACpC,OAAOrxD,EAAQoxD,eAAe/C,mBAAmB,gBAAiB,CAC9DgD,EAAexM,MACfwM,EAAeC,iBACfD,EAAeE,YAEvB,CAEA,SAASL,EAAyBG,GAC9B,OAAOrxD,EAAQoxD,eAAe/C,mBAAmB,UAAW,CAACgD,EAAeE,YAChF,CAXAvxD,EAAQoxD,eAAiB,IAAInO,EAASsF,OAAO1mD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GAQ7DgD,EAAQmxD,+BAAiCA,EAIzCnxD,EAAQkxD,yBAA2BA,EAenClxD,EAAQixD,mBAdR,SAA4BQ,EAAkBJ,GAC1C,MAA2B,WAAvBA,EAAepiD,KACR,CACHyiD,UAAWD,EACXJ,eAAgBH,EAAyBG,IAItC,CACHK,UAAWD,EACXJ,eAAgBF,EAA+BE,GAG3D,sCC9Ba,IAAAvO,EAAA9lD,EAAAA,OAAAA,QAAA8G,EAAA9G,EAAAA,OAAAA,QAAAoW,EAAApW,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QAAA+G,EAAA/G,EAAAA,OAAAA,QAAAgH,EAAAhH,EAAAA,OAAAA,QACb6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQwwD,aAAexwD,EAAQuwD,cAAW,EAC1C,IAAMtN,EAAWjmD,EAAQ,OACrB20D,EAAY1O,EAAS2O,UAAUD,UAC7BE,EAAQ70D,EAAQ,OAChBkmD,EAAclmD,EAAQ,OACtBwU,EAAUxU,EAAQ,OAClBG,EAAUH,EAAQ,OAClB6zD,EAAW7zD,EAAQ,OACrB80D,EAAmB,KACjBvB,EAAQ,SAAAwB,GAAA9tD,EAAAssD,EAAAwB,GAAA,IAAAxrD,EAAArC,EAAAqsD,GAyMV,SAAAA,EAAYzhD,EAAKoxB,GAAS,IAAA9xB,EAAAhQ,EAAA,KAAAmyD,IACtBniD,EAAA7H,EAAAf,KAAA,KAAMsJ,EAAKoxB,IACN8xB,gBAAkB,IACvB,IAAMlN,EAAW12C,EAAK6jD,UAAUnN,SAAS3lB,KAAK/wB,EAAK6jD,WAQG,OAPtD7jD,EAAK6jD,UAAUnN,SAAW,SAACpzB,GACvB,MAAW,aAAPA,GAA6B,aAAPA,EACfA,EAEJozB,EAASpzB,EACpB,EACAtjB,EAAK8jD,kBAAoB,CAAC,EAC1B9jD,EAAK6jD,UAAUxnB,YAActtC,EAAQg1D,iBAAiB/jD,CAC1D,CAmIC,OAnIA7P,EAAAgyD,EAAA,EAAA/xD,IAAA,wBAAAC,MAAA,eAAA2zD,EAAAjuD,EAAAL,IAAAQ,MApND,SAAAs4B,EAA4By1B,GAAe,IAAAzkD,EAAAosB,EAAA,YAAAl2B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjChH,KAAKi0D,aAAY,cAAAntD,EAAAE,KAAA,EACCgtD,EAAe,OACuC,OAD9EA,EAAeltD,EAAAW,KACT8H,EAAS,CAAEykD,gBAAiBh0D,KAAK4zD,UAAUpxD,KAAKwxD,GAAiB,IAAOltD,EAAAkJ,OAAA,UACvE,EAAIwjD,EAAMU,MAAIpuD,EAAAL,IAAAQ,MAAE,SAAAC,IAAA,IAAAuJ,EAAAs6C,EAAAoK,EAAAzhB,EAAA,OAAAjtC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACE20B,EAAKy4B,QAAQ,wBAAyB7kD,GAAO,OAAtD,GACE,OADRE,EAAMvI,EAAAO,MACM,CAAAP,EAAAF,KAAA,WAC+B,MAAzC20B,EAAK04B,SAAS,KAAOL,GAAwB,CAAA9sD,EAAAF,KAAA,eAAAE,EAAA8I,OAAA,SACtC,MAAI,cAAA9I,EAAA8I,OAAA,cAERvQ,GAAS,UAEM,MAAtBgQ,EAAO0kD,aAAwC,MAAjB1kD,EAAO6kD,SAAkB1P,EAASzQ,UAAU3zC,KAAKiP,EAAO6kD,QAAQlgB,SAAQ,CAAAltC,EAAAF,KAAA,eAAAE,EAAA8I,OAAA,SAAA+E,EAAAA,EAAA,GAG/F4mB,EAAKi4B,UAAU7J,QAAOh1C,EAAAA,EAAC,CAAC,EACpBtF,GAAM,IACTijC,cAAe,EACfyhB,YAAa,EACbI,UAAW3P,EAASsF,OAAOoD,UAAUC,aACvC,IACF4G,YAAa,KACbI,UAAW,KACX3I,cAAe,KACflB,eAAgB,QAAI,UAGJ,MAApBj7C,EAAO8kD,UAAiB,CAAArtD,EAAAF,KAAA,gBAAAE,EAAA8I,OAAA,cAEjBvQ,GAAS,QAG8B,GACnB,OADrBsqD,EAAUpuB,EAAKi4B,UAAU7J,QAAQt6C,IAC3B0kD,YAAmB,CAAAjtD,EAAAF,KAAA,SAC3B+iD,EAAQrX,cAAgB,EAAExrC,EAAAF,KAAA,oBAEI,MAAzB+iD,EAAQrX,cAAqB,CAAAxrC,EAAAF,KAAA,gBAAAE,EAAAF,KAAA,GACR20B,EAAK64B,wBAAwB,IAAM,EAAI74B,EAAKg4B,iBAAgB,QAAhFQ,EAAWjtD,EAAAO,MAEbirC,EAAgByhB,EAAcpK,EAAQoK,YAAc,IACnC,IACjBzhB,EAAgB,GAEpBqX,EAAQrX,cAAgBA,EAAc,eAAAxrC,EAAA8I,OAAA,SAEnC+5C,GAAO,yBAAA7iD,EAAAM,OAAA,GAAAtB,EAAA,KAEnB,CAAEuuD,SAAUz0D,QAAO,wBAAA8G,EAAAU,OAAA,GAAA+2B,EAAA,UACzB,gBAAA11B,GAAA,OAAAkrD,EAAAhsD,MAAA,KAAAxI,UAAA,EAoKA,IApKA,CAAAY,IAAA,WAAAC,MAAA,eAAAs0D,EAAA5uD,EAAAL,IAAAQ,MACD,SAAAkgC,EAAewuB,GAAmB,OAAAlvD,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SACvBhQ,KAAK00D,UAAUC,GAAqB,IAAM,wBAAAvuB,EAAA5+B,OAAA,GAAA2+B,EAAA,UACpD,gBAAAr9B,GAAA,OAAA4rD,EAAA3sD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,2BAAAC,MAAA,eAAAw0D,EAAA9uD,EAAAL,IAAAQ,MACD,SAAAsgC,EAA+BouB,GAAmB,OAAAlvD,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx2B,OAAA,SACvChQ,KAAK00D,UAAUC,GAAqB,IAAK,wBAAAnuB,EAAAh/B,OAAA,GAAA++B,EAAA,UACnD,gBAAAx9B,GAAA,OAAA6rD,EAAA7sD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,aAAAC,MAAA,eAAAknC,EAAAxhC,EAAAL,IAAAQ,MAmCD,SAAA0gC,EAAiBzkC,EAASukD,EAAUoO,GAAY,IAAAxhC,EAAAmzB,EAAA,OAAA/gD,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,OACC,GAAvCqsB,EAAMrzB,KAAK4zD,UAAUnN,SAASA,GAChB,MAAhBoO,KAAwB,EAAI/1D,EAAQ8nD,OAAOiO,GAAa,CAAAjuB,EAAA5/B,KAAA,eAAA4/B,EAAA5/B,KAAA,EAAAtB,EAAAC,EAAAusD,EAAAjoD,WAAA,mBAAA9C,KAAA,KAE1BjF,EAASmxB,GAAG,OAKkB,eAAAuT,EAAA52B,OAAA,SAAA42B,EAAAn/B,MALlB,OAImC,OAJnCm/B,EAAA7/B,KAAA,EAIlCy/C,EAAQ3B,EAAYiC,sBAAsBf,QAAQ8O,EAAc70D,MAAK4mC,EAAA5/B,KAAA,GAC5Dw/C,EAAMO,UAAU7kD,EAAS,CAAEukD,SAAUpzB,IAAM,eAAAuT,EAAA7/B,KAAA,GAAA6/B,EAAAr/B,GAAAq/B,EAAA,SAAAA,EAAA52B,OAAA,SAGjD40C,EAASzQ,UAAU3zC,KAAK,IAAE,yBAAAomC,EAAAp/B,OAAA,GAAAm/B,EAAA,mBAG5C,gBAAAkC,EAAAgB,EAAAK,GAAA,OAAA5C,EAAAv/B,MAAA,KAAAxI,UAAA,EAlDA,IAkDA,CAAAY,IAAA,iBAAAC,MAAA,eAAA4mD,EAAAlhD,EAAAL,IAAAQ,MACD,SAAA8gC,EAAqByf,GAAK,IAAAsO,EAAA7N,EAAA,OAAAxhD,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,UAClBw/C,GAAS1nD,EAAQ6nD,YAAW,CAAA3f,EAAAhgC,KAAA,eAAAggC,EAAAh3B,OAAA,SACrBlR,EAAQ6nD,aAAW,cAAA3f,EAAAhgC,KAAA,EAGQhH,KAAKmmD,4BAA2B,OACgB,OAD5E2O,EAAkB9tB,EAAAv/B,KAA4CknD,QAC9D1H,EAAcpC,EAAY0H,iBAAiBxG,QAAQ+O,EAAoB90D,MAAKgnC,EAAAhgC,KAAA,GACrEigD,EAAYE,eAAeX,GAAM,eAAAxf,EAAAh3B,OAAA,SAAAg3B,EAAAv/B,MAAA,yBAAAu/B,EAAAx/B,OAAA,GAAAu/B,EAAA,UAErD,gBAAA4D,GAAA,OAAAqc,EAAAj/C,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,iBAAAC,MAAA,eAAA20D,EAAAjvD,EAAAL,IAAAQ,MACD,SAAAkhC,EAAqBqf,GAAK,IAAAsO,EAAA7N,EAAA,OAAAxhD,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,UAClBw/C,GAAS1nD,EAAQ6nD,YAAW,CAAAvf,EAAApgC,KAAA,eAAAogC,EAAAp3B,OAAA,SACrBlR,EAAQ6nD,aAAW,cAAAvf,EAAApgC,KAAA,EAGQhH,KAAKmmD,4BAA2B,OACgB,OAD5E2O,EAAkB1tB,EAAA3/B,KAA4CknD,QAC9D1H,EAAcpC,EAAY0H,iBAAiBxG,QAAQ+O,EAAoB90D,MAAKonC,EAAApgC,KAAA,GACrEigD,EAAY+N,eAAexO,GAAM,eAAApf,EAAAp3B,OAAA,SAAAo3B,EAAA3/B,MAAA,yBAAA2/B,EAAA5/B,OAAA,GAAA2/B,EAAA,UAErD,gBAAA8D,GAAA,OAAA8pB,EAAAhtD,MAAA,KAAAxI,UAAA,EAVA,IAcD,CAAAY,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MA+BA,SAAAshC,EAAkB6E,GAAW,IAAA78B,EAAAE,EAAA,OAAAhK,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,cAAAwgC,EAAAxgC,KAAA,EACnBhH,KAAKi0D,aAAY,cAAAzsB,EAAAxgC,KAAA,EACF49C,EAASphD,MAAM0xD,kBAAkB,CAClD9oB,YAAapsC,KAAKm1D,uBAAuB/oB,KAC3C,OAID,OANK78B,EAAMi4B,EAAA//B,KAGkB,MAA1B2kC,EAAYyiB,aAEZt/C,EAAO68B,YAAYyiB,WAAaziB,EAAYyiB,YAC/CrnB,EAAAxgC,KAAA,EACoBhH,KAAKo0D,QAAQ,cAAe7kD,GAAO,OAA5C,OAANE,EAAM+3B,EAAA//B,KAAA+/B,EAAAzgC,KAAG,EAAHygC,EAAAx3B,OAAA,SAED40C,EAASzQ,UAAU3zC,KAAKiP,IAAO,cAAA+3B,EAAAzgC,KAAA,GAAAygC,EAAAjgC,GAAAigC,EAAA,SAGhC,IAAInnC,MAAM,0CAADgD,OAA2CoM,IAAS,yBAAA+3B,EAAAhgC,OAAA,GAAA+/B,EAAA,mBAE1E,gBAAA+D,GAAA,OAAA2pB,EAAAltD,MAAA,KAAAxI,UAAA,EA/CD,IA+CC,CAAAY,IAAA,gBAAAC,MAAA,eAAAg1D,EAAAtvD,EAAAL,IAAAQ,MACD,SAAA2hC,EAAoBwE,GAAW,IAAA78B,EAAAE,EAAA,OAAAhK,IAAAoB,MAAA,SAAAghC,GAAA,cAAAA,EAAA9gC,KAAA8gC,EAAA7gC,MAAA,cAAA6gC,EAAA7gC,KAAA,EACrBhH,KAAKi0D,aAAY,cAAApsB,EAAA7gC,KAAA,EACF49C,EAASphD,MAAM0xD,kBAAkB,CAClD9oB,YAAapsC,KAAKm1D,uBAAuB/oB,KAC3C,OAID,OANK78B,EAAMs4B,EAAApgC,KAGkB,MAA1B2kC,EAAYyiB,aAEZt/C,EAAO68B,YAAYyiB,WAAaziB,EAAYyiB,YAC/ChnB,EAAA7gC,KAAA,EACoBhH,KAAKq1D,KAAK,wBAAyB,CACpDnD,EAASoD,mBAAmB/lD,EAAO68B,YAAa,CAAE5rC,MAAM,MAC1D,OAFU,OAANiP,EAAMo4B,EAAApgC,KAAAogC,EAAA9gC,KAAG,EAAH8gC,EAAA73B,OAAA,SAID40C,EAASzQ,UAAU3zC,KAAKiP,IAAO,cAAAo4B,EAAA9gC,KAAA,GAAA8gC,EAAAtgC,GAAAsgC,EAAA,SAGhC,IAAIxnC,MAAM,oDAADgD,OAAqDoM,IAAS,yBAAAo4B,EAAArgC,OAAA,GAAAogC,EAAA,mBAEpF,gBAAAmE,GAAA,OAAAqpB,EAAArtD,MAAA,KAAAxI,UAAA,EAnBA,IAmBA,CAAAY,IAAA,cAAAC,MAAA,eAAAm1D,EAAAzvD,EAAAL,IAAAQ,MACD,SAAA+hC,EAAkBwe,GAAK,IAAAj3C,EAAAimD,EAAA,OAAA/vD,IAAAoB,MAAA,SAAAohC,GAAA,cAAAA,EAAAlhC,KAAAkhC,EAAAjhC,MAAA,OACgB,OAA7BuI,EAASi3C,EAAQ,CAACA,GAAS,GAAEve,EAAAjhC,KAAA,EACfhH,KAAKq1D,KAAK,eAAgB9lD,GAAO,OAA1C,OAALimD,EAAKvtB,EAAAxgC,KAAAwgC,EAAAj4B,OAAA,SACJ40C,EAASzQ,UAAU3zC,KAAKg1D,IAAM,wBAAAvtB,EAAAzgC,OAAA,GAAAwgC,EAAA,UACxC,gBAAAgE,GAAA,OAAAupB,EAAAxtD,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,kBAAAC,MAAA,eAAAq1D,EAAA3vD,EAAAL,IAAAQ,MAcD,SAAAmiC,EAAsB+rB,EAAalJ,EAAQyK,EAAaC,GAAQ,OAAAlwD,IAAAoB,MAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,cAAAshC,EAAAthC,KAAA,EAC/ChH,KAAKq1D,KAAK,wBAAyB,CAC5CzQ,EAASzQ,UAAU3zC,KAAK2zD,GAAazQ,WACrCuH,EACArG,EAASsF,OAAO1mD,MAAM2mD,QAAQuL,GAC9BC,IACF,cAAArtB,EAAAt4B,OAAA,SAAAs4B,EAAA7gC,MAAA,wBAAA6gC,EAAA9gC,OAAA,GAAA4gC,EAAA,UACL,gBAAA6E,EAAAO,EAAAC,EAAAQ,GAAA,OAAAwnB,EAAA1tD,MAAA,KAAAxI,UAAA,EArBA,IAqBA,CAAAY,IAAA,cAAAC,MAAA,eAAAw1D,EAAA9vD,EAAAL,IAAAQ,MACD,SAAAwiC,EAAkBqC,EAAQhhC,GAAK,OAAArE,IAAAoB,MAAA,SAAA8hC,GAAA,cAAAA,EAAA5hC,KAAA4hC,EAAA3hC,MAAA,cAAA2hC,EAAA3hC,KAAA,EACdhH,KAAKq1D,KAAK,wBAAyB,CAACzQ,EAASsF,OAAO1mD,MAAM2mD,QAAQrf,GAAShhC,IAAO,cAAA6+B,EAAA34B,OAAA,SAAA24B,EAAAlhC,MAAA,wBAAAkhC,EAAAnhC,OAAA,GAAAihC,EAAA,UAClG,gBAAA8F,EAAAC,GAAA,OAAAonB,EAAA7tD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,uBAAAC,MAAA,eAAAy1D,EAAA/vD,EAAAL,IAAAQ,MACD,SAAA8iC,EAA2B6iB,GAAa,IAAAkK,EAAA,OAAArwD,IAAAoB,MAAA,SAAAyiC,GAAA,cAAAA,EAAAviC,KAAAuiC,EAAAtiC,MAAA,cAAAsiC,EAAAtiC,KAAA,EAChBhH,KAAKq1D,KAAK,2BAA4B,CAACzJ,IAAe,OAA/D,GACE,OADPkK,EAAKxsB,EAAA7hC,MACM,CAAA6hC,EAAAtiC,KAAA,eAAAsiC,EAAAt5B,OAAA,SACN,MAAI,cAAAs5B,EAAAt5B,OAAA,SAER,CAACnN,SAASizD,EAAM,GAAI,IAAKjzD,SAASizD,EAAM,GAAI,MAAI,wBAAAxsB,EAAA9hC,OAAA,GAAAuhC,EAAA,UAC1D,gBAAA8F,GAAA,OAAAgnB,EAAA9tD,MAAA,KAAAxI,UAAA,EAPA,IAOA,CAAAY,IAAA,yBAAAC,MAAA,eAAA21D,EAAAjwD,EAAAL,IAAAQ,MACD,SAAA8jC,IAAA,OAAAtkC,IAAAoB,MAAA,SAAAmjC,GAAA,cAAAA,EAAAjjC,KAAAijC,EAAAhjC,MAAA,UACShH,KAAK6zD,kBAAkBmC,aAAc,CAAFhsB,EAAAhjC,KAAA,eAAAgjC,EAAAhjC,KAAA,EACQhH,KAAKq1D,KAAK,sBAAuB,IAAG,OAAhFr1D,KAAK6zD,kBAAkBmC,aAAYhsB,EAAAviC,KAAA,cAAAuiC,EAAAh6B,OAAA,SAEhChQ,KAAK6zD,kBAAkBmC,cAAY,wBAAAhsB,EAAAxiC,OAAA,GAAAuiC,EAAA,UAC7C,yBAAAgsB,EAAAhuD,MAAA,KAAAxI,UAAA,EANA,IAMA,CAAAY,IAAA,6BAAAC,MAAA,eAAA61D,EAAAnwD,EAAAL,IAAAQ,MACD,SAAAmkC,IAAA,OAAA3kC,IAAAoB,MAAA,SAAA0jC,GAAA,cAAAA,EAAAxjC,KAAAwjC,EAAAvjC,MAAA,cAAAujC,EAAAvjC,KAAA,EAGiBhH,KAAKq1D,KAAK,0BAA2B,IAAG,cAAA9qB,EAAAv6B,OAAA,SAAAu6B,EAAA9iC,MAAA,wBAAA8iC,EAAA/iC,OAAA,GAAA4iC,EAAA,UACxD,yBAAA6rB,EAAAluD,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,4BAAAC,MAAA,eAAA81D,EAAApwD,EAAAL,IAAAQ,MACD,SAAA4kC,IAAA,IAAAqb,EAAA,OAAAzgD,IAAAoB,MAAA,SAAAkkC,GAAA,cAAAA,EAAAhkC,KAAAgkC,EAAA/jC,MAAA,UACShH,KAAK6zD,kBAAkBsC,cAAe,CAAFprB,EAAA/jC,KAAA,eAAA+jC,EAAA/jC,KAAA,EACfhH,KAAKq1D,KAAK,yBAA0B,IAAG,OAAzDnP,EAASnb,EAAAtjC,KACbzH,KAAK6zD,kBAAkBsC,cAAgBjQ,EAAUkQ,qBACjDp2D,KAAK6zD,kBAAkBwC,cAAgBnQ,EAAUoQ,qBAAqB,cAAAvrB,EAAA/6B,OAAA,SAEnE,CACHs2C,QAAStmD,KAAK6zD,kBAAkBsC,cAChCxH,QAAS3uD,KAAK6zD,kBAAkBwC,gBACnC,wBAAAtrB,EAAAvjC,OAAA,GAAAqjC,EAAA,UACJ,yBAAAqrB,EAAAnuD,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,qBAAAC,MAAA,eAAAm2D,EAAAzwD,EAAAL,IAAAQ,MACD,SAAAklC,IAAA,IAAAqrB,EAAAC,EAAAC,EAAAC,EAAAp3D,UAAA,OAAAkG,IAAAoB,MAAA,SAAAukC,GAAA,cAAAA,EAAArkC,KAAAqkC,EAAApkC,MAAA,OAA+C,OAAtBwvD,EAAKG,EAAAn3D,OAAA,QAAAC,IAAAk3D,EAAA,GAAAA,EAAA,GAAG,EAAGF,EAAKE,EAAAn3D,OAAA,QAAAC,IAAAk3D,EAAA,GAAAA,EAAA,GAAG,IAAGvrB,EAAApkC,KAAA,EACtBhH,KAAKq1D,KAAK,yBAA0B,CAACmB,EAAOC,IAAO,OAA5D,OAANC,EAAMtrB,EAAA3jC,KAAA2jC,EAAAp7B,OAAA,SACL0mD,EAAO7pD,KAAI,SAAC25C,GAAK,OAAAzxC,EAAA,CAAQ7S,QAASskD,EAAMoQ,WAAcpQ,EAAK,KAAI,wBAAApb,EAAA5jC,OAAA,GAAA2jC,EAAA,UACzE,yBAAAorB,EAAAxuD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,gBAAAC,MAAA,eAAAy2D,EAAA/wD,EAAAL,IAAAQ,MACD,SAAAulC,EAAoBgb,GAAK,OAAA/gD,IAAAoB,MAAA,SAAA8kC,GAAA,cAAAA,EAAA5kC,KAAA4kC,EAAA3kC,MAAA,cAAA2kC,EAAA3kC,KAAA,EACRhH,KAAKq1D,KAAK,oBAAqB,CAAC7O,IAAO,cAAA7a,EAAA37B,OAAA,SAAA27B,EAAAlkC,MAAA,wBAAAkkC,EAAAnkC,OAAA,GAAAgkC,EAAA,UACvD,gBAAA2D,GAAA,OAAA0nB,EAAA9uD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,wBAAAC,MAAA,eAAA02D,EAAAhxD,EAAAL,IAAAQ,MACD,SAAAimC,EAA4BhqC,GAAO,IAAA60D,EAAAvQ,EAAA,OAAA/gD,IAAAoB,MAAA,SAAA2lC,GAAA,cAAAA,EAAAzlC,KAAAylC,EAAAxlC,MAAA,cAAAwlC,EAAAxlC,KAAA,EACVhH,KAAKq1D,KAAK,4BAA6B,CAACnzD,IAAS,OACtE,IAASskD,KADLuQ,EAAQvqB,EAAA/kC,KAERsvD,EAASvQ,GAAS5B,EAASzQ,UAAU3zC,KAAKu2D,EAASvQ,IACtD,OAAAha,EAAAx8B,OAAA,SACM+mD,GAAQ,wBAAAvqB,EAAAhlC,OAAA,GAAA0kC,EAAA,UAClB,gBAAAkD,GAAA,OAAA0nB,EAAA/uD,MAAA,KAAAxI,UAAA,EAPA,IAOA,CAAAY,IAAA,YAAAC,MAAA,eAAA42D,EAAAlxD,EAAAL,IAAAQ,MACD,SAAAknC,IAAA,IAAAzhC,EAAA,OAAAjG,IAAAoB,MAAA,SAAAumC,GAAA,cAAAA,EAAArmC,KAAAqmC,EAAApmC,MAAA,cAAAomC,EAAApmC,KAAA,EACsBhH,KAAKq1D,KAAK,gBAAiB,IAAG,OAAvC,OAAH3pD,EAAG0hC,EAAA3lC,KAAA2lC,EAAAp9B,OAAA,SACF40C,EAASzQ,UAAU3zC,KAAKkL,GAAKg4C,YAAU,wBAAAtW,EAAA5lC,OAAA,GAAA2lC,EAAA,UACjD,yBAAA6pB,EAAAjvD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,mBAAAC,MAAA,eAAA62D,EAAAnxD,EAAAL,IAAAQ,MACD,SAAA0nC,IAAA,IAAAjwB,EAAA,OAAAjY,IAAAoB,MAAA,SAAAgnC,GAAA,cAAAA,EAAA9mC,KAAA8mC,EAAA7mC,MAAA,cAAA6mC,EAAA7mC,KAAA,EACyBhH,KAAKq1D,KAAK,oBAAqB,IAAG,OAA3C,OAAN33C,EAAMmwB,EAAApmC,KAAAomC,EAAA79B,OAAA,SACL40C,EAASzQ,UAAU3zC,KAAKkd,GAAQgmC,YAAU,wBAAA7V,EAAArmC,OAAA,GAAAmmC,EAAA,UACpD,yBAAAspB,EAAAlvD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,oBAAAC,MAAA,eAAA82D,EAAApxD,EAAAL,IAAAQ,MACD,SAAAkoC,EAAwBzwB,GAAM,OAAAjY,IAAAoB,MAAA,SAAAwnC,GAAA,cAAAA,EAAAtnC,KAAAsnC,EAAArnC,MAAA,cAAAqnC,EAAArnC,KAAA,EACbhH,KAAKq1D,KAAK,wBAAyB,CAAC33C,IAAQ,cAAA2wB,EAAAr+B,OAAA,SAAAq+B,EAAA5mC,MAAA,wBAAA4mC,EAAA7mC,OAAA,GAAA2mC,EAAA,UAC5D,gBAAAsB,GAAA,OAAAynB,EAAAnvD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+2D,EAAArxD,EAAAL,IAAAQ,MACD,SAAAyoC,EAAsBhxB,GAAM,OAAAjY,IAAAoB,MAAA,SAAA8nC,GAAA,cAAAA,EAAA5nC,KAAA4nC,EAAA3nC,MAAA,cAAA2nC,EAAA3nC,KAAA,EACXhH,KAAKq1D,KAAK,sBAAuB,CAAC33C,IAAQ,cAAAixB,EAAA3+B,OAAA,SAAA2+B,EAAAlnC,MAAA,wBAAAknC,EAAAnnC,OAAA,GAAAknC,EAAA,UAC1D,gBAAAoB,GAAA,OAAAqnB,EAAApvD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,wBAAAC,MAAA,eAAAg3D,EAAAtxD,EAAAL,IAAAQ,MACD,SAAA8oC,EAA4BjE,GAAM,OAAArlC,IAAAoB,MAAA,SAAAooC,GAAA,cAAAA,EAAAloC,KAAAkoC,EAAAjoC,MAAA,cAAAioC,EAAAjoC,KAAA,EACjBhH,KAAKq1D,KAAK,4BAA6B,CAACvqB,IAAQ,cAAAmE,EAAAj/B,OAAA,SAAAi/B,EAAAxnC,MAAA,wBAAAwnC,EAAAznC,OAAA,GAAAunC,EAAA,UAChE,gBAAAgB,GAAA,OAAAqnB,EAAArvD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,gBAAAC,MAAA,eAAAi3D,EAAAvxD,EAAAL,IAAAQ,MACD,SAAAqpC,EAAoBlD,GAAW,IAAAzpB,EAAAohC,EAAA18B,EAAA28B,EAAAF,EAAAwT,EAAAC,EAAAC,EAAA,OAAA/xD,IAAAoB,MAAA,SAAA0oC,GAAA,cAAAA,EAAAxoC,KAAAwoC,EAAAvoC,MAAA,OAGE,GAChB,OADF88C,EAAEt3C,OAAAwyB,OAAA,IAAAylB,EAAKrY,GAAAA,KACXte,IAAyB,MAAXg2B,EAAGtjD,KAAY,CAAA+uC,EAAAvoC,KAAA,cAC1B,IAAI3G,MAAM,0CAAyC,OAIwB,GAFpE,QAAhBsiB,EAAKmhC,EAAGh2B,UAAuB,IAAPnL,IAAsBmhC,EAAGh2B,GAAKg2B,EAAGtjD,MAClC,QAAvBujD,EAAKD,EAAGmB,iBAA8B,IAAPlB,IAAsBD,EAAGmB,UAAY,CAAC,GAClC,QAAnC59B,GAAM28B,EAAKF,EAAGmB,WAAWzkD,YAAyB,IAAP6mB,IAAsB28B,EAAGxjD,KAAOsjD,EAAGtjD,QAC3E,EAAI1B,EAAQ8nD,OAAO9C,EAAG0C,OAAQ,CAAFjX,EAAAvoC,KAAA,SAImC,GAH1D88C,EAAGmB,UAAU7kD,QACd0jD,EAAGmB,UAAU7kD,MAAQ0jD,EAAGxwC,QAERsxC,EAASzQ,UAAU3zC,KAAKsjD,EAAGmB,UAAU7kD,OACxCq3D,GAAG3T,EAAGxwC,QAAS,CAAFi8B,EAAAvoC,KAAA,eAGpB,IAAI3G,MAAM,oDAAmD,QAEoB,OAArFi3D,EAAazS,EAAY6S,iBAAiB3R,QAAQjnD,EAAQ64D,qBAAsB33D,MAAKuvC,EAAAv/B,OAAA,SACpFsnD,EAAW3N,oBAAoBiO,SAAS9T,EAAGh2B,GAAIg2B,EAAGmB,YAAU,WAE/C,MAApBnB,EAAGuD,cAAqB,CAAA9X,EAAAvoC,KAAA,gBAAAuoC,EAAAvoC,KAAA,GACFhH,KAAKmmD,4BAA2B,QAAhDoR,EAAOhoB,EAAA9nC,KACbq8C,EAAGuD,cAAgBkQ,EAAQ5I,QAAQ,QAEoC,OAArE6I,EAAS3S,EAAY0H,iBAAiBxG,QAAQjC,EAAGuD,cAAernD,MAAKuvC,EAAAv/B,OAAA,SACpEwnD,EAAO7N,oBAAoBiO,SAAS9T,EAAGh2B,GAAIg2B,EAAG0C,MAAO1C,EAAGxwC,OAAQwwC,EAAGmB,YAAU,yBAAA1V,EAAA/nC,OAAA,GAAA8nC,EAAA,UACvF,gBAAAc,GAAA,OAAAinB,EAAAtvD,MAAA,KAAAxI,UAAA,EA9BA,IA8BA,CAAAY,IAAA,sBAAAC,MAAA,eAAAy3D,EAAA/xD,EAAAL,IAAAQ,MACD,SAAA0pC,EAA0BvD,GAAW,IAAA6iB,EAAA,OAAAxpD,IAAAoB,MAAA,SAAA+oC,GAAA,cAAAA,EAAA7oC,KAAA6oC,EAAA5oC,MAAA,cAAA4oC,EAAA5oC,KAAA,EACRhH,KAAKkvD,cAAc9iB,GAAY,OAAxC,OAAV6iB,EAAUrf,EAAAnoC,KAAAmoC,EAAA5oC,KAAG,EACNhH,KAAKyjD,YAAYwL,GAAW,cAAArf,EAAA5/B,OAAA,SAAA4/B,EAAAnoC,MAAA,wBAAAmoC,EAAApoC,OAAA,GAAAmoC,EAAA,UAC5C,gBAAAU,GAAA,OAAAwnB,EAAA9vD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,gBAAAC,MAAA,eAAA03D,EAAAhyD,EAAAL,IAAAQ,MACD,SAAAgqC,EAAoB7D,GAAW,IAAAzpB,EAAAohC,EAAA18B,EAAAy8B,EAAA0C,EAAA,OAAA/gD,IAAAoB,MAAA,SAAAqpC,GAAA,cAAAA,EAAAnpC,KAAAmpC,EAAAlpC,MAAA,OAK0D,GAF1E88C,EAAEt3C,OAAAwyB,OAAA,IAAAylB,EAAKrY,GAAAA,IACM,QAAvBzpB,EAAKmhC,EAAGmB,iBAA8B,IAAPtiC,IAAsBmhC,EAAGmB,UAAY,CAAC,GAClC,QAAnClB,GAAM18B,EAAKy8B,EAAGmB,WAAWzkD,YAAyB,IAAPujD,IAAsB18B,EAAG7mB,KAAOsjD,EAAGtjD,MAC/D,MAAZsjD,EAAG0C,OAAiB1C,EAAG0C,OAAS1nD,EAAQ6nD,YAAW,CAAAzW,EAAAlpC,KAAA,gBAAAkpC,EAAA3oC,GAAAwN,EAAAm7B,EAAAtoC,GAAAmN,EAAAm7B,EAAA3xB,GAAA,GAAA2xB,EAAAlpC,KAAA,EAErC49C,EAASsF,OAAO1mD,MAAM0xD,kBAAkBpR,EAAGmB,WAAU,OAE/C,OAF+C/U,EAAA1mB,GAAA0mB,EAAAzoC,KAAAyoC,EAAAzmB,IAAA,EAAAymB,EAAAtoC,IAAAsoC,EAAA3xB,GAAA2xB,EAAA1mB,IAAA0mB,EAAAxmB,GAAA,GAAAwmB,EAAAgK,GAAA,CAC/DpsB,GAAIg2B,EAAGh2B,GACP1tB,MAAO0jD,EAAGxwC,QAAM48B,EAAAlgC,OAAA,YAAAkgC,EAAA3oC,IAAA2oC,EAAAzmB,GAAAymB,EAAAxmB,GAAAwmB,EAAAgK,KAAA,QAImD,OAAjEsM,EAAQ3B,EAAYiC,sBAAsBf,QAAQjC,EAAG0C,MAAOxmD,MAAKkwC,EAAAlpC,KAAA,GAC1Dw/C,EAAMmD,oBAAoBoO,SAASjU,EAAGh2B,GAAIg2B,EAAGxwC,OAAQwwC,EAAGmB,WAAU,eAAA/U,EAAAlgC,OAAA,SAAAkgC,EAAAzoC,MAAA,yBAAAyoC,EAAA1oC,OAAA,GAAAyoC,EAAA,UAEtF,gBAAAW,GAAA,OAAAknB,EAAA/vD,MAAA,KAAAxI,UAAA,EAlBA,IAkBA,CAAAY,IAAA,sBAAAC,MAAA,eAAA43D,EAAAlyD,EAAAL,IAAAQ,MACD,SAAAsqC,EAA0BnE,GAAW,IAAAijB,EAAA,OAAA5pD,IAAAoB,MAAA,SAAA6pC,GAAA,cAAAA,EAAA3pC,KAAA2pC,EAAA1pC,MAAA,cAAA0pC,EAAA1pC,KAAA,EACRhH,KAAKsvD,cAAcljB,GAAY,OAAxC,OAAVijB,EAAU3e,EAAAjpC,KAAAipC,EAAA1pC,KAAG,EACNhH,KAAKyjD,YAAY4L,GAAW,cAAA3e,EAAA1gC,OAAA,SAAA0gC,EAAAjpC,MAAA,wBAAAipC,EAAAlpC,OAAA,GAAA+oC,EAAA,UAC5C,gBAAAM,GAAA,OAAAmnB,EAAAjwD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,YAAAC,MAAA,eAAA63D,EAAAnyD,EAAAL,IAAAQ,MAKD,SAAA8qC,EAAgBuZ,GAAM,IAAAv5C,EAAA,OAAAtL,IAAAoB,MAAA,SAAAoqC,GAAA,cAAAA,EAAAlqC,KAAAkqC,EAAAjqC,MAAA,cAAAiqC,EAAAjqC,KAAA,EACHsjD,EAAM,OAAf,OAANA,EAAMrZ,EAAAxpC,KAAAwpC,EAAAjqC,KAAG,EACQhH,KAAKq1D,KAAK,gBAAiB,CAACr1D,KAAKk4D,eAAe5N,KAAS,OAAlE,OAAFv5C,EAAEkgC,EAAAxpC,KAAAwpC,EAAAjhC,OAAA,SACD40C,EAASzQ,UAAU3zC,KAAKuQ,IAAG,wBAAAkgC,EAAAzpC,OAAA,GAAAupC,EAAA,UACrC,gBAAAI,GAAA,OAAA8mB,EAAAlwD,MAAA,KAAAxI,UAAA,EATA,IASA,CAAAY,IAAA,iBAAAC,MAAA,eAAA+3D,EAAAryD,EAAAL,IAAAQ,MACD,SAAAqrC,IAAA,IAAAvgC,EAAA,OAAAtL,IAAAoB,MAAA,SAAA6qC,GAAA,cAAAA,EAAA3qC,KAAA2qC,EAAA1qC,MAAA,cAAA0qC,EAAA1qC,KAAA,EACqBhH,KAAKq1D,KAAK,qBAAsB,IAAG,OAA5C,OAAFtkD,EAAE2gC,EAAAjqC,KAAAiqC,EAAA1hC,OAAA,SACD40C,EAASzQ,UAAU3zC,KAAKuQ,IAAG,wBAAA2gC,EAAAlqC,OAAA,GAAA8pC,EAAA,UACrC,yBAAA6mB,EAAApwD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,+BAAAC,MAAA,eAAAg4D,EAAAtyD,EAAAL,IAAAQ,MACD,SAAA8rC,IAAA,IAAAhhC,EAAA,OAAAtL,IAAAoB,MAAA,SAAAmrC,GAAA,cAAAA,EAAAjrC,KAAAirC,EAAAhrC,MAAA,cAAAgrC,EAAAhrC,KAAA,EACqBhH,KAAKq1D,KAAK,kCAAmC,IAAG,OAAzD,OAAFtkD,EAAEihC,EAAAvqC,KAAAuqC,EAAAhiC,OAAA,SACD40C,EAASzQ,UAAU3zC,KAAKuQ,IAAG,wBAAAihC,EAAAxqC,OAAA,GAAAuqC,EAAA,UACrC,yBAAAqmB,EAAArwD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,mBAAAC,MAAA,eAAAi4D,EAAAvyD,EAAAL,IAAAQ,MACD,SAAAosC,EAAuBimB,GAAG,IAAAjO,EAAA,OAAA5kD,IAAAoB,MAAA,SAAA0rC,GAAA,cAAAA,EAAAxrC,KAAAwrC,EAAAvrC,MAAA,cAAAurC,EAAAvrC,KAAA,EACHhH,KAAKq1D,KAAK,uBAAwB,CAACiD,EAAIC,gBAAe,OAA/D,OAAJlO,EAAI9X,EAAA9qC,KAAA8qC,EAAAviC,OAAA,SACgB,kBAAZq6C,EAAK,GAAkBA,EAAOrqD,KAAKw4D,WAAWnO,IAAK,wBAAA9X,EAAA/qC,OAAA,GAAA6qC,EAAA,UACpE,gBAAAjB,GAAA,OAAAinB,EAAAtwD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,UAAAC,MAAA,eAAAq4D,EAAA3yD,EAAAL,IAAAQ,MACD,SAAA6sC,IAAA,IAAAwX,EAAAD,EAAAqO,EAAAn5D,UAAA,OAAAkG,IAAAoB,MAAA,SAAAssC,GAAA,cAAAA,EAAApsC,KAAAosC,EAAAnsC,MAAA,OAAyB,OAAXsjD,EAAMoO,EAAAl5D,OAAA,QAAAC,IAAAi5D,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACvlB,EAAAnsC,KAAA,EACNsjD,EAAM,OAAf,OAANA,EAAMnX,EAAA1rC,KAAA0rC,EAAAnsC,KAAG,EACUhH,KAAKq1D,KAAK,cAAe,CAACr1D,KAAKk4D,eAAe5N,KAAS,OAAhE,OAAJD,EAAIlX,EAAA1rC,KAAA0rC,EAAAnjC,OAAA,SACHhQ,KAAKw4D,WAAWnO,IAAK,wBAAAlX,EAAA3rC,OAAA,GAAAsrC,EAAA,UAC/B,yBAAA2lB,EAAA1wD,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,aAAAC,MACD,SAAWiqD,GACP,OAAOiJ,EAAUqF,QAAQ34D,KAAK4zD,UAAUgF,UAAU93B,KAAK9gC,KAAK4zD,WAArDN,CAAiEjJ,EAC5E,GAAC,CAAAlqD,IAAA,iBAAAC,MACD,SAAekqD,GACX,OAAAv1C,EAAAA,EAAA,GACOu1C,GAAM,IACTuO,UAA+B,MAApBvO,EAAOuO,UAAoB,KAAO74D,KAAK4zD,UAAUnN,SAAS6D,EAAOuO,WAC5EC,QAA6B,MAApBxO,EAAOuO,UAAoB,KAAO74D,KAAK4zD,UAAUnN,SAAS6D,EAAOwO,UAElF,GAAC,CAAA34D,IAAA,mBAAAC,MACD,SAAiB0jD,EAAIthD,GAAM,IAAAu2D,EAAA,KACjBC,EAAQtzD,EAAAC,EAAAusD,EAAAjoD,WAAA,yBAAA9C,KAAA,KAA0B28C,EAAIthD,GAa5C,OAZAw2D,EAASC,aAAYnzD,EAAAL,IAAAQ,MAAG,SAAA2tC,IAAA,IAAAmW,EAAAmP,EAAA,OAAAzzD,IAAAoB,MAAA,SAAAotC,GAAA,cAAAA,EAAAltC,KAAAktC,EAAAjtC,MAAA,cAAAitC,EAAAjtC,KAAA,EACEgyD,EAASxQ,OAAM,OAA/BuB,EAAO9V,EAAAxsC,KAAA,OACF,OAAAwsC,EAAAjtC,KAAA,EACa+xD,EAAKI,SAAS,aAAY,OAAnC,GAALD,EAAKjlB,EAAAxsC,OACPsiD,EAAQoK,aAAe+E,EAAMx7C,QAAM,CAAAu2B,EAAAjtC,KAAA,gBAAAitC,EAAAjtC,KAAA,GACtB+xD,EAAK3O,sBAAsBL,EAAQiK,iBAAgB,eAAA/f,EAAAjkC,OAAA,SAAAikC,EAAAxsC,MAAA,eAAAwsC,EAAAjtC,KAAA,IAG1D,EAAIlI,EAAQs6D,OAAOL,EAAKpF,iBAAgB,QAAA1f,EAAAjtC,KAAA,iCAAAitC,EAAAzsC,OAAA,GAAAosC,EAAA,KAInDolB,CACX,GACA,CAAA74D,IAAA,uBAAAC,MAAA,eAAAi5D,EAAAvzD,EAAAL,IAAAQ,MACA,SAAAwuC,EAA2B3J,GAAM,IAAAgZ,EAAAwV,EAAA,OAAA7zD,IAAAoB,MAAA,SAAA+tC,GAAA,cAAAA,EAAA7tC,KAAA6tC,EAAA5tC,MAAA,cAAA4tC,EAAA5tC,KAAA,EACZhH,KAAKwtD,eAAe1iB,GAAO,OAApC,GACE,OADJgZ,EAAElP,EAAAntC,MACM,CAAAmtC,EAAA5tC,KAAA,eAAA4tC,EAAA5kC,OAAA,SACHmD,EAAQomD,kBAAkBC,UAAQ,UAEvB,MAAlB1V,EAAGqQ,YAAmB,CAAAvf,EAAA5tC,KAAA,eAAA4tC,EAAA5kC,OAAA,SACfmD,EAAQomD,kBAAkBE,YAAU,cAAA7kB,EAAA5tC,KAAA,EAEnBhH,KAAKm5D,SAAS,aAAY,OAAnC,GAAbG,EAAa1kB,EAAAntC,OACfq8C,EAAGqQ,aAAemF,EAAc57C,QAAM,CAAAk3B,EAAA5tC,KAAA,gBAAA4tC,EAAA5kC,OAAA,SAC/BmD,EAAQomD,kBAAkBG,WAAS,eAAA9kB,EAAA5kC,OAAA,SAEvCmD,EAAQomD,kBAAkBI,WAAS,yBAAA/kB,EAAAptC,OAAA,GAAAitC,EAAA,UAC7C,gBAAA7C,GAAA,OAAAynB,EAAAtxD,MAAA,KAAAxI,UAAA,EAdD,IAcC,CAAAY,IAAA,iBAAAC,MAAA,eAAAw5D,EAAA9zD,EAAAL,IAAAQ,MACD,SAAA4zD,EAAqBr3D,GAAI,IAAAshD,EAAA,OAAAr+C,IAAAoB,MAAA,SAAAizD,GAAA,cAAAA,EAAA/yD,KAAA+yD,EAAA9yD,MAAA,cAAA8yD,EAAA9yD,KAAA,EACRxE,EAAI,OAAb,OAAJA,EAAIs3D,EAAAryD,KAAAqyD,EAAA9yD,KAAG,EAAHtB,EAAAC,EAAAusD,EAAAjoD,WAAA,uBAAA9C,KAAA,KACkC3E,GAAI,OAAlC,OAAFshD,EAAEgW,EAAAryD,KAAAqyD,EAAA9pD,OAAA,SACD8zC,EAAK9jD,KAAKmvD,iBAAiBrL,EAAIthD,GAAQ,MAAI,wBAAAs3D,EAAAtyD,OAAA,GAAAqyD,EAAA,UACrD,gBAAAhoB,GAAA,OAAA+nB,EAAA7xD,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,kBAAAC,MAAA,eAAA25D,EAAAj0D,EAAAL,IAAAQ,MACD,SAAA+zD,EAAsB5tB,GAAW,OAAA3mC,IAAAoB,MAAA,SAAAozD,GAAA,cAAAA,EAAAlzD,KAAAkzD,EAAAjzD,MAAA,cAAAizD,EAAAjzD,KAAA,EAAAtB,EAAAC,EAAAusD,EAAAjoD,WAAA,wBAAA9C,KAAA,KACOilC,GAAW,cAAA6tB,EAAAjqD,OAAA,SAAAiqD,EAAAxyD,MAAA,wBAAAwyD,EAAAzyD,OAAA,GAAAwyD,EAAA,UAClD,gBAAA9nB,GAAA,OAAA6nB,EAAAhyD,MAAA,KAAAxI,UAAA,EAHA,IAGA,CAAAY,IAAA,iCAAAC,MAAA,eAAA85D,EAAAp0D,EAAAL,IAAAQ,MACD,SAAAk0D,EAAqCC,GAAY,IAAArQ,EAAAsQ,EAAA/F,EAAA,OAAA7uD,IAAAoB,MAAA,SAAAyzD,GAAA,cAAAA,EAAAvzD,KAAAuzD,EAAAtzD,MAAA,cAAAszD,EAAAtzD,KAAA,EACvBozD,EAAa5R,OAAM,OACkB,OADrDuB,EAAOuQ,EAAA7yD,KAAA6yD,EAAA/yD,GACMzI,EAAQy7D,wBAAuBD,EAAA1yD,GAAEmiD,EAAOuQ,EAAAtzD,KAAA,EAAQhH,KAAK6lD,yBAAwB,OAAAyU,EAAA/7C,GAAA+7C,EAAA7yD,KAA1F4yD,GAAS,EAAHC,EAAA/yD,IAAA+yD,EAAA1yD,GAAA0yD,EAAA/7C,IACR+1C,EAAS,KAAI,eAAAgG,EAAAtzD,KAAA,GAEEhH,KAAKw6D,qBAAqBH,GAAO,QAA1C,OAAN/F,EAAMgG,EAAA7yD,KAAA6yD,EAAAtzD,KAAG,IACH,EAAIlI,EAAQs6D,OAAOp5D,KAAK2zD,iBAAgB,WACzCW,GAAUnhD,EAAQomD,kBAAkBC,SAAQ,CAAAc,EAAAtzD,KAAA,wBAAAszD,EAAAtzD,KAAA,GACxChH,KAAKwtD,eAAe6M,GAAO,eAAAC,EAAAtqD,OAAA,SAAAsqD,EAAA7yD,MAAA,yBAAA6yD,EAAA9yD,OAAA,GAAA2yD,EAAA,UAC3C,gBAAAhoB,GAAA,OAAA+nB,EAAAnyD,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,wBAAAC,MAAA,eAAAq6D,EAAA30D,EAAAL,IAAAQ,MACD,SAAAy0D,EAA4BN,GAAY,IAAAO,EAAAC,EAAA,YAAAn1D,IAAAoB,MAAA,SAAAg0D,GAAA,cAAAA,EAAA9zD,KAAA8zD,EAAA7zD,MAAA,OAUlC,OATI2zD,EAAU5lD,EAAA,GAAQqlD,IACbU,aAAeH,EAAWnS,KACrCmS,EAAWnS,KAAI1iD,EAAAL,IAAAQ,MAAG,SAAA80D,IAAA,IAAAC,EAAA,OAAAv1D,IAAAoB,MAAA,SAAAo0D,GAAA,cAAAA,EAAAl0D,KAAAk0D,EAAAj0D,MAAA,cAAAi0D,EAAAj0D,KAAA,EACK4zD,EAAKM,+BAA+Bd,GAAa,OAA1D,OAAJY,EAAIC,EAAAxzD,KAAAwzD,EAAAj0D,KAAG,EACAg0D,EAAKxS,OAAM,cAAAyS,EAAAjrD,OAAA,SAAAirD,EAAAxzD,MAAA,wBAAAwzD,EAAAzzD,OAAA,GAAAuzD,EAAA,KAE5BJ,EAAW1B,aAAYnzD,EAAAL,IAAAQ,MAAG,SAAAk1D,IAAA,IAAAH,EAAA,OAAAv1D,IAAAoB,MAAA,SAAAu0D,GAAA,cAAAA,EAAAr0D,KAAAq0D,EAAAp0D,MAAA,cAAAo0D,EAAAp0D,KAAA,EACH4zD,EAAKM,+BAA+Bd,GAAa,OAA1D,OAAJY,EAAII,EAAA3zD,KAAA2zD,EAAAp0D,KAAG,EACAg0D,EAAK/B,eAAc,cAAAmC,EAAAprD,OAAA,SAAAorD,EAAA3zD,MAAA,wBAAA2zD,EAAA5zD,OAAA,GAAA2zD,EAAA,KAClCN,EAAA7qD,OAAA,SACK2qD,GAAU,wBAAAE,EAAArzD,OAAA,GAAAkzD,EAAA,KACpB,gBAAA9nB,GAAA,OAAA6nB,EAAA1yD,MAAA,KAAAxI,UAAA,EAbA,IAaA,CAAAY,IAAA,yBAAAC,MAAA,eAAAi7D,EAAAv1D,EAAAL,IAAAQ,MACD,SAAAq1D,EAA6Bp5D,GAAO,IAAAq5D,EAAAl1D,EAAA,OAAAZ,IAAAoB,MAAA,SAAA20D,GAAA,cAAAA,EAAAz0D,KAAAy0D,EAAAx0D,MAAA,OACkF,OAA5Gu0D,EAAmB,IAAI3W,EAAS4K,SAAS1wD,EAAQ+xD,0BAA2B/xD,EAAQixD,kBAAmB/vD,MAAKw7D,EAAAx0D,KAAA,EAC/Fu0D,EAAiBE,eAAev5D,GAAQ,OAAjD,OAAJmE,EAAIm1D,EAAA/zD,KAAA+zD,EAAAxrD,OAAA,SACH,CACH0rD,mBAAoBr1D,EAAKq1D,mBACzBC,cAAet1D,EAAKs1D,gBACvB,wBAAAH,EAAAh0D,OAAA,GAAA8zD,EAAA,UACJ,gBAAA7nB,GAAA,OAAA4nB,EAAAtzD,MAAA,KAAAxI,UAAA,EARA,IASD,CAAAY,IAAA,wBAAAC,MAAA,eAAAw7D,EAAA91D,EAAAL,IAAAQ,MACA,SAAA41D,EAA4BzvB,GAAW,IAAAzpB,EAAAohC,EAAA8K,EAAAiN,EAAA,OAAAr2D,IAAAoB,MAAA,SAAAk1D,GAAA,cAAAA,EAAAh1D,KAAAg1D,EAAA/0D,MAAA,OAYlC,OAVwC,QAAxC2b,EAAKypB,EAAYyb,yBAAsC,IAAPllC,IAAsBypB,EAAYyb,kBAAoB/oD,EAAQgpD,yCAIjF,QAA7B/D,EAAK3X,EAAY4vB,cAA2B,IAAPjY,IAAsB3X,EAAY4vB,OAASpX,EAASsF,OAAOkI,OAAO6J,eAAe/5D,SACjH2sD,EAAa,CACfhH,kBAAmBzb,EAAYyb,mBAE/Bzb,EAAY8hB,aACZ1hD,OAAOwyB,OAAO6vB,EAAY,CAAEX,YAAa9hB,EAAY8hB,cACxD6N,EAAA/0D,KAAA,EACiBhH,KAAKk8D,cAAc,CACjC17D,KAAM4rC,EAAY4vB,OAClB31D,KAAM+lC,EAAYod,SAClB17B,GAAIse,EAAYmd,gBAChBnpD,MAAOgsC,EAAYqd,QACnBoF,WAAAA,IACF,OANO,OAAHiN,EAAGC,EAAAt0D,KAAAs0D,EAAA/rD,OAAA,SAOF8rD,GAAG,wBAAAC,EAAAv0D,OAAA,GAAAq0D,EAAA,UACb,gBAAAnoB,GAAA,OAAAkoB,EAAA7zD,MAAA,KAAAxI,UAAA,EAtBD,KAsBC,EAAAY,IAAA,eAAAC,MA7ZD,WACI,GAAwB,MAApBqzD,EAA0B,CAE1B,IAAM/1C,GADN+1C,EAAmB,IAAIH,GACS51C,OAAOojB,KAAK2yB,GACtC/uC,EAAU+uC,EAAiB/uC,QAAQoc,KAAK2yB,GACxCjxD,EAAOixD,EAAiBjxD,KAAKs+B,KAAK2yB,GAClCvxD,EAAUuxD,EAAiBvxD,QAAQ4+B,KAAK2yB,GAC9CA,EAAiB0I,QAAQC,WAAWxQ,cAAgB0H,EAAU+I,UAAU3+C,GACxE+1C,EAAiB0I,QAAQG,UAAY,CACjCnI,YAAaz2C,EACb62C,UAAW/xD,EACXopD,cAAe0H,EAAU+I,UAAU3+C,GACnC6+C,iBAAkB7+C,EAClB8+C,QAAS9+C,EACT++C,UAAW/3C,EACXumC,OAAQ/oD,EACR/B,IAAKqC,EACLpC,MAAOoC,EACPwxD,gBAAiBxxD,EACjBmzD,SAAUj4C,GAEd+1C,EAAiB0I,QAAQpS,QAAQ6B,cAAgB0H,EAAU+I,UAAU3+C,GACrE+1C,EAAiB0I,QAAQpS,QAAQW,eAAiB4I,EAAU+I,UAAU3+C,GACtE+1C,EAAiB0I,QAAQpS,QAAQiB,WAAasI,EAAUqF,SAAQ,SAACv4D,GAAK,OAAKkzD,EAAUoJ,MAAMjJ,EAAiB0I,QAAQG,UAAWl8D,EAAM,IACrIqzD,EAAiB0I,QAAQjD,MAAMtN,cAAgB0H,EAAU+I,UAAU3+C,GACnE+1C,EAAiB0I,QAAQjD,MAAMyD,iBAAmBrJ,EAAU+I,UAAU3+C,GACtE+1C,EAAiB0I,QAAQS,sBAAsBhR,cAAgB0H,EAAU+I,UAAU3+C,GACnF+1C,EAAiB0I,QAAQS,sBAAsBD,iBAAmBrJ,EAAU+I,UAAU3+C,GACtF+1C,EAAiB0I,QAAQ/vB,YAAYwf,cAAgB0H,EAAU+I,UAAU3+C,GACzE+1C,EAAiB0I,QAAQ/vB,YAAYse,eAAiB4I,EAAU+I,UAAU3+C,GAC1E+1C,EAAiB0I,QAAQvD,UAAUhN,cAAgB0H,EAAU+I,UAAU3+C,EAC3E,CACA,OAAO+1C,CACX,GAAC,CAAAtzD,IAAA,qBAAAC,MAyCD,SAA0BgsC,EAAaywB,GACnC,IAAIl6C,EACElT,EAASm1C,EAASsF,OAAOqJ,UAAUuJ,gBAAgBxH,mBAAmBlpB,EAAWr3B,EAAAA,EAAA,GAChF8nD,GAAU,IACbhO,YAAY,EACZruD,MAAM,KAEV,OAA8B,MAA1B4rC,EAAYyiB,aAGhBp/C,EAAOstD,WAAa,CAChBjO,cAAelK,EAASphD,MAAMw5D,SAAyD,QAA/Cr6C,EAAKypB,EAAYyiB,WAAWC,qBAAkC,IAAPnsC,EAAgBA,EAAK,IAExHypB,EAAYx7B,KAAO9R,EAAQ8xD,eACvBxkB,EAAYyiB,WAAWX,cAEvBz+C,EAAOstD,WAAW7O,YAAc9hB,EAAYyiB,WAAWX,YAAYrhD,KAAI,SAACowD,GAAG,OAG3E37D,MAAMd,KAAKokD,EAASphD,MAAM6gD,SAAS4Y,GAAK,KAExC7wB,EAAYyiB,WAAWqO,kBAEvBztD,EAAOstD,WAAWG,gBAAkB,CAChC7J,UAAWzO,EAASphD,MAAM2mD,QAAQ/d,EAAYyiB,WAAWqO,gBAAgB7J,WACzEL,eAAgB1xD,MAAMd,KAAKokD,EAASphD,MAAM6gD,SAASjY,EAAYyiB,WAAWqO,gBAAgBlK,oBAjBvFvjD,CAqBf,GAAC,CAAAtP,IAAA,qBAAAC,MAsLD,WAEI,OAAO,IAAI8xD,EAAS37B,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,iBAAAA,mBAAAA,iBAAAA,YAAAA,wBAAAA,uBAAAA,+BAAAA,2CAAAA,qBAAAA,qEAAAA,wBAAAA,mDAAAA,sBAAAA,2BAAAA,oBAAAA,0CAAAA,sBAAAA,MAAAA,gBAAAA,mCAAAA,oBAAAA,wEAAAA,2BAAAA,6CAAAA,+BAAAA,6CAAAA,oBAAAA,mFAAAA,sBAAAA,sEAAY4mC,qBAAuB,wBAC3D,KAACjL,CAAA,CAxVS,CAAStN,EAASsF,OAAOqJ,UAAUuJ,iBAudjDn7D,EAAQuwD,SAAWA,EAAS,IACtBC,EAAY,SAAAiL,GAAAx3D,EAAAusD,EAAAiL,GAAA,IAAA1hC,EAAA71B,EAAAssD,GACd,SAAAA,EAAYnhD,EAAU6wB,GAAS,IAAAw7B,EAC3B,GAD2Bt9D,EAAA,KAAAoyD,GACX,MAAZnhD,EACA,MAAM,IAAI3Q,MAAM,oBAEpB,IAAK2Q,EAASssD,QACV,MAAM,IAAIj9D,MAAM,oCAEpB,IAAIk9D,EAAOvsD,EAASwsD,MAAQxsD,EAASusD,OAASvsD,EAASysD,WAAa,WAAa,aAExD,OADzBJ,EAAA3hC,EAAAv0B,KAAA,KAAMo2D,EAAM17B,IACP7wB,SAAWA,EAASqsD,CAC7B,CAmBC,OAnBAn9D,EAAAiyD,EAAA,EAAAhyD,IAAA,OAAAC,MAAA,eAAAs9D,EAAA53D,EAAAL,IAAAQ,MACD,SAAA03D,EAAW9sD,EAAQtB,GAAM,OAAA9J,IAAAoB,MAAA,SAAA+2D,GAAA,cAAAA,EAAA72D,KAAA62D,EAAA52D,MAAA,OAOpB,OANU,OAAXuI,QAA8B,IAAXA,IAA8BA,EAAS,IAE5C,YAAVsB,IAAyB7Q,KAAKgR,SAASysD,YAAcz9D,KAAKgR,SAAS6sD,YAEnEhtD,EAAS,gBACTtB,EAAS,CAACA,EAAO,GAAIA,EAAO,KAC/BquD,EAAA52D,KAAA,EACYhH,KAAKgR,SAASssD,QAAQ,CAAEzsD,OAAAA,EAAQtB,OAAAA,IAAS,cAAAquD,EAAA5tD,OAAA,SAAA4tD,EAAAn2D,MAAA,wBAAAm2D,EAAAp2D,OAAA,GAAAm2D,EAAA,UACzD,gBAAArpB,EAAAC,GAAA,OAAAmpB,EAAA31D,MAAA,KAAAxI,UAAA,EAVA,IAUA,CAAAY,IAAA,YAAAC,MACD,SAAU09D,GACN,OAAOtL,EAASF,OAAO9xD,KAAIkF,EAAAC,EAAAwsD,EAAAloD,WAAA,kBAAA9C,KAAC,KAAgB22D,GAChD,GAAC,CAAA39D,IAAA,cAAAC,MAAA,eAAA29D,EAAAj4D,EAAAL,IAAAQ,MACD,SAAA+3D,EAAkB5xB,GAAW,IAAAiB,EAAA4wB,EAAAC,EAAA,OAAAz4D,IAAAoB,MAAA,SAAAs3D,GAAA,cAAAA,EAAAp3D,KAAAo3D,EAAAn3D,MAAA,cAAAm3D,EAAAn3D,KAAA,EAAAtB,EAAAC,EAAAwsD,EAAAloD,WAAA,oBAAA9C,KAAA,KACWilC,GAAW,OAE8C,OAFvFiB,EAAG8wB,EAAA12D,KACHw2D,EAAkBrZ,EAASzQ,UAAU3zC,KAAK,MAC1C09D,EAAqC,MAA1B9xB,EAAYyiB,YAAsBziB,EAAYx7B,MAAQ9R,EAAQ8xD,eAAcuN,EAAAnuD,OAAA,SACtFq9B,EAAIW,GAAGiwB,IAAoBC,EAAW7wB,EAAM4wB,GAAe,wBAAAE,EAAA32D,OAAA,GAAAw2D,EAAA,UACrE,gBAAAlpB,GAAA,OAAAipB,EAAAh2D,MAAA,KAAAxI,UAAA,EANA,MAMA4yD,CAAA,CA9Ba,CAASD,GAgC3BvwD,EAAQwwD,aAAeA,sCCngBV,IAAAzsD,EAAA/G,EAAAA,OAAAA,QAAAgH,EAAAhH,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QAAA8G,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACb6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ0wD,SAAW1wD,EAAQ2wD,OAAS3wD,EAAQ4wD,aAAe5wD,EAAQy8D,iBAAc,EACjF,IAAMxZ,EAAWjmD,EAAQ,OACnBG,EAAUH,EAAQ,OAClB0/D,EAAS1/D,EAAQ,OACjB2/D,EAAa3/D,EAAQ,OAC3BgD,EAAQy8D,YAAc,CAClBG,YAAa,CACT,CAAEv8C,KAAM,SAAUpR,KAAM,WACxB,CAAEoR,KAAM,OAAQpR,KAAM,WACtB,CAAEoR,KAAM,KAAMpR,KAAM,WACpB,CAAEoR,KAAM,WAAYpR,KAAM,WAC1B,CAAEoR,KAAM,yBAA0BpR,KAAM,WACxC,CAAEoR,KAAM,eAAgBpR,KAAM,WAC9B,CAAEoR,KAAM,uBAAwBpR,KAAM,WACtC,CAAEoR,KAAM,YAAapR,KAAM,WAC3B,CAAEoR,KAAM,QAASpR,KAAM,WACvB,CAAEoR,KAAM,QAASpR,KAAM,WACvB,CAAEoR,KAAM,OAAQpR,KAAM,SACtB,CAAEoR,KAAM,cAAepR,KAAM,aAC7B,CAAEoR,KAAM,iBAAkBpR,KAAM,WAEtC,IACI2hD,EAAY,WACd,SAAAA,EAAYiM,EAAWptD,GAASrR,EAAA,KAAAwyD,GAC5BvyD,KAAKw+D,UAAYA,EACjBx+D,KAAKy+D,aAAer3D,QAAQC,QAAQ+J,GAASnI,MAAK,SAACmI,GAAO,MAAM,CAC5D4Q,KAAM,SACNmiB,QAAS,IACT/yB,QAAAA,EACH,GACL,CAoCC,OApCAlR,EAAAqyD,EAAA,EAAApyD,IAAA,OAAAC,MAAA,eAAAs+D,EAAA54D,EAAAL,IAAAQ,MAuBD,SAAAC,EAAWkmC,GAAW,OAAA3mC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OACS,OADTE,EAAAK,GACLvH,KAAKw+D,UAASt3D,EAAAF,KAAA,EAAsBhH,KAAKy+D,aAAY,OAA6D,OAA7Dv3D,EAAAU,GAAAV,EAAAO,KAAAP,EAAAqX,GAAE5c,EAAQy8D,YAAWl3D,EAAAsiB,GAAE+oC,EAAaoM,aAAavyB,GAAYllC,EAAAF,KAAA,EAAAE,EAAAK,GAAnGgkC,eAAcpkC,KAAAD,EAAAK,GAAAL,EAAAU,GAAAV,EAAAqX,GAAArX,EAAAsiB,IAAA,cAAAtiB,EAAA8I,OAAC,SAAD9I,EAAAO,MAAA,wBAAAP,EAAAM,OAAA,GAAAtB,EAAA,UAC7C,gBAAA2C,GAAA,OAAA61D,EAAA32D,MAAA,KAAAxI,UAAA,EAzBA,KAyBA,EAAAY,IAAA,eAAAC,MAxBD,SAAoBgsC,GAChB,IAAIzpB,EAAIohC,EAAI18B,EAAI28B,EAAI8E,EAAIlmC,EAAImmC,EACtB3D,EAAehZ,EAAYgZ,cAAgBhZ,EAAY3I,SACvD8hB,EAAuBnZ,EAAYmZ,sBAAwBH,EAC3DwZ,GAA4D,QAAjCj8C,EAAKypB,EAAYyiB,kBAA+B,IAAPlsC,OAAgB,EAASA,EAAGmsC,gBAAkBhwD,EAAQiwD,8BAgBhI,MAfkB,CACd8P,OAAQzyB,EAAYx7B,KACpBpQ,KAAM4rC,EAAY5rC,KAClBstB,GAAIse,EAAYte,GAChBwf,SAAUlB,EAAYkB,SACtBsxB,uBAAwBA,EACxBxZ,aAAAA,EACAG,qBAAAA,EACA8N,WAA6G,QAAhGhsC,EAAuC,QAAjC08B,EAAK3X,EAAYyiB,kBAA+B,IAAP9K,OAAgB,EAASA,EAAGmZ,uBAAoC,IAAP71C,OAAgB,EAASA,EAAGgsC,YAAczO,EAASsF,OAAOoD,UAAUwR,YACzLx/D,MAAO8sC,EAAY9sC,MACnBc,MAAOgsC,EAAYhsC,MACnBiG,KAAM+lC,EAAY/lC,KAClB6nD,aAA2G,QAA5FpF,EAAuC,QAAjC9E,EAAK5X,EAAYyiB,kBAA+B,IAAP7K,OAAgB,EAASA,EAAGkK,mBAAgC,IAAPpF,OAAgB,EAASA,EAAGj8C,KAAI,SAACowD,GAAG,OAAK,EAAIn+D,EAAQ0xD,cAAcyM,EAAI,MAAM,GAChMjK,gBAAkH,QAAhGjK,EAAuC,QAAjCnmC,EAAKwpB,EAAYyiB,kBAA+B,IAAPjsC,OAAgB,EAASA,EAAGs6C,uBAAoC,IAAPnU,OAAgB,EAASA,EAAGiK,iBAAmB,KAGjL,GAAC,CAAA7yD,IAAA,kBAAAC,MAID,SAAuBgsC,GACnB,IAAKA,EAAYh7B,QACb,MAAM/Q,MAAM,iCAEhB,IAAM+iC,EAAS,CACXphB,KAAM,SACNmiB,QAAS,IACT/yB,QAASg7B,EAAYh7B,SAEzB,OAAOitD,EAAOU,kBAAkBv8D,KAAK4gC,EAAQzhC,EAAQy8D,YAAa7L,EAAaoM,aAAavyB,GAChG,KAACmmB,CAAA,CA5Ca,GA8ClB5wD,EAAQ4wD,aAAeA,EAMvB,IACMD,EAAM,SAAA9hD,GAAA5K,EAAA0sD,EAAA9hD,GAAA,IAAAtI,EAAArC,EAAAysD,GAAA,SAAAA,IAAA,OAAAvyD,EAAA,KAAAuyD,GAAApqD,EAAAH,MAAA,KAAAxI,UAAA,CAYP,OAZOW,EAAAoyD,EAAA,EAAAnyD,IAAA,YAAAC,MACR,WACI,OAAOJ,IACX,GAAC,CAAAG,IAAA,cAAAC,MACD,WACI,OAAOJ,KAAKgR,QAChB,GAAC,CAAA7Q,IAAA,WAAAC,MAOD,eAAAsmC,EAAA5gC,EAAAL,IAAAQ,MACA,SAAAs4B,EAAekoB,GAAQ,OAAAhhD,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNhH,KAAKg/D,oBAAoBvY,GAAS,cAAA3/C,EAAAkJ,OAAA,SAAAlJ,EAAAW,MAAA,wBAAAX,EAAAU,OAAA,GAAA+2B,EAAA,UAClD,gBAAAz1B,GAAA,OAAA49B,EAAA3+B,MAAA,KAAAxI,UAAA,EAHD,IAGC,CAAAY,IAAA,kBAAAC,MAAA,eAAA25D,EAAAj0D,EAAAL,IAAAQ,MACD,SAAAkgC,EAAsBiG,GAAW,IAAAzpB,EAAAohC,EAAA18B,EAAA28B,EAAA8E,EAAAlmC,EAAAmmC,EAAA7mD,EAAA+8D,EAAA,OAAAx5D,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OAK5B,GAH6B,MAA1BolC,EAAYyiB,YAA0C,MAApBziB,EAAYx7B,OAE9Cw7B,EAAYx7B,KAAO,GAEO,MAA1Bw7B,EAAYyiB,YAAsBziB,EAAYx7B,MAAQ9R,EAAQ8xD,eAAc,CAAAxqB,EAAAp/B,KAAA,eAAAo/B,EAAAp/B,KAAA,EAAAtB,EAAAC,EAAA2sD,EAAAroD,WAAA,wBAAA9C,KAAA,KACxCilC,GAAW,cAAAhG,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,MAAA,cAAA2+B,EAAAp/B,KAAA,EAGzBhH,KAAK+lC,aAAY,OAC+C,GADhF7jC,EAAOkkC,EAAA3+B,KACe,QAA3Bkb,EAAKypB,EAAY5rC,YAAyB,IAAPmiB,IAAsBypB,EAAY5rC,KAAO0B,GACzEkqC,EAAY5rC,KAAK4B,eAAiBF,EAAQE,cAAa,CAAAgkC,EAAAp/B,KAAA,eACjD,IAAI3G,MAAM,uCAAsC,QAIyB,GAFnF+rC,EAAYx7B,KAAO9R,EAAQ8xD,eACE,QAA5B7M,EAAK3X,EAAYhsC,aAA0B,IAAP2jD,IAAsB3X,EAAYhsC,MAAQ,GACnD,QAA3BinB,EAAK+kB,EAAY/lC,YAAyB,IAAPghB,IAAsB+kB,EAAY/lC,KAAO,MAChD,QAA5B29C,EAAK5X,EAAY9sC,aAA0B,IAAP0kD,EAAa,CAAA5d,EAAAp/B,KAAA,SAAKo/B,EAAAp/B,KAAA,wBAAAo/B,EAAAp/B,KAAA,GAA8BhH,KAAK6mC,WAAU,QAAzCuF,EAAY9sC,MAAK8mC,EAAA3+B,KAAA,QACN,GAAtE2kC,EAAYyiB,WAAa7uD,KAAKk/D,gBAAgB9yB,EAAYyiB,YAC1B,QAA/B/F,EAAK1c,EAAY3I,gBAA6B,IAAPqlB,EAAa,CAAA1iB,EAAAp/B,KAAA,SAAKo/B,EAAAp/B,KAAA,wBAAAo/B,EAAAp/B,KAAA,GAAiChH,KAAKgR,SAAS42C,cAAa,QAAxDxb,EAAY3I,SAAQ2C,EAAA3+B,KAAA,WAClD,QAA/Bmb,EAAKwpB,EAAYkB,gBAA6B,IAAP1qB,EAAa,CAAAwjB,EAAAp/B,KAAA,SAAKo/B,EAAAp/B,KAAA,wBAAAo/B,EAAAp/B,KAAA,GAAiChH,KAAKgR,SAASyyC,YAAYrX,GAAY,QAAnEA,EAAYkB,SAAQlH,EAAA3+B,KAAA,WACnD,QAA9BshD,EAAK3c,EAAYh7B,eAA4B,IAAP23C,EAAa,CAAA3iB,EAAAp/B,KAAA,SAAKo/B,EAAAp/B,KAAA,wBAAAo/B,EAAAp/B,KAAA,GAAiChH,KAAKgR,SAASijD,aAAY,QAAvD7nB,EAAYh7B,QAAOg1B,EAAA3+B,KAAsC2J,QAAO,eAAAg1B,EAAAp/B,KAAA,GAC9EhH,KAAKm/D,OAAO1tD,KAAK26B,GAAY,QACzB,OADnDA,EAAYyiB,WAAWuQ,gBAAeh5B,EAAA3+B,KAChCw3D,GAAU,EAAIngE,EAAQugE,WAAWjzB,GAAYhG,EAAAp/B,KAAA,GACtChH,KAAKgR,SAASy3C,gBAAgBwW,GAAQ,eAAA74B,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,MAAA,yBAAA2+B,EAAA5+B,OAAA,GAAA2+B,EAAA,UAE1D,gBAAAp9B,GAAA,OAAAgxD,EAAAhyD,MAAA,KAAAxI,UAAA,EA5BA,KA4BA,EAAAY,IAAA,OAAAC,MArCD,SAAYshD,GACR,IAAM4d,EAAY9yD,OAAO+yD,eAAe7d,EAAQ4Q,EAAOroD,WAGvD,OADAq1D,EAAUH,OAAS,IAAI5M,EAAa+M,EAAWA,EAAUj4B,cAClDi4B,CACX,KAAChN,CAAA,CAZO,EAAS,EAAIgM,EAAW5Z,WAAWE,EAASsF,OAAOqJ,UAAUiM,gBA8CzE79D,EAAQ2wD,OAASA,EAOjB,IACMD,EAAQ,SAAAvsB,GAAAlgC,EAAAysD,EAAAvsB,GAAA,IAAApK,EAAA71B,EAAAwsD,GAAA,SAAAA,IAAA,OAAAtyD,EAAA,KAAAsyD,GAAA32B,EAAA3zB,MAAA,KAAAxI,UAAA,CAcT,OAdSW,EAAAmyD,EAAA,EAAAlyD,IAAA,cAAAC,MACV,WACI,OAAOJ,KAAKy/D,UAChB,GAAC,CAAAt/D,IAAA,cAAAC,MACD,WACI,OAAOJ,KAAKgR,QAChB,GAAC,CAAA7Q,IAAA,YAAAC,MACD,WACI,OAAOJ,IACX,GAAC,CAAAG,IAAA,cAAAC,MAMD,SAAY4Q,GAER,OADAhR,KAAKy/D,WAAazuD,EACXhR,IACX,IAAC,EAAAG,IAAA,OAAAC,MARD,SAAYshD,EAAQge,GAChB,IAAMJ,EAAY9yD,OAAO+yD,eAAe7d,EAAQ2Q,EAASpoD,WAEzD,OADAq1D,EAAUG,WAAaC,EAChBJ,CACX,KAACjN,CAAA,CAdS,EAAS,EAAIiM,EAAW3Z,WAAWC,EAASsF,OAAOqJ,UAAUiM,gBAoB3E79D,EAAQ0wD,SAAWA,oCCtJnB7lD,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQg+D,qBAAuBh+D,EAAQsuD,0BAA4BtuD,EAAQ43D,kBAAoB53D,EAAQi+D,eAAiBj+D,EAAQk+D,kBAAoBl+D,EAAQm+D,aAAU,EAGtK,SAAWA,GACPA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAgB,OAAI,GAAK,SACjCA,EAAQA,EAAmB,UAAI,GAAK,WACvC,CAND,CAMan+D,EAAQm+D,UAAYn+D,EAAQm+D,QAAU,CAAC,IAEpD,SAAWD,GACPA,EAAkBA,EAAyB,MAAI,GAAK,QACpDA,EAAkBA,EAA8B,WAAI,GAAK,aACzDA,EAAkBA,EAAwB,KAAI,GAAK,MACtD,CAJD,CAIuBl+D,EAAQk+D,oBAAsBl+D,EAAQk+D,kBAAoB,CAAC,IAElF,SAAWD,GACPA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAuB,OAAI,GAAK,QAClD,CAHD,CAGoBj+D,EAAQi+D,iBAAmBj+D,EAAQi+D,eAAiB,CAAC,IAEzE,SAAWrG,GACPA,EAA4B,SAAI,YAChCA,EAA8B,WAAI,aAClCA,EAA6B,UAAI,YACjCA,EAA6B,UAAI,WACpC,CALD,CAKuB53D,EAAQ43D,oBAAsB53D,EAAQ43D,kBAAoB,CAAC,IAElF,SAAWtJ,GACPA,EAA0BA,EAAgC,KAAI,GAAK,OACnEA,EAA0BA,EAAoC,SAAI,GAAK,UAC1E,CAHD,CAG+BtuD,EAAQsuD,4BAA8BtuD,EAAQsuD,0BAA4B,CAAC,IAE1G,SAAW0P,GACPA,EAAqBA,EAAiC,WAAI,GAAK,aAC/DA,EAAqBA,EAAgC,UAAI,GAAK,WACjE,CAHD,CAG0Bh+D,EAAQg+D,uBAAyBh+D,EAAQg+D,qBAAuB,CAAC,wCCvC9E,IAAAl6D,EAAA9G,EAAAA,OAAAA,QAAAmvC,EAAAnvC,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAA44B,EAAA54B,EAAAA,KAAAA,QACT+yD,EAAmB1xD,MAAQA,KAAK0xD,kBAAqBllD,OAAOqI,OAAU,SAAS6W,EAAGjR,EAAG9N,EAAGud,QAC7EzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B,IAAIglD,EAAOnlD,OAAOolD,yBAAyBn3C,EAAG9N,GACzCglD,KAAS,QAASA,GAAQl3C,EAAEulB,WAAa2xB,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAExjD,YAAY,EAAMC,IAAK,WAAa,OAAOqM,EAAE9N,EAAI,IAE5DH,OAAO6yB,eAAe3T,EAAGxB,EAAIynC,EACjC,EAAM,SAASjmC,EAAGjR,EAAG9N,EAAGud,QACTzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B+e,EAAExB,GAAMzP,EAAE9N,EACd,GACIuB,EAAgBlO,MAAQA,KAAKkO,cAAiB,SAASuM,EAAG9Y,GAC1D,IAAK,IAAIyU,KAAKqE,EAAa,YAANrE,GAAoB5J,OAAOvC,UAAUgoD,eAAe9qD,KAAKxF,EAASyU,IAAIs7C,EAAgB/vD,EAAS8Y,EAAGrE,EAC3H,EACA5J,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ2nD,kCAAoC3nD,EAAQo+D,4BAA8Bp+D,EAAQq+D,0BAA4Br+D,EAAQs+D,uBAAyBt+D,EAAQ8rD,gBAAkB9rD,EAAQu+D,iBAAmBv+D,EAAQ44D,wBAA0B54D,EAAQmyD,iBAAmBnyD,EAAQ6uD,aAAe7uD,EAAQ09D,UAAY19D,EAAQ+nD,cAAgB/nD,EAAQw+D,cAAgBx+D,EAAQ8+C,eAAiB9+C,EAAQ2vD,qBAAuB3vD,EAAQy+D,mBAAqBz+D,EAAQgmD,iBAAmBhmD,EAAQy3D,MAAQz3D,EAAQilD,MAAQjlD,EAAQmmD,wCAA0CnmD,EAAQotD,8BAAgCptD,EAAQ0+D,uBAAyB1+D,EAAQ2+D,8BAAgC3+D,EAAQivD,eAAiBjvD,EAAQ4+D,oBAAsB5+D,EAAQ6+D,sBAAwB7+D,EAAQg2D,qBAAuBh2D,EAAQ4oD,qBAAuB5oD,EAAQkvD,0BAA4BlvD,EAAQ0rD,0BAA4B1rD,EAAQ8+D,cAAgB9+D,EAAQ++D,cAAgB/+D,EAAQg/D,SAAWh/D,EAAQi/D,OAASj/D,EAAQk/D,aAAel/D,EAAQouD,kBAAoBpuD,EAAQm/D,gBAAkBn/D,EAAQglD,iBAAc,EAC3iC,IAAM/B,EAAWjmD,EAAQ,OACnBwU,EAAUxU,EAAQ,OAClB6zD,EAAW7zD,EAAQ,OACnBkmD,EAAclmD,EAAQ,OACtBG,EAAUH,EAAQ,OA8FI,SAAAoiE,IAK3B,OAL2BA,EAAAj7D,EAAAL,IAAAQ,MAA5B,SAAAC,EAA6BgjD,EAAU9oD,GAAK,OAAAqF,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAC5B,OAD4BE,EAAAK,GACpC2hD,EAAQhiD,EAAAF,KAAA,EAAU5G,EAAK,UAAA8G,EAAAU,GAAAV,EAAAO,MAAAP,EAAAK,GAAdymC,GAAE7mC,KAAAD,EAAAK,GAAAL,EAAAU,IAAA,CAAAV,EAAAF,KAAA,cACL,IAAI3G,MAAM,oIAAAgD,OACsB6lD,EAAQ,sBAAA7lD,OAAqBjD,IAAQ,wBAAA8G,EAAAM,OAAA,GAAAtB,EAAA,MAElF6B,MAAA,KAAAxI,UAAA,CAlGD2O,EAAavP,EAAQ,OAAsBgD,GAC3CA,EAAQglD,YAAc,6CACtBhlD,EAAQm/D,gBAAkB,IAAIlc,EAASphD,MAAM2vD,UAAUx0D,EAAAA,MAAAA,GACvDgD,EAAQouD,kBAAoB,IAAInL,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GACzDgD,EAAQk/D,aAAe,IAAIjc,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GACpDgD,EAAQi/D,OAAS,IAAIhc,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GAC9CgD,EAAQg/D,SAAW,IAAI/b,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GAChDgD,EAAQ++D,cAAgB,IAAI9b,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GACrDgD,EAAQ8+D,cAAgB,IAAI7b,EAASphD,MAAM2vD,UAAUx0D,EAAAA,OAAAA,GACrDgD,EAAQ0rD,0BAA4B,6CACpC1rD,EAAQkvD,0BAA4B,6CACpClvD,EAAQ4oD,qBAAuB,6CAC/B5oD,EAAQg2D,qBAAuB,6CAC/Bh2D,EAAQ6+D,sBAAwB,6CAChC7+D,EAAQ4+D,oBAAsB,aAC9B5+D,EAAQivD,eAAiB,IACzBjvD,EAAQ2+D,8BAAgC,IACxC3+D,EAAQ0+D,uBAAyB,QAKjC1+D,EAAQotD,8BAAgC,IAGxCptD,EAAQmmD,wCAA0C,IAIlDnmD,EAAQilD,MAHR,SAAeJ,GACX,OAAOA,EAAMpkD,eAAiBT,EAAQglD,aAAeH,EAAMpkD,eAAiBT,EAAQg2D,oBACxF,EAKAh2D,EAAQy3D,MAHR,SAAe4H,GACX,OAAO,IAAI55D,SAAQ,SAACC,GAAO,OAAK45D,WAAW55D,EAAS25D,EAAO,GAC/D,EAQAr/D,EAAQgmD,iBANR,WACI,MAAO,CACHuZ,UAAW/tD,EAAQ0sD,kBAAkBsB,MACrCC,OAAQjuD,EAAQysD,eAAeyB,KAEvC,EAaA1/D,EAAQy+D,mBAXR,SAA4BnV,EAAQpgD,EAAKy2D,GACrC,IAAMC,EAAa,IAAIlgE,WAAW,CAC9B,EACA,GAACgC,OAAAk0B,EACEqtB,EAASsF,OAAO1mD,MAAMg+D,QAAQ5c,EAASsF,OAAO1mD,MAAM2mD,QAAQmX,GAAkB,IAAE/pC,EAChFqtB,EAASsF,OAAO1mD,MAAM6gD,SAAS1iD,EAAQ4oD,uBAAqBhzB,EAC5DqtB,EAASsF,OAAO1mD,MAAMg+D,QAAQvW,EAAQ,KAAG1zB,EACzCqtB,EAASsF,OAAO1mD,MAAM6gD,SAASO,EAASsF,OAAO1mD,MAAMd,UAAUmI,OAEtE,OAAO+5C,EAASsF,OAAO1mD,MAAMd,UAAU6+D,EAC3C,EAoBA5/D,EAAQ2vD,qBAlBR,SAA8BvH,GAgB1B,OAd0BA,EAAQM,KAC7BC,QAAO,SAACN,GAAG,OAAKA,EAAIQ,OAAO,IAAM5F,EAASphD,MAAMuN,GAAG,8CACpDi5C,EAAI9nD,SAAWP,EAAQkvD,yBAAyB,IAE/ChkD,KAAI,SAACm9C,GACN,IAAMiB,EAAS,KAAH5nD,OAAQ2mD,EAAIQ,OAAO,GAAGtnD,MAAM8mD,EAAIQ,OAAO,GAAGhrD,OANlC,KAOdiiE,EAAgBzX,EAAIQ,OAAO,GAC3BtoD,EAAU,KAAHmB,OAAQ2mD,EAAIQ,OAAO,GAAGtnD,MAAM8mD,EAAIQ,OAAO,GAAGhrD,OARnC,KASpB,MAAO,CACHyrD,OAAQrG,EAASphD,MAAMuiC,WAAWklB,GAClC/K,aAAcuhB,EACdjQ,gBAAiB5M,EAASphD,MAAMuiC,WAAW7jC,GAEnD,GAEJ,EAUAP,EAAQ8+C,eARR,SAAwBwK,EAAQ/K,EAAc/8C,EAAM8K,GAChD,IAAM5L,EAASuiD,EAASsF,OAAO1mD,MAAMd,UAAUkiD,EAASsF,OAAO1mD,MAAMk+D,YAAY,kBAC3EC,EAAY/c,EAASsF,OAAO1mD,MAAMd,UAAUuL,GAC5C2zD,EAAehd,EAASsF,OAAO1mD,MAChCd,UAAUkiD,EAASsF,OAAO1mD,MAAMH,OAAO,CAAChB,EAAQuiD,EAASsF,OAAO1mD,MAAMg+D,QAAQvW,EAAQ,IAAK9nD,EAAM+8C,EAAcyhB,KAC/Gz+D,MAAM,IACX,OAAO0hD,EAASsF,OAAO1mD,MAAMuiC,WAAW67B,EAC5C,EAaAjgE,EAAQw+D,cAXR,SAAuBlV,EAAQ4W,GAC3B,IAAMx/D,EAASuiD,EAASsF,OAAO1mD,MAAMd,UAAUkiD,EAASsF,OAAO1mD,MAAMk+D,YAAY,iBAC3EE,EAAehd,EAASsF,OAAO1mD,MAChCd,UAAUkiD,EAASsF,OAAO1mD,MAAMH,OAAO,CACxChB,EACAuiD,EAASsF,OAAO1mD,MAAMg+D,QAAQvW,EAAQ,IACtCrG,EAASsF,OAAO1mD,MAAMg+D,QAAQ5c,EAASsF,OAAO1mD,MAAM2mD,QAAQ0X,GAAc,OAEzE3+D,MAAM,IACX,OAAO0hD,EAASsF,OAAO1mD,MAAMuiC,WAAW67B,EAC5C,EAQAjgE,EAAQ+nD,cAP8B,SACV7gD,EAAAC,GAAA,OAAAi4D,EAAAh5D,MAAC,KAADxI,UAAA,EAkE5BoC,EAAQ09D,UA3DR,SAAmBjzB,EAAav6B,GAC5B,IAAI8Q,EACJ,GAA8B,MAA1BypB,EAAYyiB,YAAsBziB,EAAYx7B,MAAQjP,EAAQivD,eAC9D,OAAOhM,EAASphD,MAAMs+D,qBAAqB11B,EAAav6B,GAE5D,IAAKu6B,EAAYh7B,QACb,MAAM/Q,MAAM,iCAEhB,SAAS0hE,EAAa3hE,EAAO4hB,GACzB,IAAMvS,EAASm1C,EAASphD,MAAMwH,WAAW45C,EAASzQ,UAAU3zC,KAAKJ,GAAOm4D,eACxE,GAAI9oD,EAAOjQ,OAAS,GAChB,MAAM,IAAIa,MAAM,sBAAwB2hB,GAE5C,OAAOvS,CACX,CACA,IAAK28B,EAAY5rC,KACb,MAAM,IAAIH,MAAM,yEAEpB,IAAMG,EAAO4rC,EAAY5rC,KACnBwhE,EAAO51B,EAAYyiB,WACrBzJ,EAAehZ,EAAYgZ,cAAgBhZ,EAAY3I,UAAY,EACnE8hB,EAAuBnZ,EAAYmZ,sBAAwBH,EACzD6c,EAAS,CACXF,EAAa31B,EAAY9sC,OAAS,EAAG,SACrCyiE,EAAaxc,EAAsB,wBACnCwc,EAAa3c,EAAc,gBAC3B2c,EAAa31B,EAAYkB,UAAY,EAAG,YACtB,MAAlBlB,EAAYte,GAAa82B,EAASphD,MAAMuiC,WAAWqG,EAAYte,IAAM,KACrEi0C,EAAa31B,EAAYhsC,OAAS,EAAG,SACrCgsC,EAAY/lC,MAAQ,MAExB,GAAIwL,EAAW,CACX,IAAML,EAAMozC,EAASphD,MAAM0+D,eAAerwD,GAC1CowD,EAAO71D,KAAK21D,EAAavwD,EAAI2wD,cAAe,kBAC5CF,EAAO71D,KAAKw4C,EAASphD,MAAMwH,WAAWwG,EAAIG,IAC1CswD,EAAO71D,KAAKw4C,EAASphD,MAAMwH,WAAWwG,EAAII,GAC9C,MAEIqwD,EAAO71D,KAAK21D,EAAa31B,EAAYh7B,QAAS,YAC9C6wD,EAAO71D,KAAK,MACZ61D,EAAO71D,KAAK,MAOhB,GALA61D,EAAO71D,KAAK21D,EAAa31B,EAAYh7B,QAAS,YAC9C6wD,EAAO71D,KAAKw4C,EAASphD,MAAMuiC,WAAWvlC,IAEtCyhE,EAAO71D,KAAK21D,EAAaC,EAAKlT,eAAiBntD,EAAQotD,8BAA+B,kBACtFkT,EAAO71D,MAAkC,QAA3BuW,EAAKq/C,EAAK9T,mBAAgC,IAAPvrC,EAAgBA,EAAK,IAAI9V,KAAI,SAACowD,GAAG,OAAKrY,EAASphD,MAAM2mD,QAAQ8S,EAAI,KAC9G+E,EAAK5C,iBAAkF,GAA/Dxa,EAASsF,OAAO1mD,MAAM6gD,SAAS2d,EAAK5C,iBAAiB5/D,OAC7E,MAAM,IAAIa,MAAM,sCASpB,OAPA4hE,EAAO71D,KAAK41D,EAAK5C,iBAAmB,MAChC4C,EAAK9E,gBACL+E,EAAO71D,KAAK,CAAC41D,EAAK9E,gBAAgB7J,UAAWzO,EAASsF,OAAO1mD,MAAM2mD,QAAQ6X,EAAK9E,gBAAgBlK,kBAGhGiP,EAAO71D,KAAK,IAETw4C,EAASphD,MAAM4+D,UAAU,CAAC,CAACzgE,EAAQivD,gBAAiBhM,EAASphD,MAAM/C,IAAIC,OAAOuhE,IACzF,EA4BAtgE,EAAQ6uD,aA1BR,SAAsBZ,GAElB,IAAMyS,EAAkBzd,EAASsF,OAAO1mD,MAAM6gD,SAASuL,GACvD,GAAIyS,EAAgB7iE,OAAS,IAAM,EAC/B,MAAM,IAAIa,MAAM,wDAEpB,GAAIgiE,EAAgB7iE,OAASmC,EAAQ0+D,uBACjC,MAAM,IAAIhgE,MAAM,mCAADgD,OAAoC1B,EAAQ0+D,uBAAsB,WAErF,IAAMiC,EAAU1d,EAASsF,OAAO1mD,MAAMyvB,OAAOovC,GACvC7/D,EAAOoiD,EAASsF,OAAO1mD,MAAM6gD,SAASie,GAGtCC,EAAwBF,EAAgB7iE,OAAS,GACvD,GAAI+iE,EAAwB,GAAK,EAC7B,MAAM,IAAIliE,MAAM,gDAEpB,IAAMmiE,EAAiB5d,EAASsF,OAAO1mD,MAAM6gD,SAASke,GAGhDE,EAAuB7d,EAASsF,OAAO1mD,MAAMg+D,QAAQgB,EAAgB,GACrEE,EAAkB,IAAIrhE,WAAW,CAAC,EAAG,IAG3C,OAFAmB,EAAKyV,IAAIyqD,EAAiB,GAC1BlgE,EAAKyV,IAAIwqD,EAAsB,GACxBjgE,CACX,EAsEAb,EAAQmyD,iBApER,SAA0B6O,GACtB,SAASC,EAAcxiE,GACnB,MAAc,OAAVA,EACO,KAEJwkD,EAASphD,MAAMuiC,WAAW3lC,EACrC,CACA,SAASyiE,EAAaziE,GAClB,MAAc,OAAVA,EACOwkD,EAASzQ,UAAU3zC,KAAK,GAE5BokD,EAASzQ,UAAU3zC,KAAKJ,EACnC,CAaA,IAAMqK,EAAQm6C,EAASphD,MAAM6gD,SAASse,GACtC,GAAIl4D,EAAM,IAAM9I,EAAQivD,eACpB,OAAOhM,EAASphD,MAAMswD,iBAAiBrpD,GAE3C,IAAM7J,EAAMgkD,EAASphD,MAAM/C,IAAIW,OAAOqJ,EAAMvH,MAAM,IAC5CkpC,EAAc,CAChBx7B,KAAMjP,EAAQivD,eACdtxD,MAAOujE,EAAajiE,EAAI,IAAI8iD,WAC5B6B,qBAAsBsd,EAAajiE,EAAI,IACvCwkD,aAAcyd,EAAajiE,EAAI,IAC/B0sC,SAAUu1B,EAAajiE,EAAI,IAC3BktB,GAAI80C,EAAchiE,EAAI,IACtBR,MAAOyiE,EAAajiE,EAAI,IACxByF,KAAMzF,EAAI,GACVwQ,QAASyxD,EAAajiE,EAAI,KAC1BJ,KAAMoiE,EAAchiE,EAAI,KACxBiuD,WAAY,CACRC,cAAe+T,EAAajiE,EAAI,KAChCstD,YAAattD,EAAI,IACjBw+D,gBAAiBx+D,EAAI,IACrBs8D,gBAhCR,SAAgCtwD,GAC5B,GAAkB,GAAdA,EAAIpN,OAAR,CAGA,GAAkB,GAAdoN,EAAIpN,OACJ,MAAM,IAAIa,MAAM,qEAADgD,OAAsEuJ,EAAIpN,SAE7F,MAAO,CACH6zD,UAAWzO,EAASphD,MAAMuiC,WAAWn5B,EAAI,IACzComD,eAAgBpO,EAASphD,MAAM6gD,SAASz3C,EAAI,IANhD,CAQJ,CAqByBk2D,CAAuBliE,EAAI,OAG9CmiE,EAAe,CACjB33D,EAAGy3D,EAAajiE,EAAI,IAAI8iD,WACxB/xC,EAAG/Q,EAAI,GACPgR,EAAGhR,EAAI,IAEX,IAA+C,MAA1CgkD,EAASphD,MAAM2mD,QAAQ4Y,EAAapxD,IAAwD,MAA1CizC,EAASphD,MAAM2mD,QAAQ4Y,EAAanxD,MACtFw6B,EAAYyiB,WAAWuQ,gBACxB,OAAOhzB,EAEX,GAAuB,IAAnB22B,EAAa33D,GAA8B,IAAnB23D,EAAa33D,IAAYghC,EAAYyiB,WAAWuQ,gBACxE,MAAM,IAAI/+D,MAAM,6BAQpB,OANK+rC,EAAYyiB,WAAWuQ,kBACxBhzB,EAAYhhC,EAAI23D,EAAa33D,EAC7BghC,EAAYx6B,EAAImxD,EAAanxD,EAC7Bw6B,EAAYz6B,EAAIoxD,EAAapxD,GAEjCy6B,EAAY5pC,KAiBhB,SAAsB4pC,EAAa22B,GAC/B,IAAMC,EAAexQ,EAASD,aAAa0Q,gBAAgB72B,GACrD82B,EAAkBte,EAASsF,OAAO1mD,MAAMd,UAflD,SAAsB0pC,EAAa22B,GAC/B,IAAIpgD,EACJ,IAAiG,QAA3FA,EAAqB,OAAhBypB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYyiB,kBAA+B,IAAPlsC,OAAgB,EAASA,EAAGy8C,kBAAoBhzB,EAAYyiB,WAAWuQ,gBAAgB5/D,OAC5L,OAAOolD,EAASsF,OAAO1mD,MAAM6gD,SAASjY,EAAYyiB,WAAWuQ,iBAEjE,IAAK2D,EACD,MAAM,IAAI1iE,MAAM,yBAEpB,IAAMsR,EAAIizC,EAASsF,OAAO1mD,MAAMg+D,QAAQ5c,EAASsF,OAAO1mD,MAAM6gD,SAAS0e,EAAapxD,GAAI,IAClFC,EAAIgzC,EAASsF,OAAO1mD,MAAMg+D,QAAQ5c,EAASsF,OAAO1mD,MAAM6gD,SAAS0e,EAAanxD,GAAI,IAClFxG,EAAI23D,EAAa33D,EACvB,OAAO,IAAI/J,WAAW,GAADgC,OAAAk0B,EAAK5lB,GAAC4lB,EAAK3lB,GAAC,CAAExG,IACvC,CAG4D+3D,CAAa/2B,EAAa22B,IAClF,OAAOne,EAASsF,OAAO1mD,MAAMd,UAAUkiD,EAASsF,OAAO1mD,MAAM4+D,UAAU,CAACY,EAAcE,IAC1F,CArBuBE,CAAah3B,EAAa22B,GACtC32B,CACX,EAuCAzqC,EAAQ44D,wBAnBR,SAAiC8I,EAAWC,GACxC,IACgC18D,EAD5BkkC,EAAS,KAAKnkC,EAAAmnC,EACAu1B,EAAUhZ,MAAI,IAAhC,IAAA1jD,EAAAiL,MAAAhL,EAAAD,EAAA4E,KAAA7D,MAAkC,KAAvBsiD,EAAGpjD,EAAAxG,MACV,GAAI4pD,EAAI9nD,QAAQE,eAAiBkhE,EAAclhE,cAG/C,IACI,IAAMmhE,EAAmB5hE,EAAQm/D,gBAAgB0C,SAASxZ,GACtDuZ,GAAoD,MAAhCA,EAAiBj7D,KAAKwiC,SAC1CA,EAASy4B,EAAiBj7D,KAAKwiC,OAEvC,CACA,MAAA24B,GAAQ,CACZ,CAAC,OAAAlwB,GAAA5sC,EAAA7E,EAAAyxC,EAAA,SAAA5sC,EAAAoQ,GAAA,CACD,IAAK+zB,EACD,MAAM,IAAIzqC,MAAM,2BAEpB,OAAOyqC,CACX,EAEA,IAAM44B,EAAiB9e,EAASzQ,UAAU3zC,KAAK,GAAGyV,IAAI,KACtD,SAASiqD,EAAiBh+D,GACtB,OAAO0iD,EAASsF,OAAO1mD,MAAM2mD,QAAQvF,EAASsF,OAAO/V,UAAU3zC,KAAK0B,GAAS6H,IAAIpI,EAAQ6+D,uBAAuBllD,IAAIooD,GACxH,CAUA,SACeC,EAAmB56D,EAAA8/B,GAAA,OAAA+6B,EAAA77D,MAAC,KAADxI,UAAA,CAYlC,SAAAqkE,IAFC,OAEDA,EAAA99D,EAAAL,IAAAQ,MAZA,SAAAs4B,EAAmCy2B,EAAgBhkD,GAAQ,IAAAw1C,EAAAxkC,EAAA6hD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAz+D,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC0B,OAA3Ew/C,EAAQ3B,EAAYiC,sBAAsBf,QAAQiP,EAAgBhkD,GAASlK,EAAAE,KAAA,EAC9Dw/C,EAAMxkC,OAAM,OAArB,OAAJA,EAAIlb,EAAAW,KAAAX,EAAAE,KAAG,EACQw/C,EAAMqd,SAAQ,OAAvB,OAANA,EAAM/8D,EAAAW,KAAAX,EAAAE,KAAG,EACQw/C,EAAMsd,WAAU,OAIoB,OAJrDA,EAAQh9D,EAAAW,KACRs8D,EAAQ,IAAIjlE,EAAQqlE,SACpBH,EAAYD,EAAMrjE,OAAO,CAAC,UAAW,CAACshB,IACtCiiD,EAAcF,EAAMrjE,OAAO,CAAC,UAAW,CAACmjE,IACxCK,EAAgBH,EAAMrjE,OAAO,CAAC,WAAY,CAACojE,IAAUh9D,EAAAkJ,OAAA,SACpD+zD,EAAMrjE,OAAO,CAAC,QAAS,QAAS,SAAU,CAACsjE,EAAWC,EAAaC,KAAe,yBAAAp9D,EAAAU,OAAA,GAAA+2B,EAAA,MAC5Fx2B,MAAA,KAAAxI,UAAA,UAGc0gE,EAAsBp2B,EAAAK,EAAAS,EAAAM,EAAAK,GAAA,OAAA84B,EAAAr8D,MAAC,KAADxI,UAAA,UAAA6kE,IASpC,OAToCA,EAAAt+D,EAAAL,IAAAQ,MAArC,SAAAkgC,EAAsC6uB,EAAgBqP,EAAUC,EAAYhxD,EAAQtC,GAAQ,IAAAuzD,EAAA,OAAA9+D,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EAC9D28D,EAAoB3O,EAAgBhkD,GAAS,OAAtD,OAAXuzD,EAAWn+B,EAAA3+B,KAAA2+B,EAAAp2B,OAAA,SACVrO,EAAQ8+D,cAAczQ,mBAAmB,kBAAmB,CAC/DqU,EACAC,EACAtP,EACA1hD,EACAixD,KACF,wBAAAn+B,EAAA5+B,OAAA,GAAA2+B,EAAA,MACLp+B,MAAA,KAAAxI,UAAA,CAQD,SAASilE,EAAwBtiE,EAASqP,EAASM,GAC/C,IACI,OAAO3P,GAAW0iD,EAASsF,OAAO1mD,MAAMihE,eAAelzD,EAASM,EACpE,CACA,MAAA6yD,GAGI,OAAO,CACX,CACJ,CAAC,SACcC,EAAyB54B,EAAAC,EAAAiB,EAAAO,GAAA,OAAAo3B,EAAA78D,MAAC,KAADxI,UAAA,UAAAqlE,IAOvC,OAPuCA,EAAA9+D,EAAAL,IAAAQ,MAAxC,SAAAsgC,EAAyCv1B,EAAU9O,EAASqP,EAASM,GAAS,IAAAgzD,EAAAp1D,EAAA,OAAAhK,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,OAI1E,OAHM69D,EAAkB,IAAIjgB,EAASsF,OAAOsF,SAASttD,EAASP,EAAQg/D,SAAU3vD,GAGhFw1B,EAAAx/B,KAAA,EACqB69D,EAAgBC,iBAAiBvzD,EAASM,GAAU,OAA7D,OAANpC,EAAM+2B,EAAA/+B,KAAA++B,EAAAx2B,OAAA,SACLP,GAAU9N,EAAQ4+D,qBAAmB,wBAAA/5B,EAAAh/B,OAAA,GAAA++B,EAAA,MAC/Cx+B,MAAA,KAAAxI,UAAA,UACcwlE,EAAkBt3B,EAAAQ,EAAAM,EAAAC,GAAA,OAAAw2B,EAAAj9D,MAAC,KAADxI,UAAA,CAajC,SAAAylE,IAHC,OAGDA,EAAAl/D,EAAAL,IAAAQ,MAbA,SAAA0gC,EAAkC31B,EAAU9O,EAASqP,EAASM,GAAS,IAAA5C,EAAA,OAAAxJ,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,OACtC,OAAL,EAAK4/B,EAAA5/B,KAAA,EACVgK,EAASi0D,QAAQ/iE,GAAQ,OACyB,GAD/D+M,EAAI23B,EAAAn/B,KACyD,GAA/Cm9C,EAASsF,OAAO1mD,MAAM6gD,SAASp1C,GAAMzP,OACjC,CAAFonC,EAAA5/B,KAAA,eAAA4/B,EAAA52B,OAAA,SACXw0D,EAAwBtiE,EAASqP,EAASM,IAAU,cAAA+0B,EAAA5/B,KAAA,GAG9C29D,EAA0B3zD,EAAU9O,EAASqP,EAASM,GAAU,eAAA+0B,EAAA52B,OAAA,SAAA42B,EAAAn/B,MAAA,yBAAAm/B,EAAAp/B,OAAA,GAAAm/B,EAAA,MAEpF5+B,MAAA,KAAAxI,UAAA,CAIuC,SAAA2lE,IAGvC,OAHuCA,EAAAp/D,EAAAL,IAAAQ,MAAxC,SAAA8gC,EAAyC/1B,EAAU9O,EAASyQ,EAASd,GAAS,IAAAN,EAAA,OAAA9L,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,OAChB,OAApDuK,EAAUqzC,EAASsF,OAAO1mD,MAAM2hE,YAAYxyD,GAAQq0B,EAAAhgC,KAAA,EAC7C+9D,EAAmB/zD,EAAU9O,EAASqP,EAASM,GAAU,cAAAm1B,EAAAh3B,OAAA,SAAAg3B,EAAAv/B,MAAA,wBAAAu/B,EAAAx/B,OAAA,GAAAu/B,EAAA,MACzEh/B,MAAA,KAAAxI,UAAA,CAKyC,SAAA6lE,IAGzC,OAHyCA,EAAAt/D,EAAAL,IAAAQ,MAA1C,SAAAkhC,EAA2Cn2B,EAAU9O,EAASkhC,EAAQD,EAAO/iC,EAAOyR,GAAS,IAAAN,EAAA,OAAA9L,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,OACP,OAA5EuK,EAAUqzC,EAASsF,OAAO1mD,MAAMu7D,kBAAkBv8D,KAAK4gC,EAAQD,EAAO/iC,GAAMgnC,EAAApgC,KAAA,EACrE+9D,EAAmB/zD,EAAU9O,EAASqP,EAASM,GAAU,cAAAu1B,EAAAp3B,OAAA,SAAAo3B,EAAA3/B,MAAA,wBAAA2/B,EAAA5/B,OAAA,GAAA2/B,EAAA,MACzEp/B,MAAA,KAAAxI,UAAA,CAE+C,SAAA8lE,IAyB/C,OAzB+CA,EAAAv/D,EAAAL,IAAAQ,MAAhD,SAAAshC,EAAiD+9B,EAAY7F,EAAYjZ,EAAOlzC,EAAQwa,EAAIttB,EAAMqnD,GAAiB,IAAA0d,EAAAzQ,EAAAtL,EAAA,OAAA/jD,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,OAId,GAAxF,OAATxG,QAA0B,IAATA,IAA0BA,EAAOokD,EAASsF,OAAOkI,OAAO6J,eAAe/5D,SACpFskD,GAAS7kD,EAAQglD,YAAW,CAAAnf,EAAAxgC,KAAA,eAAAwgC,EAAAxgC,KAAA,EACfy4D,EAAWrR,sBAAsB,CAC1C7E,gBAAiBz7B,EACjB+5B,kBAAmBA,EACnBmU,OAAQx7D,EACRgpD,SAAU,KACVC,QAASn2C,IACX,OAWA,eAAAk0B,EAAAx3B,OAAA,SAAAw3B,EAAA//B,MAXA,cAAA+/B,EAAAxgC,KAAA,EAGoCy4D,EAAWtZ,4BAA2B,OAAS,OAA/Eof,EAAsB/9B,EAAA//B,KAAkD6+C,QAAO9e,EAAAxgC,KAAA,GACnDy4D,EAAWtZ,4BAA2B,QAAS,OAA3E2O,EAAkBttB,EAAA//B,KAAkDknD,QAAOnnB,EAAAxgC,KAAA,GAC1Di5D,EAAuBzZ,EAAOhmD,EAAMstB,EAAIxa,EAAQgyD,GAAW,QAApE,OAAR9b,EAAQhiB,EAAA//B,KAAA+/B,EAAAxgC,KAAG,GACJy4D,EAAWrR,sBAAsB,CAC1C4N,OAAQkE,EAAiBqF,GACzBhc,gBAAiBuL,EACjBjN,kBAAmBA,EACnB2B,SAAUA,IACZ,yBAAAhiB,EAAAhgC,OAAA,GAAA+/B,EAAA,MAETx/B,MAAA,KAAAxI,UAAA,CA9GDoC,EAAQu+D,iBAAmBA,EAQ3Bv+D,EAAQ8rD,gBAPR,SAAyBvrD,GACrB,IAAIuN,EAASm1C,EAASsF,OAAO/V,UAAU3zC,KAAK0B,GAAS2c,IAAIld,EAAQ6+D,uBAIjE,OAHI/wD,EAAOyxC,GAAG0D,EAASzQ,UAAU3zC,KAAK,MAClCiP,EAASA,EAAO1F,IAAI25D,IAEjB9e,EAASsF,OAAO1mD,MAAM2mD,QAAQ16C,EACzC,EA0BA9N,EAAQs+D,uBAAyBA,EA2CjCt+D,EAAQq+D,0BARP,SAIuCnxB,EAAAM,EAAAC,EAAAK,GAAA,OAAAy1B,EAAAn9D,MAAC,KAADxI,UAAA,EAYxCoC,EAAQo+D,4BALR,SAC0CjwB,EAAAC,EAAAK,EAAAC,EAAAO,EAAAC,GAAA,OAAAu0B,EAAAr9D,MAAC,KAADxI,UAAA,EA+B1CoC,EAAQ2nD,kCA3B0D,SAClBnY,EAAAC,EAAAQ,EAAAC,EAAAK,EAAAC,EAAAS,GAAA,OAAAyyB,EAAAt9D,MAAC,KAADxI,UAAA,sCCrZnC,IAAAkG,EAAA9G,EAAAA,OAAAA,QAAAmH,EAAAnH,EAAAA,OAAAA,QAAAoB,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QAAA6mE,EAAA7mE,EAAAA,OAAAA,QAAAiH,EAAAjH,EAAAA,OAAAA,QAAAkH,EAAAlH,EAAAA,OAAAA,QAAA+G,EAAA/G,EAAAA,OAAAA,QAAAgH,EAAAhH,EAAAA,OAAAA,QACb6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQywD,YAAS,EACjB,IAAMI,EAAW7zD,EAAQ,OACnBG,EAAUH,EAAQ,OAClBimD,EAAWjmD,EAAQ,OACnB2/D,EAAa3/D,EAAQ,OACrByzD,EAAM,SAAA5hD,GAAA5K,EAAAwsD,EAAA5hD,GAAA,IAAAtI,EAAArC,EAAAusD,GA6CR,SAAAA,EAAY9uD,EAAYm8D,EAAY6F,GAAY,IAAAv1D,EAE5C,GAF4ChQ,EAAA,KAAAqyD,GAEvB,OADrBriD,EAAA7H,EAAAf,KAAA,KAAM7D,EAAYm8D,IACTzuD,SAAkB,CACvB,IAAMI,EAAUrB,EAAKs3B,aAErBt3B,EAAKovD,OAAS,IAAI3M,EAASD,aAAYiT,EAAAz1D,GAAOqB,EAClD,CAC6B,OAA7BrB,EAAKu1D,WAAaA,EAAWv1D,CACjC,CATC,OASA7P,EAAAkyD,EAAA,EAAAjyD,IAAA,cAAAC,MApDD,WACI,GAAuB,MAAnBJ,KAAKslE,WACL,MAAM,IAAIjlE,MAAM,qDAEpB,OAAOL,KAAKslE,UAChB,GAAC,CAAAnlE,IAAA,cAAAC,MACD,WACI,OAAOJ,KAAKgR,QAChB,GAAC,CAAA7Q,IAAA,YAAAC,MACD,WACI,OAAOJ,KAAKylE,WAChB,GAAC,CAAAtlE,IAAA,YAAAC,MACD,WACI,OAAOJ,IACX,GAAC,CAAAG,IAAA,YAAAC,MACD,WACI,OAAO,IAAIwkD,EAASsF,OAAOkI,OAAOpyD,KAAK0lE,cAAe1lE,KAAK6mD,cAC/D,GACA,CAAA1mD,IAAA,WAAAC,MAAA,eAAAsmC,EAAA5gC,EAAAL,IAAAQ,MACA,SAAAC,EAAeugD,GAAQ,OAAAhhD,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACNhH,KAAKg/D,oBAAoBvY,GAAS,cAAAv/C,EAAA8I,OAAA,SAAA9I,EAAAO,MAAA,wBAAAP,EAAAM,OAAA,GAAAtB,EAAA,UAClD,gBAAA2C,GAAA,OAAA69B,EAAA3+B,MAAA,KAAAxI,UAAA,EAHD,IAGC,CAAAY,IAAA,UAAAC,MACD,SAAQ4Q,GACJ,OAAO,IAAIohD,EAAOpyD,KAAK0lE,cAAe10D,EAAUhR,KAAKslE,WACzD,GAAC,CAAAnlE,IAAA,cAAAC,MACD,SAAY4Q,GACR,OAAO,IAAIohD,EAAOpyD,KAAK0lE,cAAe1lE,KAAKgR,SAAUA,EACzD,GAAC,CAAA7Q,IAAA,sBAAAC,MAAA,eAAAulE,EAAA7/D,EAAAL,IAAAQ,MA0BD,SAAAs4B,EAA0B6N,GAAW,IAAAzpB,EAAAohC,EAAA,OAAAt+C,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKhC,OAHuB,MAApBolC,EAAYx7B,MAA0C,MAA1Bw7B,EAAYyiB,aAExCziB,EAAYx7B,KAAO,GACtB9J,EAAAE,KAAA,EAAAtB,EAAAC,EAAAysD,EAAAnoD,WAAA,4BAAA9C,KAAA,KAC6CilC,GAAW,OAA9C,GACmB,OAD9BA,EAAWtlC,EAAAW,MACKonD,YAAsBziB,EAAYx7B,MAAQ9R,EAAQ8xD,eAAc,CAAA9pD,EAAAE,KAAA,eAAAF,EAAAkJ,OAAA,SACrEo8B,GAAW,OAKgD,OAHtEA,EAAYx7B,KAAO9R,EAAQ8xD,eACE,QAA5BjuC,EAAKypB,EAAYhsC,aAA0B,IAAPuiB,IAAsBypB,EAAYhsC,MAAQ,GACnD,QAA3B2jD,EAAK3X,EAAY/lC,YAAyB,IAAP09C,IAAsB3X,EAAY/lC,KAAO,MAC7E+lC,EAAYyiB,WAAa7uD,KAAKk/D,gBAAgB9yB,EAAYyiB,YAAY/nD,EAAAE,KAAA,GACzChH,KAAKgR,SAAS42C,cAAa,QAApC,OAApBxb,EAAY3I,SAAQ38B,EAAAW,KAAAX,EAAAkJ,OAAA,SACbo8B,GAAW,yBAAAtlC,EAAAU,OAAA,GAAA+2B,EAAA,UACrB,gBAAAz1B,GAAA,OAAA68D,EAAA59D,MAAA,KAAAxI,UAAA,EA1CA,IA0CA,CAAAY,IAAA,kBAAAC,MAAA,eAAA6rC,EAAAnmC,EAAAL,IAAAQ,MACD,SAAAkgC,EAAsBiG,GAAW,IAAAzpB,EAAA,OAAAld,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,UAEC,MAA1BolC,EAAYyiB,YAAsBziB,EAAYx7B,MAAQ9R,EAAQ8xD,eAAc,CAAAxqB,EAAAp/B,KAAA,YACpD,GAApBolC,EAAYx7B,MAAyC,MAA5Bw7B,EAAYgZ,aAAoB,CAAAhf,EAAAp/B,KAAA,eAAAo/B,EAAAp/B,KAAA,EACxBhH,KAAKgR,SAAS42C,cAAa,OAA5Dxb,EAAYgZ,aAAYhf,EAAA3+B,KAAA,cAAA2+B,EAAAp/B,KAAG,EAAHtB,EAAAC,EAAAysD,EAAAnoD,WAAA,wBAAA9C,KAAA,KAEOilC,GAAW,cAAAhG,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,MAAA,QAG6C,GAA/D,QAA3Bkb,EAAKypB,EAAY5rC,YAAyB,IAAPmiB,IAAsBypB,EAAY5rC,KAAOR,KAAKkC,SAC9EkqC,EAAY5rC,KAAK4B,eAAiBpC,KAAKkC,QAAQE,cAAa,CAAAgkC,EAAAp/B,KAAA,eACtD,IAAI3G,MAAM,uCAAsC,eAAA+lC,EAAAp/B,KAAA,GAEXhH,KAAKm/D,OAAO1tD,KAAK26B,GAAY,QAAtC,OAAtCA,EAAYyiB,WAAWuQ,gBAAeh5B,EAAA3+B,KAAA2+B,EAAAp2B,OAAA,UAC/B,EAAIlR,EAAQugE,WAAWjzB,IAAY,yBAAAhG,EAAA5+B,OAAA,GAAA2+B,EAAA,UAEjD,gBAAAp9B,GAAA,OAAAkjC,EAAAlkC,MAAA,KAAAxI,UAAA,EAjBA,IAiBA,CAAAY,IAAA,kBAAAC,MAAA,eAAA25D,EAAAj0D,EAAAL,IAAAQ,MACD,SAAAsgC,EAAsB6F,GAAW,OAAA3mC,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx/B,KAAA,EAAAtB,EAAAC,EAAAysD,EAAAnoD,WAAA,wBAAA9C,KAAA,KAGOilC,GAAW,cAAA5F,EAAAx2B,OAAA,SAAAw2B,EAAA/+B,MAAA,wBAAA++B,EAAAh/B,OAAA,GAAA++B,EAAA,UAClD,gBAAAsC,GAAA,OAAAkxB,EAAAhyD,MAAA,KAAAxI,UAAA,EALA,KAKA,EAAAY,IAAA,eAAAC,MA/DD,SAAoBwlE,EAAUrI,EAAMsI,GAEhC,OAAO,IAAIzT,EADC1sD,EAAAC,EAAAysD,GAAA,qBAAAjrD,KAAA,KAAsBy+D,EAAUrI,EAAMsI,GACzBH,cAC7B,GAAC,CAAAvlE,IAAA,oBAAAC,MAAA,eAAA0lE,EAAAhgE,EAAAL,IAAAQ,MACD,SAAA0gC,EAA+Bo/B,EAAMC,EAAUx9D,GAAQ,IAAAy9D,EAAA,OAAAxgE,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,cAAA4/B,EAAA5/B,KAAA,EAAAtB,EAAAC,EAAAysD,GAAA,0BAAAjrD,KAAA,KACN4+D,EAAMC,EAAUx9D,GAAQ,OAAzD,OAANy9D,EAAMr/B,EAAAn/B,KAAAm/B,EAAA52B,OAAA,SACL,IAAIoiD,EAAO6T,EAAOP,gBAAc,wBAAA9+B,EAAAp/B,OAAA,GAAAm/B,EAAA,UAC1C,gBAAAkD,EAAAK,EAAAS,GAAA,OAAAm7B,EAAA/9D,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,wBAAAC,MACD,SAA6B2lE,EAAMC,GAE/B,OAAO,IAAI5T,EADC1sD,EAAAC,EAAAysD,GAAA,8BAAAjrD,KAAA,KAA+B4+D,EAAMC,GACxBN,cAC7B,GAAC,CAAAvlE,IAAA,eAAAC,MACD,SAAoBoa,GAEhB,OAAO,IAAI43C,EADC1sD,EAAAC,EAAAysD,GAAA,qBAAAjrD,KAAA,KAAsBqT,GACTkrD,cAC7B,KAACtT,CAAA,CA5CO,EAAS,EAAIkM,EAAW5Z,YAAW,EAAI4Z,EAAW3Z,WAAWC,EAASsF,OAAOkI,UA8FzFzwD,EAAQywD,OAASA,qCClGjB,IAAAryD,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQukE,uBAAoB,EAC5B,IAAMthB,EAAWjmD,EAAQ,OACnBunE,EAAiB,oBAAAA,IAAAnmE,EAAA,KAAAmmE,EAAA,CAGlB,OAHkBhmE,EAAAgmE,EAAA,OAAA/lE,IAAA,UAAAC,MACnB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAACD,CAAA,CAHkB,GAKvBvkE,EAAQukE,kBAAoBA,EAC5B,IAAME,EAAO,CACT,CACIC,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,6BACdvkD,KAAM,eACNpR,KAAM,SAEV,CACI01D,SAAS,EACTC,aAAc,6BACdvkD,KAAM,UACNpR,KAAM,UAGdoR,KAAM,mBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI01D,SAAS,EACTC,aAAc,OACdvkD,KAAM,SACNpR,KAAM,SAGdoR,KAAM,uBACNpR,KAAM,SAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,eACNpR,KAAM,WAGdoR,KAAM,UACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,gBACNwkD,QAAS,CACL,CACID,aAAc,6BACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGdoR,KAAM,2BACNwkD,QAAS,CACL,CACIE,WAAY,CACR,CACIH,aAAc,OACdvkD,KAAM,oBACNpR,KAAM,QAEV,CACI21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGd21D,aAAc,4BACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,eACNpR,KAAM,WAGdoR,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,6BACdvkD,KAAM,cACNpR,KAAM,UAGdoR,KAAM,gBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,YACdvkD,KAAM,WACNpR,KAAM,aAEV,CACI21D,aAAc,+BACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,qBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,YACdvkD,KAAM,WACNpR,KAAM,aAEV,CACI21D,aAAc,YACdvkD,KAAM,WACNpR,KAAM,aAEV,CACI21D,aAAc,WACdvkD,KAAM,gBACNpR,KAAM,YAEV,CACI21D,aAAc,SACdvkD,KAAM,WACNpR,KAAM,WAGdoR,KAAM,2BACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,OACdvkD,KAAM,qBACNpR,KAAM,QAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,kBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,eACNpR,KAAM,UAEV,CACI21D,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGdoR,KAAM,sBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,iDChSd,IAAA7Q,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQmlD,2BAAwB,EAChC,IAAMlC,EAAWjmD,EAAQ,OACnBmoD,EAAqB,oBAAAA,IAAA/mD,EAAA,KAAA+mD,EAAA,CAGtB,OAHsB5mD,EAAA4mD,EAAA,OAAA3mD,IAAA,UAAAC,MACvB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAACrf,CAAA,CAHsB,GAK3BnlD,EAAQmlD,sBAAwBA,EAChC,IAAMsf,EAAO,CACT,CACIC,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGdoR,KAAM,WACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGdoR,KAAM,WACNpR,KAAM,SAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,YACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,UACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,YACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,WACNwkD,QAAS,CACL,CACID,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,OACNwkD,QAAS,CACL,CACID,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,SACNwkD,QAAS,CACL,CACID,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,cACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,WACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,eACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,aACjB71D,KAAM,gDCvOd,IAAA7Q,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ+1D,sBAAmB,EAC3B,IAAM9S,EAAWjmD,EAAQ,OACnB+4D,EAAgB,oBAAAA,IAAA33D,EAAA,KAAA23D,EAAA,CAGjB,OAHiBx3D,EAAAw3D,EAAA,OAAAv3D,IAAA,UAAAC,MAClB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAACzO,CAAA,CAHiB,GAKtB/1D,EAAQ+1D,iBAAmBA,EAC3B,IAAM0O,EAAO,CACT,CACIC,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,OACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGdoR,KAAM,WACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,aACNpR,KAAM,SAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGdoR,KAAM,YACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,WACNwkD,QAAS,CACL,CACID,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,OACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,OACNwkD,QAAS,CACL,CACID,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,SACNwkD,QAAS,CACL,CACID,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,cACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,MACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,WACNwkD,QAAS,GACTC,gBAAiB,UACjB71D,KAAM,iDCrMd,IAAA7Q,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ0kD,sBAAmB,EAC3B,IAAMzB,EAAWjmD,EAAQ,OACnB0nD,EAAgB,oBAAAA,IAAAtmD,EAAA,KAAAsmD,EAAA,CAGjB,OAHiBnmD,EAAAmmD,EAAA,OAAAlmD,IAAA,UAAAC,MAClB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAAC9f,CAAA,CAHiB,GAKtB1kD,EAAQ0kD,iBAAmBA,EAC3B,IAAM+f,EAAO,CACT,CACIC,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,uBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,mBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,sBACNpR,KAAM,SAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,qBACNpR,KAAM,UAEV,CACI21D,aAAc,YACdvkD,KAAM,eACNpR,KAAM,cAGdoR,KAAM,qBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,YAGdoR,KAAM,UACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGd61D,gBAAiB,UACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,qBACNpR,KAAM,UAEV,CACI21D,aAAc,QACdvkD,KAAM,WACNpR,KAAM,SAEV,CACI21D,aAAc,YACdvkD,KAAM,eACNpR,KAAM,cAGdoR,KAAM,qBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,YAGdoR,KAAM,wBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,iDCxPd,IAAA7Q,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ4qD,sBAAmB,EAC3B,IAAM3H,EAAWjmD,EAAQ,OACnB4tD,EAAgB,oBAAAA,IAAAxsD,EAAA,KAAAwsD,EAAA,CAGjB,OAHiBrsD,EAAAqsD,EAAA,OAAApsD,IAAA,UAAAC,MAClB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAAC5Z,CAAA,CAHiB,GAKtB5qD,EAAQ4qD,iBAAmBA,EAC3B,IAAM6Z,EAAO,CACT,CACI9V,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,QACNpR,KAAM,UAGdoR,KAAM,kBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,YAGdoR,KAAM,aACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,WACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGdoR,KAAM,WACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,iDC3Id,IAAA7Q,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,QACA6N,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQmkD,oBAAiB,EACzB,IAAMlB,EAAWjmD,EAAQ,OACnBmnD,EAAc,oBAAAA,IAAA/lD,EAAA,KAAA+lD,EAAA,CAGf,OAHe5lD,EAAA4lD,EAAA,OAAA3lD,IAAA,UAAAC,MAChB,SAAe8B,EAASikE,GACpB,OAAO,IAAIvhB,EAAS4K,SAASttD,EAASkkE,EAAMD,EAChD,KAACrgB,CAAA,CAHe,GAKpBnkD,EAAQmkD,eAAiBA,EACzB,IAAMsgB,EAAO,CACT,CACIC,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGdoR,KAAM,cACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGdoR,KAAM,iBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,sBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,sBACNpR,KAAM,YAGdoR,KAAM,eACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,YAGdoR,KAAM,qBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,wBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,yBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,iBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,GACRtuC,KAAM,SACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,OACdvkD,KAAM,oBACNpR,KAAM,SAGdoR,KAAM,gCACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,cACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,YAGdoR,KAAM,8BACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,YAGdoR,KAAM,kCACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,qBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,qBACNpR,KAAM,YAGdoR,KAAM,qBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,SACdvkD,KAAM,sBACNpR,KAAM,UAEV,CACI81D,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,aACdvkD,KAAM,WACNpR,KAAM,cAEV,CACI21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAEV,CACI21D,aAAc,QACdvkD,KAAM,YACNpR,KAAM,SAEV,CACI21D,aAAc,YACdvkD,KAAM,cACNpR,KAAM,aAEV,CACI21D,aAAc,QACdvkD,KAAM,iBACNpR,KAAM,SAEV,CACI21D,aAAc,QACdvkD,KAAM,kBACNpR,KAAM,UAGd01D,SAAS,EACTC,aAAc,yCACdvkD,KAAM,cACNpR,KAAM,SAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,qBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,YAGdoR,KAAM,2BACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,cACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,8BACNpR,KAAM,YAGd01D,SAAS,EACTC,aAAc,wBACdvkD,KAAM,oBACNpR,KAAM,SAEV,CACI81D,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,8BACNpR,KAAM,YAGd01D,SAAS,EACTC,aAAc,wBACdvkD,KAAM,oBACNpR,KAAM,UAGdoR,KAAM,oBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,uBACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIA,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,sBACdvkD,KAAM,SACNpR,KAAM,SAEV,CACI21D,aAAc,OACdvkD,KAAM,cACNpR,KAAM,QAEV,CACI21D,aAAc,WACdvkD,KAAM,YACNpR,KAAM,aAGd21D,aAAc,4BACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,eACNpR,KAAM,UAGd01D,SAAS,EACTC,aAAc,gCACdvkD,KAAM,aACNpR,KAAM,SAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,4BACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,gCACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,GACRtuC,KAAM,WACNpR,KAAM,SAEV,CACIy1D,WAAW,EACX/V,OAAQ,CACJ,CACIgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,mBACNpR,KAAM,WAEV,CACI01D,SAAS,EACTC,aAAc,OACdvkD,KAAM,WACNpR,KAAM,SAGdoR,KAAM,wBACNpR,KAAM,SAEV,CACI0/C,OAAQ,GACRtuC,KAAM,iBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,YAGdoR,KAAM,wBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,8BACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,oBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGd21D,aAAc,mCACdvkD,KAAM,0BACNpR,KAAM,SAEV,CACI81D,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI21D,aAAc,SACdvkD,KAAM,YACNpR,KAAM,UAEV,CACI21D,aAAc,SACdvkD,KAAM,8BACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,oBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,wBACNpR,KAAM,SAEV,CACI21D,aAAc,QACdvkD,KAAM,yBACNpR,KAAM,SAEV,CACI21D,aAAc,QACdvkD,KAAM,SACNpR,KAAM,SAEV,CACI21D,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGd21D,aAAc,qCACdvkD,KAAM,iBACNpR,KAAM,YAGdoR,KAAM,eACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,8BACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,oBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGd21D,aAAc,qCACdvkD,KAAM,cACNpR,KAAM,YAGdoR,KAAM,gBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIA,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,sBACdvkD,KAAM,SACNpR,KAAM,SAEV,CACI21D,aAAc,OACdvkD,KAAM,cACNpR,KAAM,QAEV,CACI21D,aAAc,WACdvkD,KAAM,YACNpR,KAAM,aAGd21D,aAAc,4BACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,eACNpR,KAAM,UAGd21D,aAAc,gCACdvkD,KAAM,cACNpR,KAAM,SAEV,CACI21D,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,SACdvkD,KAAM,YACNpR,KAAM,WAGdoR,KAAM,eACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,iBACNwkD,QAAS,CACL,CACID,aAAc,YACdvkD,KAAM,SACNpR,KAAM,cAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,WACdvkD,KAAM,GACNpR,KAAM,aAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,SACNwkD,QAAS,CACL,CACIE,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,OACNpR,KAAM,WAEV,CACI21D,aAAc,WACdvkD,KAAM,YACNpR,KAAM,aAGd21D,aAAc,0BACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,qBACNpR,KAAM,UAEV,CACI21D,aAAc,QACdvkD,KAAM,WACNpR,KAAM,SAEV,CACI21D,aAAc,YACdvkD,KAAM,eACNpR,KAAM,cAGdoR,KAAM,wBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,gBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,uBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,gCACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,cACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,8BACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,kCACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,qBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,uBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,8BACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,qBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,0BACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,sBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,0BACNwkD,QAAS,CACL,CACID,aAAc,oBACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,cACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,oBACNwkD,QAAS,CACL,CACIE,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,8BACNpR,KAAM,YAGd21D,aAAc,wBACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,2BACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,8BACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,yBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,YAGdoR,KAAM,2BACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGdoR,KAAM,mBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,cACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,SACdvkD,KAAM,YACNpR,KAAM,WAGdoR,KAAM,sBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGdoR,KAAM,cACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,iBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,OACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,YAGdoR,KAAM,wBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,8BACNwkD,QAAS,CACL,CACIE,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,sBACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,YAGd21D,aAAc,2BACdvkD,KAAM,GACNpR,KAAM,UAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,cACNpR,KAAM,WAGdoR,KAAM,uBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIA,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,sBACdvkD,KAAM,SACNpR,KAAM,SAEV,CACI21D,aAAc,OACdvkD,KAAM,cACNpR,KAAM,QAEV,CACI21D,aAAc,WACdvkD,KAAM,YACNpR,KAAM,aAGd21D,aAAc,4BACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,eACNpR,KAAM,UAGd21D,aAAc,gCACdvkD,KAAM,cACNpR,KAAM,SAEV,CACI21D,aAAc,SACdvkD,KAAM,cACNpR,KAAM,WAGdoR,KAAM,4BACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,8BACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,oBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGd21D,aAAc,mCACdvkD,KAAM,aACNpR,KAAM,SAEV,CACI81D,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,cACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,8BACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,oBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,yBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGd21D,aAAc,qCACdvkD,KAAM,mBACNpR,KAAM,WAEV,CACI81D,WAAY,CACR,CACIH,aAAc,YACdvkD,KAAM,4BACNpR,KAAM,aAEV,CACI21D,aAAc,YACdvkD,KAAM,kBACNpR,KAAM,cAGd21D,aAAc,8BACdvkD,KAAM,SACNpR,KAAM,UAGdoR,KAAM,cACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAEV,CACI21D,aAAc,SACdvkD,KAAM,qBACNpR,KAAM,UAEV,CACI21D,aAAc,YACdvkD,KAAM,eACNpR,KAAM,aAEV,CACI21D,aAAc,gBACdvkD,KAAM,UACNpR,KAAM,UAGdoR,KAAM,+BACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI81D,WAAY,CACR,CACIH,aAAc,QACdvkD,KAAM,YACNpR,KAAM,SAEV,CACI21D,aAAc,OACdvkD,KAAM,YACNpR,KAAM,QAEV,CACI21D,aAAc,SACdvkD,KAAM,kBACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,MACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGd21D,aAAc,eACdvkD,KAAM,OACNpR,KAAM,SAEV,CACI21D,aAAc,YACdvkD,KAAM,SACNpR,KAAM,cAGdoR,KAAM,sBACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI81D,WAAY,CACR,CACIH,aAAc,SACdvkD,KAAM,kBACNpR,KAAM,UAEV,CACI21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,UAGd21D,aAAc,mBACdvkD,KAAM,WACNpR,KAAM,SAEV,CACI21D,aAAc,YACdvkD,KAAM,SACNpR,KAAM,cAGdoR,KAAM,0BACNwkD,QAAS,CACL,CACID,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,YACNpR,KAAM,SAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,mBACNpR,KAAM,YAGdoR,KAAM,uBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,YAGd61D,gBAAiB,UACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,YAGdoR,KAAM,eACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,uBACNpR,KAAM,YAGdoR,KAAM,gCACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,YAGdoR,KAAM,8BACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,gCACNpR,KAAM,YAGdoR,KAAM,kCACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,sBACNpR,KAAM,YAGdoR,KAAM,qBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,OACdvkD,KAAM,uBACNpR,KAAM,SAGdoR,KAAM,wBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,4BACNpR,KAAM,YAGdoR,KAAM,2BACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAEV,CACI21D,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGdoR,KAAM,eACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,oBACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,cACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,2BACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,8BACNpR,KAAM,YAGd21D,aAAc,wBACdvkD,KAAM,qBACNpR,KAAM,UAGdoR,KAAM,oBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIiW,aAAc,UACdvkD,KAAM,eACNpR,KAAM,YAGdoR,KAAM,kBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,YAEV,CACI0/C,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAEV,CACI0/C,OAAQ,CACJ,CACIoW,WAAY,CACR,CACIA,WAAY,CACR,CACIH,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAEV,CACI21D,aAAc,sBACdvkD,KAAM,SACNpR,KAAM,SAEV,CACI21D,aAAc,OACdvkD,KAAM,cACNpR,KAAM,QAEV,CACI21D,aAAc,WACdvkD,KAAM,YACNpR,KAAM,aAGd21D,aAAc,4BACdvkD,KAAM,YACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,QACdvkD,KAAM,eACNpR,KAAM,UAGd21D,aAAc,gCACdvkD,KAAM,cACNpR,KAAM,SAEV,CACI21D,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAEV,CACI21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGdoR,KAAM,sBACNwkD,QAAS,CACL,CACID,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGd61D,gBAAiB,OACjB71D,KAAM,iDCxgEdpE,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ+1D,iBAAmB/1D,EAAQukE,kBAAoBvkE,EAAQ4qD,iBAAmB5qD,EAAQ0kD,iBAAmB1kD,EAAQmlD,sBAAwBnlD,EAAQmkD,oBAAiB,EACtK,IAAI6gB,EAAmBhoE,EAAQ,OAC/B6N,OAAO6yB,eAAe19B,EAAS,iBAAkB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOu4D,EAAiB7gB,cAAgB,IAChI,IAAI8gB,EAA0BjoE,EAAQ,OACtC6N,OAAO6yB,eAAe19B,EAAS,wBAAyB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOw4D,EAAwB9f,qBAAuB,IACrJ,IAAI+f,EAAqBloE,EAAQ,OACjC6N,OAAO6yB,eAAe19B,EAAS,mBAAoB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAOy4D,EAAmBxgB,gBAAkB,IACtI,IAAIygB,EAAqBnoE,EAAQ,OACjC6N,OAAO6yB,eAAe19B,EAAS,mBAAoB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAO04D,EAAmBva,gBAAkB,IACtI,IAAIwa,EAAsBpoE,EAAQ,MAClC6N,OAAO6yB,eAAe19B,EAAS,oBAAqB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAO24D,EAAoBb,iBAAmB,IACzI,IAAIc,EAAqBroE,EAAQ,MACjC6N,OAAO6yB,eAAe19B,EAAS,mBAAoB,CAAEwM,YAAY,EAAMC,IAAK,WAAc,OAAO44D,EAAmBtP,gBAAkB,wCCbtI,IAAI33B,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQslE,qCAAkC,EAC1C,IAAMC,EAA8BnnC,EAAgBphC,EAAQ,QACtDwoE,EAA8BpnC,EAAgBphC,EAAQ,QACtDG,EAAUH,EAAQ,OAElByoE,EAAsB,CACxBD,EAA4Bz2D,QAASw2D,EAA4Bx2D,SAKrE/O,EAAQslE,gCAHgC,SAAC3c,GACrC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ8c,EAC/C,sCCdA,IAAIrnC,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ20C,+BAA4B,EACpC,IAAMgxB,EAAuBvnC,EAAgBphC,EAAQ,QAC/C4oE,EAAuBxnC,EAAgBphC,EAAQ,QAC/C6oE,EAAuBznC,EAAgBphC,EAAQ,QAC/C8oE,EAA4B1nC,EAAgBphC,EAAQ,OACpDG,EAAUH,EAAQ,OAElB+oE,EAAqB,CACvBD,EAA0B/2D,QAAS82D,EAAqB92D,QAAS62D,EAAqB72D,QAAS42D,EAAqB52D,SAKxH/O,EAAQ20C,0BAH0B,SAACgU,GAC/B,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQod,EAC/C,sCChBA,IAAI3nC,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQgmE,6BAA+BhmE,EAAQq0C,0CAA4Cr0C,EAAQimE,yCAAsC,EACzI,IAAMC,EAAkC9nC,EAAgBphC,EAAQ,QAC1DmpE,EAAwC/nC,EAAgBphC,EAAQ,QAChEopE,EAAwChoC,EAAgBphC,EAAQ,QAChEG,EAAUH,EAAQ,OAElBqpE,EAAoC,CACtCH,EAAgCn3D,SAKpC/O,EAAQimE,oCAHoC,SAACtd,GACzC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ0d,EAC/C,EAGA,IAAMC,EAAmC,CACrCF,EAAsCr3D,QAASo3D,EAAsCp3D,SAKzF/O,EAAQq0C,0CAH0C,SAACsU,GAC/C,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ2d,EAC/C,EAGA,IAAMC,EAA6B,CAC/BH,EAAsCr3D,QAASo3D,EAAsCp3D,QAASm3D,EAAgCn3D,SAKlI/O,EAAQgmE,6BAH6B,SAACrd,GAClC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ4d,EAC/C,sCC/BA,IAAIxW,EAAmB1xD,MAAQA,KAAK0xD,kBAAqBllD,OAAOqI,OAAU,SAAS6W,EAAGjR,EAAG9N,EAAGud,QAC7EzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B,IAAIglD,EAAOnlD,OAAOolD,yBAAyBn3C,EAAG9N,GACzCglD,KAAS,QAASA,GAAQl3C,EAAEulB,WAAa2xB,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAExjD,YAAY,EAAMC,IAAK,WAAa,OAAOqM,EAAE9N,EAAI,IAE5DH,OAAO6yB,eAAe3T,EAAGxB,EAAIynC,EACjC,EAAM,SAASjmC,EAAGjR,EAAG9N,EAAGud,QACTzqB,IAAPyqB,IAAkBA,EAAKvd,GAC3B+e,EAAExB,GAAMzP,EAAE9N,EACd,GACIuB,EAAgBlO,MAAQA,KAAKkO,cAAiB,SAASuM,EAAG9Y,GAC1D,IAAK,IAAIyU,KAAKqE,EAAa,YAANrE,GAAoB5J,OAAOvC,UAAUgoD,eAAe9qD,KAAKxF,EAASyU,IAAIs7C,EAAgB/vD,EAAS8Y,EAAGrE,EAC3H,EACA5J,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtD8N,EAAavP,EAAQ,OAAYgD,GACjCuM,EAAavP,EAAQ,OAAYgD,GACjCuM,EAAavP,EAAQ,OAAgBgD,GACrCuM,EAAavP,EAAQ,OAAWgD,GAChCuM,EAAavP,EAAQ,OAAcgD,GACnCuM,EAAavP,EAAQ,OAAgBgD,uCCpBrC,IAAIo+B,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ60C,4BAA8B70C,EAAQ+0C,wBAA0B/0C,EAAQu0C,+BAAiCv0C,EAAQy0C,4BAAyB,EAClJ,IAAM+xB,EAAqBpoC,EAAgBphC,EAAQ,QAC7CypE,EAAqBroC,EAAgBphC,EAAQ,QAC7C0pE,EAAoBtoC,EAAgBphC,EAAQ,QAC5C2pE,EAAoBvoC,EAAgBphC,EAAQ,QAC5C4pE,EAAoBxoC,EAAgBphC,EAAQ,QAC5C6pE,EAA8BzoC,EAAgBphC,EAAQ,QACtD8pE,EAA8B1oC,EAAgBphC,EAAQ,QACtD+pE,EAA0B3oC,EAAgBphC,EAAQ,QAClDgqE,EAA0B5oC,EAAgBphC,EAAQ,QAClDG,EAAUH,EAAQ,OAElBiqE,EAAuB,CACzBL,EAAkB73D,QAAS43D,EAAkB53D,QAAS23D,EAAkB33D,SAK5E/O,EAAQy0C,uBAHuB,SAACkU,GAC5B,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQse,EAC/C,EAGA,IAAMC,EAA+B,CACjCJ,EAA4B/3D,QAAS83D,EAA4B93D,SAKrE/O,EAAQu0C,+BAH+B,SAACoU,GACpC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQue,EAC/C,EAGA,IAAMC,EAAwB,CAC1BV,EAAmB13D,QAASy3D,EAAmBz3D,SAKnD/O,EAAQ+0C,wBAHwB,SAAC4T,GAC7B,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQwe,EAC/C,EAEA,IAAMC,EAA4B,CAC9BJ,EAAwBj4D,QAASg4D,EAAwBh4D,SAK7D/O,EAAQ60C,4BAH4B,SAAC8T,GACjC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQye,EAC/C,sCC5CA,IAAIhpC,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQm0C,6BAA+Bn0C,EAAQqnE,mBAAqBrnE,EAAQk0C,2BAA6Bl0C,EAAQsnE,sBAAmB,EACpI,IAAMC,EAAiBnpC,EAAgBphC,EAAQ,QACzCwqE,EAAcppC,EAAgBphC,EAAQ,QACtCyqE,EAAwBrpC,EAAgBphC,EAAQ,QAChD0qE,EAAqBtpC,EAAgBphC,EAAQ,QAC7C2qE,EAAqBvpC,EAAgBphC,EAAQ,QAC7C4qE,EAAqBxpC,EAAgBphC,EAAQ,QAC7C6qE,EAAqBzpC,EAAgBphC,EAAQ,QAC7CG,EAAUH,EAAQ,OAExBgD,EAAQsnE,iBAAmB,CACvBE,EAAYz4D,QAAS24D,EAAmB34D,QAAS44D,EAAmB54D,QAAS64D,EAAmB74D,QAAS84D,EAAmB94D,SAKhI/O,EAAQk0C,2BAH2B,SAACyU,GAChC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ3oD,EAAQsnE,iBACvD,EAGAtnE,EAAQqnE,mBAAqB,CACzBE,EAAex4D,QAAS04D,EAAsB14D,SAKlD/O,EAAQm0C,6BAH6B,SAACwU,GAClC,OAAO,EAAIxrD,EAAQuoE,gBAAgB/c,EAAQ3oD,EAAQqnE,mBACvD,oCC3BAx8D,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,wCCAtD,IAAI2/B,EAAmB//B,MAAQA,KAAK+/B,iBAAoB,SAAUzkB,GAC9D,OAAQA,GAAOA,EAAI0kB,WAAc1kB,EAAM,CAAE,QAAWA,EACxD,EACA9O,OAAO6yB,eAAe19B,EAAS,aAAc,CAAEvB,OAAO,IACtDuB,EAAQ0lE,oBAAiB,EACzB,IAAM9kC,EAAcxC,EAAgBphC,EAAQ,QACtC8qE,EAAiB,CAAE9zB,UAAU,GAanCh0C,EAAQ0lE,eAZe,WAA4C,IAA3CqC,EAAQnqE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGkqE,EAAgBE,EAAWpqE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpDmqE,EAAuBp9D,OAAOwyB,OAAOxyB,OAAOwyB,OAAO,CAAC,EAAGyqC,GAAiBC,GAC9E,OAAOC,EAAY7nC,MAAK,SAAC+nC,GACrB,QAA4C,qBAAjCD,EAAqBzlC,WAA4B,EAAI5B,EAAY7xB,SAASm5D,EAAW1lC,QAASylC,EAAqBzlC,aAEjF,mBAAlCylC,EAAqBj0B,UAA0Bk0B,EAAWl0B,UAAYi0B,EAAqBj0B,aAElGi0B,EAAqB/nC,UAAYgoC,EAAWC,iBAAiBF,EAAqB/nC,UAG1F,GACJ,2gB9CnBA3zB,EAAAvP,EAAA,OAAAgD,GACAuM,EAAAvP,EAAA,OAAAgD,gS+CDA,IAAAyiC,EAAAzlC,EAAA,OAMAorE,EAAAhqC,EAAAphC,EAAA,QAMaqrE,EAAW,WAItB,SAAAA,EAAYC,EAAoBpoC,GAAuB9hC,EAAA,KAAAiqE,GACrD,KAAKC,WAAaA,EAClB,KAAKpoC,QAAiB,OAAPA,QAAO,IAAPA,EAAAA,EAAWkoC,EAAAr5D,OAC5B,CAmDC,OAjDDxQ,EAAA8pE,EAAA,EAAA7pE,IAAA,iBAAAC,MAAA,eAAA8pE,EAAApkE,EAAAL,IAAAQ,MAOA,SAAAC,EAAqB06C,EAAcupB,GAAkC,IAAA15D,EAAA25D,EAAA,OAAA3kE,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAChB,OAA7CyJ,EAAG,GAAApN,OAAM,KAAK4mE,WAAU,kBAAA5mE,OAAiBu9C,EAAI,uCAAA15C,EAAAF,KAAA,EAChC,KAAK66B,QAAQwoC,KAAK55D,EAAK05D,GAAO,OAAvC,OAAJC,EAAIljE,EAAAO,KAAAP,EAAA8I,OAAA,SACHo0B,EAAA+P,UAAU3zC,KAAK4pE,EAAK/jE,KAAKk9B,YAAU,wBAAAr8B,EAAAM,OAAA,GAAAtB,EAAA,UAC3C,gBAAA2C,EAAAC,GAAA,OAAAohE,EAAAniE,MAAA,KAAAxI,UAAA,EAXD,IAaA,CAAAY,IAAA,mBAAAC,MAAA,eAAAkqE,EAAAxkE,EAAAL,IAAAQ,MAMA,SAAAs4B,EAAuB8jB,GAAkB,IAAA5xC,EAAA25D,EAAA,OAAA3kE,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkC,OAAnEyJ,EAAG,GAAApN,OAAM,KAAK4mE,WAAU,kCAAA5mE,OAAiCg/C,GAAUv7C,EAAAE,KAAA,EACtD,KAAK66B,QAAQzzB,IAAmBqC,GAAI,OAA7C,OAAJ25D,EAAItjE,EAAAW,KAAAX,EAAAkJ,OAAA,SACHo6D,EAAK/jE,MAAI,wBAAAS,EAAAU,OAAA,GAAA+2B,EAAA,UACjB,gBAAAx1B,GAAA,OAAAuhE,EAAAviE,MAAA,KAAAxI,UAAA,EAVD,IAYA,CAAAY,IAAA,YAAAC,MAAA,eAAAmqE,EAAAzkE,EAAAL,IAAAQ,MASA,SAAAkgC,EACEpD,EACAsf,EACA8nB,EACAt4D,GAAwB,IAAApB,EAAApK,EAAA+jE,EAAA,OAAA3kE,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OAOG,OALrByJ,EAAG,GAAApN,OAAM,KAAK4mE,WAAU,kBAAA5mE,OAAiB0/B,EAAW,2BACpD18B,EAAI0O,EAAAA,EAAA,GACLo1D,EAAO9jE,MAAI,IACdmkE,wBAAyBnoB,EACzB4I,OAAQp5C,EAAU6vC,OAClB7vC,UAAWA,EAAUxL,OAAI+/B,EAAAp/B,KAAA,EAER,KAAK66B,QAAQwoC,KAAK55D,EAAKpK,GAAK,OAArC,OAAJ+jE,EAAIhkC,EAAA3+B,KAAA2+B,EAAAp2B,OAAA,SACHo6D,EAAK/jE,MAAI,wBAAA+/B,EAAA5+B,OAAA,GAAA2+B,EAAA,UACjB,gBAAA0C,EAAAgB,EAAAK,EAAAS,GAAA,OAAA4/B,EAAAxiE,MAAA,KAAAxI,UAAA,EAxBD,MAwBCyqE,CAAA,CA1DqB,GAAxBroE,EAAAA,YAAAqoE,0PCNA,IAAAS,EAAA9rE,EAAA,OACAylC,EAAAzlC,EAAA,OAGA0lC,EAAA1lC,EAAA,OAMAG,EAAAH,EAAA,MAEMy6D,EAAQ,SAACsR,GAAgB,OAC7B,IAAItjE,SAAQ,SAACC,GAAO,OAAK45D,WAAW55D,EAASqjE,EAAS,GAAC,EAc5CC,EAAiB,SAAAC,GAAAhlE,EAAA+kE,EAAAC,GAAA,IAAA1iE,EAAArC,EAAA8kE,GAa5B,SAAAA,EACE/pB,EACAiqB,EACA75D,EACAwJ,GAAiC,IAAAzK,EAKX,OALWhQ,EAAA,KAAA4qE,IAEjC56D,EAAA7H,EAAAf,KAAA,KAAMy5C,EAAK7a,aAAc/0B,IACpB65D,QAAUA,EACf96D,EAAK6wC,KAAOA,EACZ7wC,EAAKyK,QAAUA,EAAOzK,CACxB,CA6EC,OA7EA7P,EAAAyqE,EAAA,EAAAxqE,IAAA,2BAAAC,MAAA,eAAA0qE,EAAAhlE,EAAAL,IAAAQ,MAED,SAAAs4B,EACE8jB,EACA8nB,GAA2B,IAAAY,EAAAC,EAAArvC,EAAA,YAAAl2B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEC,KAAK45C,KAAI,OAShB,OATfmqB,EAAajkE,EAAAW,KACbujE,EAAmB,KAAKH,QAAO/jE,EAAAS,GAE/B4iE,EAAOr8C,GAAEhnB,EAAAc,GACNw8B,EAAA+P,UAAU3zC,KAAK2pE,EAAO/pE,OAAM0G,EAAAyX,GAC7B4rD,EAAO9jE,KAAIS,EAAA0iB,GACN2gD,EAAOzgC,UAAS5iC,EAAA2iB,GACjB2a,EAAA+P,UAAU3zC,KAAK2pE,EAAO5mC,WAAUz8B,EAAA4iB,GAChC0a,EAAA+P,UAAU3zC,KAAK,GAAEsG,EAAAozC,GACpBiwB,EAAO7qE,MAAKwH,EAAAE,KAAA,GACJ+jE,EAAc1jC,aAAY,QAmBxC,OAnBwCvgC,EAAAqzC,GAAArzC,EAAAW,KAAAX,EAAAszC,GACnCiI,EAAUv7C,EAAAuzC,GACV,KAAKn4C,QAAO4E,EAAAwzC,IAAA,eAAA2wB,EAAAnlE,EAAAL,IAAAQ,MAEZ,SAAAC,EAAOwsC,GAAsB,IAAA/vB,EAAAohC,EAAAmnB,EAAAnhB,EAAA,OAAAtkD,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OACtB,OAAAE,EAAAH,KAAA,EAAAG,EAAAF,KAAA,EAEiBgkE,EAAiBG,iBAAiB9oB,GAAW,OAAtD,KAAT6oB,EAAShkE,EAAAO,MACDusD,gBAAe,CAAA9sD,EAAAF,KAAA,SACW,OAAtC20B,EAAKyvC,eAAe,mBAAkBlkE,EAAAF,KAAA,EAChB20B,EAAK3qB,SAAWq6D,mBACpCH,EAAUlX,gBACVthB,GACD,OAHY,OAAPqX,EAAO7iD,EAAAO,KAAAP,EAAA8I,OAAA,UAIN,EAAAlR,EAAAwsE,YAAWvhB,EAASogB,IAAO,QAAAjjE,EAAAF,KAAA,iBAAAE,EAAAH,KAAA,GAAAG,EAAAK,GAAAL,EAAA,wBAAAA,EAAAF,KAAA,GAGhCoyD,EAAgC,QAA1BrV,EAAY,QAAZphC,EAAAgZ,EAAKnhB,eAAO,IAAAmI,OAAA,EAAAA,EAAE4oD,oBAAY,IAAAxnB,EAAAA,EAAI,KAAK,QAAA78C,EAAAF,KAAA,iCAAAE,EAAAM,OAAA,GAAAtB,EAAA,mBAElD,gBAAA6C,GAAA,OAAAkiE,EAAAljE,MAAA,KAAAxI,UAAA,EAjBiB,GAiBjBuH,EAAAkJ,OAAA,UA1BD8d,GAAEhnB,EAAAS,GACFnH,MAAK0G,EAAAc,GACLvB,KAAIS,EAAAyX,GACJmrB,UAAS5iC,EAAA0iB,GACT8jB,SAAQxmC,EAAA2iB,GACRga,SAAQ38B,EAAA4iB,GACRpqB,MAAKwH,EAAAozC,GACL9oC,QAAOtK,EAAAqzC,GACP33C,KAAIsE,EAAAszC,GACJ55C,KAAIsG,EAAAuzC,GACJ3H,cAAe,EACf8V,KAAI1hD,EAAAwzC,MAAA,yBAAAxzC,EAAAU,OAAA,GAAA+2B,EAAA,UAiBP,gBAAA11B,EAAAC,GAAA,OAAAgiE,EAAA/iE,MAAA,KAAAxI,UAAA,EArCA,IAuCD,CAAAY,IAAA,kBAAAC,MAAA,eAAA25D,EAAAj0D,EAAAL,IAAAQ,MAMA,SAAAkgC,EACEiG,GAA2C,IAAAzpB,EAAAohC,EAAA18B,EAAAy8B,EAAApa,EAAA5b,EAAAznB,EAAAjG,EAAAorE,EAAAjoC,EAAAwnC,EAAA/nC,EAAAmnC,EAAA9nB,EAAAxwC,EAAA,OAAApM,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EAE1BolC,EAAW,OACM,OAD5B0X,EAAE1d,EAAA3+B,KACJiiC,EAAYrF,EAAAlD,cAAc+iB,KAAI9d,EAAAp/B,KAAA,EACnB88C,EAAGh2B,GAAE,OAAd,OAAFA,EAAEsY,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,EACY88C,EAAGz9C,KAAI,OAAC,GAAD+/B,EAAA7nB,GAAdoE,EAAAyjB,EAAA3+B,KAAA2+B,EAAAx+B,GAAe,OAAfw+B,EAAA7nB,GAAe6nB,EAAAx+B,GAAA,CAAAw+B,EAAAp/B,KAAA,SAAAo/B,EAAAx+B,QAAA,IAAA+a,EAAA,YAAAyjB,EAAAx+B,GAAA,CAAAw+B,EAAAp/B,KAAA,SAAAo/B,EAAA5c,QAAA,EAAA4c,EAAAp/B,KAAA,iBAAAo/B,EAAA5c,GAAA7G,EAAErgB,WAAU,WAAA8jC,EAAA3c,GAA3Bs6B,EAAA3d,EAAA5c,GAAA4c,EAAA7+B,GAA2B,OAA3B6+B,EAAA3c,IAA2B2c,EAAA7+B,GAAA,CAAA6+B,EAAAp/B,KAAA,SAAAo/B,EAAA7+B,QAAA,IAAAw8C,EAAA,YAAA3d,EAAA7+B,GAAA,CAAA6+B,EAAAp/B,KAAA,SAAAo/B,EAAA1c,GAAAq6B,EAAA3d,EAAAp/B,KAAA,iBAAAo/B,EAAA1c,GAAI,KAAI,QACzB,OADjBrjB,EAAI+/B,EAAA1c,GAAA0c,EAAA8T,GACI9V,EAAA+P,UAAS/N,EAAAp/B,KAAA,GAAa88C,EAAG1jD,MAAK,QAAC,GAADgmC,EAAAgU,GAAf/yB,EAAA+e,EAAA3+B,KAAA2+B,EAAA+T,GAAgB,OAAhB/T,EAAAgU,IAAgBhU,EAAA+T,GAAA,CAAA/T,EAAAp/B,KAAA,SAAAo/B,EAAA+T,QAAA,IAAA9yB,EAAA,YAAA+e,EAAA+T,GAAA,CAAA/T,EAAAp/B,KAAA,SAAAo/B,EAAAiU,GAAAhzB,EAAA+e,EAAAp/B,KAAA,iBAAAo/B,EAAAiU,GAAI,EAAC,QAY/C,OAZ+CjU,EAAAkU,IAAAlU,EAAAiU,GAA5Cj6C,EAAKgmC,EAAA8T,GAAa15C,KAAI2G,KAAAi/B,EAAA8T,GAAA9T,EAAAkU,KACrBxsB,IACHA,EAAKhvB,EAAA2sE,iBACLplE,EAAOvH,EAAA4sE,mBAAmB1b,mBAAmB,gBAAiB,CAAC5vD,EAAOiG,IACtEjG,EAAQgkC,EAAA+P,UAAU3zC,KAAK,GACvBkpC,EAAYrF,EAAAlD,cAAcwI,cAEtB6hC,EAAS,CACb19C,GAAIA,EACJznB,KAAAA,EACAjG,MAAOA,EAAMkC,WACbonC,UAAAA,GACDtD,EAAAp/B,KAAA,GACuB,KAAK6jE,QAAQc,eAAe,KAAKzpE,QAASspE,GAAO,QAA1D,OAATjoC,EAAS6C,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,GACa,KAAK45C,KAAI,QAGJ,OAH3BmqB,EAAa3kC,EAAA3+B,KACbu7B,EAAmBjuB,EAAAA,EAAA,GACpBy2D,GAAM,IACTjoC,UAAWA,EAAUmgB,aAAUtd,EAAAp/B,KAAA,GAEZ+jE,EAAc9gC,kBAAkB,CAAEjH,oBAAAA,IAAsB,QAAjE,OAANmnC,EAAM/jC,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,GACa+jE,EAAc//B,mBAAmBm/B,GAAO,QAAjD,OAAV9nB,EAAUjc,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,GACQ+jE,EAAc/9B,oBAAoBqV,GAAW,QAAtD,OAATxwC,EAASu0B,EAAA3+B,KAAA2+B,EAAAp/B,KAAA,GACT,KAAK6jE,QAAQe,UAAU,KAAK1pE,QAASmgD,EAAY8nB,EAAQt4D,GAAU,eAAAu0B,EAAAp2B,OAAA,SAElE,KAAK67D,yBAAyBxpB,EAAY8nB,EAAO9jE,OAAK,yBAAA+/B,EAAA5+B,OAAA,GAAA2+B,EAAA,UAC9D,gBAAA0C,GAAA,OAAAkxB,EAAAhyD,MAAA,KAAAxI,UAAA,EAtCD,MAsCCorE,CAAA,CApG2B,CAAQF,EAAAqB,YAAtCnqE,EAAAA,iBAAAgpE,wKCjCA,IAAAoB,EAAAptE,EAAA,OAEAuU,EAAAvU,EAAA,OACA42C,EAAA52C,EAAA,OAGagD,EAAAA,qBAAsB,EAAA4zC,EAAAmB,2BACtB/0C,EAAAA,iBAAmBA,EAAAqqE,oBAAsBC,eACzCtqE,EAAAA,mBAAqB,IAAIoqE,EAAA5Y,UAAUxxD,EAAAqqE,oBAAsBrc,KAuBzDhuD,EAAAA,WAAa,SAACooD,EAA6BogB,GAItD,OAFApgB,EAAQuK,OAvBQ,SAACvK,GAMjB,OAJgBA,EAAQM,KAAKvoB,MAC3B,SAACkoB,GAAQ,MACW,uEAAlBA,EAAIQ,OAAO,EAA2E,IAEvE,EAAI,CACzB,CAgBmB0hB,CAAUniB,GAC3BA,EAAQR,gBAfiB,SAACQ,EAA6BogB,GACvD,GAAIA,EAAOr8C,GAAG1rB,gBAAkBT,EAAA8pE,iBAAiBrpE,cAAe,CAE9D,IAAM+pE,EAAcpiB,EAAQM,KAAKvoB,MAC/B,SAACkoB,GAAQ,MACW,uEAAlBA,EAAIQ,OAAO,EAA2E,IAE1F,GAAI2hB,EAAa,OAAO,EAAAj5D,EAAA6yB,YAAW,KAAOomC,EAAY9lE,KAAKnD,MAAMipE,EAAY9lE,KAAK7G,OAAS,KAE7F,OAAOuqD,EAAQR,eACjB,CAK4B6iB,CAAmBriB,EAASogB,GAC/CpgB,CACT,yBCpCAlpB,EAAOl/B,QAAU,EAAjBk/B,0CCEA,IAAIr9B,EAAQ7E,EAAQ,OAChB0tE,EAAS1tE,EAAQ,OACjB2tE,EAAU3tE,EAAQ,OAClB4tE,EAAW5tE,EAAQ,OACnB6tE,EAAgB7tE,EAAQ,OACxB8tE,EAAe9tE,EAAQ,OACvB+tE,EAAkB/tE,EAAQ,OAC1BguE,EAAuBhuE,EAAQ,OAC/BiuE,EAAajuE,EAAQ,OACrBkuE,EAAgBluE,EAAQ,OACxBmuE,EAAgBnuE,EAAQ,OAE5BkiC,EAAOl/B,QAAU,SAAoBorE,GACnC,OAAO,IAAI3lE,SAAQ,SAA4BC,EAASC,GACtD,IAGI0lE,EAHAC,EAAcF,EAAO1mE,KACrB6mE,EAAiBH,EAAOp8D,QACxBw8D,EAAeJ,EAAOI,aAE1B,SAASzlE,IACHqlE,EAAOK,aACTL,EAAOK,YAAYC,YAAYL,GAG7BD,EAAOO,QACTP,EAAOO,OAAOC,oBAAoB,QAASP,EAE/C,CAEIxpE,EAAMgqE,WAAWP,IAAgBzpE,EAAMiqE,+BAClCP,EAAe,gBAGxB,IAAI5P,EAAU,IAAIoQ,eAGlB,GAAIX,EAAOY,KAAM,CACf,IAAIC,EAAWb,EAAOY,KAAKC,UAAY,GACnC5H,EAAW+G,EAAOY,KAAK3H,SAAW6H,SAASC,mBAAmBf,EAAOY,KAAK3H,WAAa,GAC3FkH,EAAea,cAAgB,SAAWC,KAAKJ,EAAW,IAAM5H,EAClE,CAEA,IAAIiI,EAAWzB,EAAcO,EAAOmB,QAASnB,EAAOt8D,KAOpD,SAAS09D,IACP,GAAK7Q,EAAL,CAIA,IAAI8Q,EAAkB,0BAA2B9Q,EAAUmP,EAAanP,EAAQ+Q,yBAA2B,KAGvGrV,EAAW,CACb3yD,KAHkB8mE,GAAiC,SAAjBA,GAA6C,SAAjBA,EACvC7P,EAAQtE,SAA/BsE,EAAQgR,aAGRha,OAAQgJ,EAAQhJ,OAChBia,WAAYjR,EAAQiR,WACpB59D,QAASy9D,EACTrB,OAAQA,EACRzP,QAASA,GAGX+O,GAAO,SAAkBjsE,GACvBiH,EAAQjH,GACRsH,GACF,IAAG,SAAiB6rC,GAClBjsC,EAAOisC,GACP7rC,GACF,GAAGsxD,GAGHsE,EAAU,IAvBV,CAwBF,CAmEA,GAnGAA,EAAQkR,KAAKzB,EAAOl8D,OAAO/N,cAAeypE,EAAS0B,EAAUlB,EAAOx9D,OAAQw9D,EAAO0B,mBAAmB,GAGtGnR,EAAQoR,QAAU3B,EAAO2B,QA+BrB,cAAepR,EAEjBA,EAAQ6Q,UAAYA,EAGpB7Q,EAAQqR,mBAAqB,WACtBrR,GAAkC,IAAvBA,EAAQsR,aAQD,IAAnBtR,EAAQhJ,QAAkBgJ,EAAQuR,aAAwD,IAAzCvR,EAAQuR,YAAY9/D,QAAQ,WAKjFkyD,WAAWkN,EACb,EAIF7Q,EAAQwR,QAAU,WACXxR,IAILh2D,EAAO,IAAIslE,EAAW,kBAAmBA,EAAWmC,aAAchC,EAAQzP,IAG1EA,EAAU,KACZ,EAGAA,EAAQ0R,QAAU,WAGhB1nE,EAAO,IAAIslE,EAAW,gBAAiBA,EAAWqC,YAAalC,EAAQzP,EAASA,IAGhFA,EAAU,IACZ,EAGAA,EAAQ4R,UAAY,WAClB,IAAIC,EAAsBpC,EAAO2B,QAAU,cAAgB3B,EAAO2B,QAAU,cAAgB,mBACxFU,EAAerC,EAAOqC,cAAgBzC,EACtCI,EAAOoC,sBACTA,EAAsBpC,EAAOoC,qBAE/B7nE,EAAO,IAAIslE,EACTuC,EACAC,EAAaC,oBAAsBzC,EAAW0C,UAAY1C,EAAWmC,aACrEhC,EACAzP,IAGFA,EAAU,IACZ,EAKI95D,EAAMiqE,uBAAwB,CAEhC,IAAI8B,GAAaxC,EAAOyC,iBAAmB9C,EAAgBuB,KAAclB,EAAO0C,eAC9EnD,EAAQoD,KAAK3C,EAAO0C,qBACpBhwE,EAEE8vE,IACFrC,EAAeH,EAAO4C,gBAAkBJ,EAE5C,CAGI,qBAAsBjS,GACxB95D,EAAMinC,QAAQyiC,GAAgB,SAA0BrxD,EAAK1b,GAChC,qBAAhB8sE,GAAqD,iBAAtB9sE,EAAIiC,qBAErC8qE,EAAe/sE,GAGtBm9D,EAAQsS,iBAAiBzvE,EAAK0b,EAElC,IAIGrY,EAAMqsE,YAAY9C,EAAOyC,mBAC5BlS,EAAQkS,kBAAoBzC,EAAOyC,iBAIjCrC,GAAiC,SAAjBA,IAClB7P,EAAQ6P,aAAeJ,EAAOI,cAIS,oBAA9BJ,EAAO+C,oBAChBxS,EAAQyS,iBAAiB,WAAYhD,EAAO+C,oBAIP,oBAA5B/C,EAAOiD,kBAAmC1S,EAAQ2S,QAC3D3S,EAAQ2S,OAAOF,iBAAiB,WAAYhD,EAAOiD,mBAGjDjD,EAAOK,aAAeL,EAAOO,UAG/BN,EAAa,SAASkD,GACf5S,IAGLh2D,GAAQ4oE,GAAWA,GAAUA,EAAOt/D,KAAQ,IAAIi8D,EAAkBqD,GAClE5S,EAAQ6S,QACR7S,EAAU,KACZ,EAEAyP,EAAOK,aAAeL,EAAOK,YAAYgD,UAAUpD,GAC/CD,EAAOO,SACTP,EAAOO,OAAO+C,QAAUrD,IAAeD,EAAOO,OAAOyC,iBAAiB,QAAS/C,KAI9EC,IACHA,EAAc,MAGhB,IAAIqD,EAAWxD,EAAcmB,GAEzBqC,IAA+D,IAAnD,CAAE,OAAQ,QAAS,QAASvhE,QAAQuhE,GAClDhpE,EAAO,IAAIslE,EAAW,wBAA0B0D,EAAW,IAAK1D,EAAW2D,gBAAiBxD,IAM9FzP,EAAQjI,KAAK4X,EACf,GACF,sCC3NA,IAAIzpE,EAAQ7E,EAAQ,OAChBmiC,EAAOniC,EAAQ,OACf6xE,EAAQ7xE,EAAQ,OAChB8xE,EAAc9xE,EAAQ,OA4B1B,IAAI+xE,EAnBJ,SAASC,EAAeC,GACtB,IAAIzqE,EAAU,IAAIqqE,EAAMI,GACpBl7C,EAAWoL,EAAK0vC,EAAMvmE,UAAUqzD,QAASn3D,GAa7C,OAVA3C,EAAMqtE,OAAOn7C,EAAU86C,EAAMvmE,UAAW9D,GAGxC3C,EAAMqtE,OAAOn7C,EAAUvvB,GAGvBuvB,EAAS7gB,OAAS,SAAgBi8D,GAChC,OAAOH,EAAeF,EAAYG,EAAeE,GACnD,EAEOp7C,CACT,CAGYi7C,CA3BGhyE,EAAQ,QA8BvB+xE,EAAMF,MAAQA,EAGdE,EAAM7D,cAAgBluE,EAAQ,OAC9B+xE,EAAMK,YAAcpyE,EAAQ,MAC5B+xE,EAAMM,SAAWryE,EAAQ,OACzB+xE,EAAMO,QAAUtyE,EAAAA,OAAAA,QAChB+xE,EAAMQ,WAAavyE,EAAQ,OAG3B+xE,EAAM9D,WAAajuE,EAAQ,OAG3B+xE,EAAMS,OAAST,EAAM7D,cAGrB6D,EAAMU,IAAM,SAAaC,GACvB,OAAOjqE,QAAQgqE,IAAIC,EACrB,EACAX,EAAMY,OAAS3yE,EAAQ,MAGvB+xE,EAAMa,aAAe5yE,EAAQ,OAE7BkiC,EAAOl/B,QAAU+uE,EAGjB7vC,EAAOl/B,QAAPk/B,QAAyB6vC,qCC7DzB,IAAI7D,EAAgBluE,EAAQ,OAQ5B,SAASoyE,EAAYS,GACnB,GAAwB,oBAAbA,EACT,MAAM,IAAIloE,UAAU,gCAGtB,IAAImoE,EAEJzxE,KAAK0xE,QAAU,IAAItqE,SAAQ,SAAyBC,GAClDoqE,EAAiBpqE,CACnB,IAEA,IAAIm/C,EAAQxmD,KAGZA,KAAK0xE,QAAQzoE,MAAK,SAASinE,GACzB,GAAK1pB,EAAMmrB,WAAX,CAEA,IAAI/uE,EACA+K,EAAI64C,EAAMmrB,WAAWnyE,OAEzB,IAAKoD,EAAI,EAAGA,EAAI+K,EAAG/K,IACjB4jD,EAAMmrB,WAAW/uE,GAAGstE,GAEtB1pB,EAAMmrB,WAAa,IARU,CAS/B,IAGA3xE,KAAK0xE,QAAQzoE,KAAO,SAAS2oE,GAC3B,IAAIC,EAEAH,EAAU,IAAItqE,SAAQ,SAASC,GACjCm/C,EAAM4pB,UAAU/oE,GAChBwqE,EAAWxqE,CACb,IAAG4B,KAAK2oE,GAMR,OAJAF,EAAQxB,OAAS,WACf1pB,EAAM6mB,YAAYwE,EACpB,EAEOH,CACT,EAEAF,GAAS,SAAgB7+D,GACnB6zC,EAAMsrB,SAKVtrB,EAAMsrB,OAAS,IAAIjF,EAAcl6D,GACjC8+D,EAAejrB,EAAMsrB,QACvB,GACF,CAKAf,EAAY9mE,UAAU8nE,iBAAmB,WACvC,GAAI/xE,KAAK8xE,OACP,MAAM9xE,KAAK8xE,MAEf,EAMAf,EAAY9mE,UAAUmmE,UAAY,SAAmBhnE,GAC/CpJ,KAAK8xE,OACP1oE,EAASpJ,KAAK8xE,QAIZ9xE,KAAK2xE,WACP3xE,KAAK2xE,WAAWvlE,KAAKhD,GAErBpJ,KAAK2xE,WAAa,CAACvoE,EAEvB,EAMA2nE,EAAY9mE,UAAUojE,YAAc,SAAqBjkE,GACvD,GAAKpJ,KAAK2xE,WAAV,CAGA,IAAI7nE,EAAQ9J,KAAK2xE,WAAW5iE,QAAQ3F,IACrB,IAAXU,GACF9J,KAAK2xE,WAAW3nE,OAAOF,EAAO,EAHhC,CAKF,EAMAinE,EAAYiB,OAAS,WACnB,IAAI9B,EAIJ,MAAO,CACL1pB,MAJU,IAAIuqB,GAAY,SAAkB37D,GAC5C86D,EAAS96D,CACX,IAGE86D,OAAQA,EAEZ,EAEArvC,EAAOl/B,QAAUovE,sCCpHjB,IAAInE,EAAajuE,EAAQ,OASzB,SAASkuE,EAAcl6D,GAErBi6D,EAAWzlE,KAAKnH,KAAiB,MAAX2S,EAAkB,WAAaA,EAASi6D,EAAWqF,cACzEjyE,KAAKgiB,KAAO,eACd,CAZYrjB,EAAQ,OAcduzE,SAASrF,EAAeD,EAAY,CACxCuF,YAAY,IAGdtxC,EAAOl/B,QAAUkrE,kCCnBjBhsC,EAAOl/B,QAAU,SAAkBvB,GACjC,SAAUA,IAASA,EAAM+xE,WAC3B,sCCFA,IAAI3uE,EAAQ7E,EAAQ,OAChB4tE,EAAW5tE,EAAQ,OACnByzE,EAAqBzzE,EAAQ,OAC7B0zE,EAAkB1zE,EAAQ,OAC1B8xE,EAAc9xE,EAAQ,OACtB6tE,EAAgB7tE,EAAQ,OACxB2zE,EAAY3zE,EAAQ,OAEpBmmB,EAAawtD,EAAUxtD,WAM3B,SAAS0rD,EAAMM,GACb9wE,KAAK++B,SAAW+xC,EAChB9wE,KAAKuyE,aAAe,CAClBjV,QAAS,IAAI8U,EACbpZ,SAAU,IAAIoZ,EAElB,CAOA5B,EAAMvmE,UAAUqzD,QAAU,SAAiBkV,EAAazF,GAG3B,kBAAhByF,GACTzF,EAASA,GAAU,CAAC,GACbt8D,IAAM+hE,EAEbzF,EAASyF,GAAe,CAAC,GAG3BzF,EAAS0D,EAAYzwE,KAAK++B,SAAUguC,IAGzBl8D,OACTk8D,EAAOl8D,OAASk8D,EAAOl8D,OAAOzO,cACrBpC,KAAK++B,SAASluB,OACvBk8D,EAAOl8D,OAAS7Q,KAAK++B,SAASluB,OAAOzO,cAErC2qE,EAAOl8D,OAAS,MAGlB,IAAIu+D,EAAerC,EAAOqC,kBAEL3vE,IAAjB2vE,GACFkD,EAAUG,cAAcrD,EAAc,CACpCsD,kBAAmB5tD,EAAWsqD,aAAatqD,EAAWJ,SACtDiuD,kBAAmB7tD,EAAWsqD,aAAatqD,EAAWJ,SACtD2qD,oBAAqBvqD,EAAWsqD,aAAatqD,EAAWJ,WACvD,GAIL,IAAIkuD,EAA0B,GAC1BC,GAAiC,EACrC7yE,KAAKuyE,aAAajV,QAAQ7yB,SAAQ,SAAoCqoC,GACjC,oBAAxBA,EAAYC,UAA0D,IAAhCD,EAAYC,QAAQhG,KAIrE8F,EAAiCA,GAAkCC,EAAYE,YAE/EJ,EAAwBlpE,QAAQopE,EAAYG,UAAWH,EAAYI,UACrE,IAEA,IAKIxB,EALAyB,EAA2B,GAO/B,GANAnzE,KAAKuyE,aAAavZ,SAASvuB,SAAQ,SAAkCqoC,GACnEK,EAAyB/mE,KAAK0mE,EAAYG,UAAWH,EAAYI,SACnE,KAIKL,EAAgC,CACnC,IAAIO,EAAQ,CAACf,OAAiB5yE,GAM9B,IAJA6B,MAAM2I,UAAUP,QAAQ3B,MAAMqrE,EAAOR,GACrCQ,EAAQA,EAAM/vE,OAAO8vE,GAErBzB,EAAUtqE,QAAQC,QAAQ0lE,GACnBqG,EAAM5zE,QACXkyE,EAAUA,EAAQzoE,KAAKmqE,EAAM/iE,QAAS+iE,EAAM/iE,SAG9C,OAAOqhE,CACT,CAIA,IADA,IAAI2B,EAAYtG,EACT6F,EAAwBpzE,QAAQ,CACrC,IAAI8zE,EAAcV,EAAwBviE,QACtCkjE,EAAaX,EAAwBviE,QACzC,IACEgjE,EAAYC,EAAYD,EAC1B,CAAE,MAAO/sE,GACPitE,EAAWjtE,GACX,KACF,CACF,CAEA,IACEorE,EAAUW,EAAgBgB,EAC5B,CAAE,MAAO/sE,GACP,OAAOc,QAAQE,OAAOhB,EACxB,CAEA,KAAO6sE,EAAyB3zE,QAC9BkyE,EAAUA,EAAQzoE,KAAKkqE,EAAyB9iE,QAAS8iE,EAAyB9iE,SAGpF,OAAOqhE,CACT,EAEAlB,EAAMvmE,UAAUupE,OAAS,SAAgBzG,GACvCA,EAAS0D,EAAYzwE,KAAK++B,SAAUguC,GACpC,IAAIkB,EAAWzB,EAAcO,EAAOmB,QAASnB,EAAOt8D,KACpD,OAAO87D,EAAS0B,EAAUlB,EAAOx9D,OAAQw9D,EAAO0B,iBAClD,EAGAjrE,EAAMinC,QAAQ,CAAC,SAAU,MAAO,OAAQ,YAAY,SAA6B55B,GAE/E2/D,EAAMvmE,UAAU4G,GAAU,SAASJ,EAAKs8D,GACtC,OAAO/sE,KAAKs9D,QAAQmT,EAAY1D,GAAU,CAAC,EAAG,CAC5Cl8D,OAAQA,EACRJ,IAAKA,EACLpK,MAAO0mE,GAAU,CAAC,GAAG1mE,OAEzB,CACF,IAEA7C,EAAMinC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+B55B,GAGrE,SAAS4iE,EAAmBC,GAC1B,OAAO,SAAoBjjE,EAAKpK,EAAM0mE,GACpC,OAAO/sE,KAAKs9D,QAAQmT,EAAY1D,GAAU,CAAC,EAAG,CAC5Cl8D,OAAQA,EACRF,QAAS+iE,EAAS,CAChB,eAAgB,uBACd,CAAC,EACLjjE,IAAKA,EACLpK,KAAMA,IAEV,CACF,CAEAmqE,EAAMvmE,UAAU4G,GAAU4iE,IAE1BjD,EAAMvmE,UAAU4G,EAAS,QAAU4iE,GAAmB,EACxD,IAEA5yC,EAAOl/B,QAAU6uE,sCC7JjB,IAAIhtE,EAAQ7E,EAAQ,OAYpB,SAASiuE,EAAWj6D,EAAS1D,EAAM89D,EAAQzP,EAAStE,GAClD34D,MAAM8G,KAAKnH,MACXA,KAAK2S,QAAUA,EACf3S,KAAKgiB,KAAO,aACZ/S,IAASjP,KAAKiP,KAAOA,GACrB89D,IAAW/sE,KAAK+sE,OAASA,GACzBzP,IAAYt9D,KAAKs9D,QAAUA,GAC3BtE,IAAah5D,KAAKg5D,SAAWA,EAC/B,CAEAx1D,EAAM0uE,SAAStF,EAAYvsE,MAAO,CAChCszE,OAAQ,WACN,MAAO,CAELhhE,QAAS3S,KAAK2S,QACdqP,KAAMhiB,KAAKgiB,KAEX4xD,YAAa5zE,KAAK4zE,YAClBl2D,OAAQ1d,KAAK0d,OAEbm2D,SAAU7zE,KAAK6zE,SACfC,WAAY9zE,KAAK8zE,WACjBC,aAAc/zE,KAAK+zE,aACnBC,MAAOh0E,KAAKg0E,MAEZjH,OAAQ/sE,KAAK+sE,OACb99D,KAAMjP,KAAKiP,KACXqlD,OAAQt0D,KAAKg5D,UAAYh5D,KAAKg5D,SAAS1E,OAASt0D,KAAKg5D,SAAS1E,OAAS,KAE3E,IAGF,IAAIrqD,EAAY2iE,EAAW3iE,UACvBgqE,EAAc,CAAC,EAEnB,CACE,uBACA,iBACA,eACA,YACA,cACA,4BACA,iBACA,mBACA,kBACA,gBAEAxpC,SAAQ,SAASx7B,GACjBglE,EAAYhlE,GAAQ,CAAC7O,MAAO6O,EAC9B,IAEAzC,OAAO0nE,iBAAiBtH,EAAYqH,GACpCznE,OAAO6yB,eAAep1B,EAAW,eAAgB,CAAC7J,OAAO,IAGzDwsE,EAAWpsE,KAAO,SAAS8F,EAAO2I,EAAM89D,EAAQzP,EAAStE,EAAUmb,GACjE,IAAIC,EAAa5nE,OAAOqI,OAAO5K,GAY/B,OAVAzG,EAAM6wE,aAAa/tE,EAAO8tE,GAAY,SAAgBE,GACpD,OAAOA,IAAQj0E,MAAM4J,SACvB,IAEA2iE,EAAWzlE,KAAKitE,EAAY9tE,EAAMqM,QAAS1D,EAAM89D,EAAQzP,EAAStE,GAElEob,EAAWpyD,KAAO1b,EAAM0b,KAExBmyD,GAAe3nE,OAAOwyB,OAAOo1C,EAAYD,GAElCC,CACT,EAEAvzC,EAAOl/B,QAAUirE,sCCnFjB,IAAIppE,EAAQ7E,EAAQ,OAEpB,SAASyzE,IACPpyE,KAAKu0E,SAAW,EAClB,CAUAnC,EAAmBnoE,UAAUuqE,IAAM,SAAavB,EAAWC,EAAU14D,GAOnE,OANAxa,KAAKu0E,SAASnoE,KAAK,CACjB6mE,UAAWA,EACXC,SAAUA,EACVF,cAAax4D,GAAUA,EAAQw4D,YAC/BD,QAASv4D,EAAUA,EAAQu4D,QAAU,OAEhC/yE,KAAKu0E,SAAS/0E,OAAS,CAChC,EAOA4yE,EAAmBnoE,UAAUwqE,MAAQ,SAAe1jE,GAC9C/Q,KAAKu0E,SAASxjE,KAChB/Q,KAAKu0E,SAASxjE,GAAM,KAExB,EAUAqhE,EAAmBnoE,UAAUwgC,QAAU,SAAiB7hC,GACtDpF,EAAMinC,QAAQzqC,KAAKu0E,UAAU,SAAwBj8D,GACzC,OAANA,GACF1P,EAAG0P,EAEP,GACF,EAEAuoB,EAAOl/B,QAAUywE,sCCnDjB,IAAIsC,EAAgB/1E,EAAQ,OACxBg2E,EAAch2E,EAAQ,OAW1BkiC,EAAOl/B,QAAU,SAAuBusE,EAAS0G,GAC/C,OAAI1G,IAAYwG,EAAcE,GACrBD,EAAYzG,EAAS0G,GAEvBA,CACT,sCCjBA,IAAIpxE,EAAQ7E,EAAQ,OAChBk2E,EAAgBl2E,EAAQ,OACxBqyE,EAAWryE,EAAQ,OACnBogC,EAAWpgC,EAAQ,OACnBkuE,EAAgBluE,EAAQ,OAK5B,SAASm2E,EAA6B/H,GAKpC,GAJIA,EAAOK,aACTL,EAAOK,YAAY2E,mBAGjBhF,EAAOO,QAAUP,EAAOO,OAAO+C,QACjC,MAAM,IAAIxD,CAEd,CAQAhsC,EAAOl/B,QAAU,SAAyBorE,GA8BxC,OA7BA+H,EAA6B/H,GAG7BA,EAAOp8D,QAAUo8D,EAAOp8D,SAAW,CAAC,EAGpCo8D,EAAO1mE,KAAOwuE,EAAc1tE,KAC1B4lE,EACAA,EAAO1mE,KACP0mE,EAAOp8D,QACPo8D,EAAOgI,kBAIThI,EAAOp8D,QAAUnN,EAAMwxE,MACrBjI,EAAOp8D,QAAQskE,QAAU,CAAC,EAC1BlI,EAAOp8D,QAAQo8D,EAAOl8D,SAAW,CAAC,EAClCk8D,EAAOp8D,SAGTnN,EAAMinC,QACJ,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAAS,WAClD,SAA2B55B,UAClBk8D,EAAOp8D,QAAQE,EACxB,KAGYk8D,EAAOmI,SAAWn2C,EAASm2C,SAE1BnI,GAAQ9jE,MAAK,SAA6B+vD,GAWvD,OAVA8b,EAA6B/H,GAG7B/T,EAAS3yD,KAAOwuE,EAAc1tE,KAC5B4lE,EACA/T,EAAS3yD,KACT2yD,EAASroD,QACTo8D,EAAOoI,mBAGFnc,CACT,IAAG,SAA4B8Y,GAe7B,OAdKd,EAASc,KACZgD,EAA6B/H,GAGzB+E,GAAUA,EAAO9Y,WACnB8Y,EAAO9Y,SAAS3yD,KAAOwuE,EAAc1tE,KACnC4lE,EACA+E,EAAO9Y,SAAS3yD,KAChByrE,EAAO9Y,SAASroD,QAChBo8D,EAAOoI,qBAKN/tE,QAAQE,OAAOwqE,EACxB,GACF,sCCpFA,IAAItuE,EAAQ7E,EAAQ,OAUpBkiC,EAAOl/B,QAAU,SAAqByzE,EAASC,GAE7CA,EAAUA,GAAW,CAAC,EACtB,IAAItI,EAAS,CAAC,EAEd,SAASuI,EAAe3rE,EAAQqoE,GAC9B,OAAIxuE,EAAM+xE,cAAc5rE,IAAWnG,EAAM+xE,cAAcvD,GAC9CxuE,EAAMwxE,MAAMrrE,EAAQqoE,GAClBxuE,EAAM+xE,cAAcvD,GACtBxuE,EAAMwxE,MAAM,CAAC,EAAGhD,GACdxuE,EAAMjC,QAAQywE,GAChBA,EAAO9uE,QAET8uE,CACT,CAGA,SAASwD,EAAoBC,GAC3B,OAAKjyE,EAAMqsE,YAAYwF,EAAQI,IAEnBjyE,EAAMqsE,YAAYuF,EAAQK,SAA/B,EACEH,OAAe71E,EAAW21E,EAAQK,IAFlCH,EAAeF,EAAQK,GAAOJ,EAAQI,GAIjD,CAGA,SAASC,EAAiBD,GACxB,IAAKjyE,EAAMqsE,YAAYwF,EAAQI,IAC7B,OAAOH,OAAe71E,EAAW41E,EAAQI,GAE7C,CAGA,SAASE,EAAiBF,GACxB,OAAKjyE,EAAMqsE,YAAYwF,EAAQI,IAEnBjyE,EAAMqsE,YAAYuF,EAAQK,SAA/B,EACEH,OAAe71E,EAAW21E,EAAQK,IAFlCH,OAAe71E,EAAW41E,EAAQI,GAI7C,CAGA,SAASG,EAAgBH,GACvB,OAAIA,KAAQJ,EACHC,EAAeF,EAAQK,GAAOJ,EAAQI,IACpCA,KAAQL,EACVE,OAAe71E,EAAW21E,EAAQK,SADpC,CAGT,CAEA,IAAII,EAAW,CACb,IAAOH,EACP,OAAUA,EACV,KAAQA,EACR,QAAWC,EACX,iBAAoBA,EACpB,kBAAqBA,EACrB,iBAAoBA,EACpB,QAAWA,EACX,eAAkBA,EAClB,gBAAmBA,EACnB,QAAWA,EACX,aAAgBA,EAChB,eAAkBA,EAClB,eAAkBA,EAClB,iBAAoBA,EACpB,mBAAsBA,EACtB,WAAcA,EACd,iBAAoBA,EACpB,cAAiBA,EACjB,eAAkBA,EAClB,UAAaA,EACb,UAAaA,EACb,WAAcA,EACd,YAAeA,EACf,WAAcA,EACd,iBAAoBA,EACpB,eAAkBC,GASpB,OANApyE,EAAMinC,QAAQj+B,OAAOi2C,KAAK2yB,GAAS/xE,OAAOmJ,OAAOi2C,KAAK4yB,KAAW,SAA4BI,GAC3F,IAAIT,EAAQa,EAASJ,IAASD,EAC1BM,EAAcd,EAAMS,GACvBjyE,EAAMqsE,YAAYiG,IAAgBd,IAAUY,IAAqB7I,EAAO0I,GAAQK,EACnF,IAEO/I,CACT,sCCjGA,IAAIH,EAAajuE,EAAQ,OASzBkiC,EAAOl/B,QAAU,SAAgB0F,EAASC,EAAQ0xD,GAChD,IAAI+c,EAAiB/c,EAAS+T,OAAOgJ,eAChC/c,EAAS1E,QAAWyhB,IAAkBA,EAAe/c,EAAS1E,QAGjEhtD,EAAO,IAAIslE,EACT,mCAAqC5T,EAAS1E,OAC9C,CAACsY,EAAW2D,gBAAiB3D,EAAWoJ,kBAAkBlgE,KAAKooB,MAAM86B,EAAS1E,OAAS,KAAO,GAC9F0E,EAAS+T,OACT/T,EAASsE,QACTtE,IAPF3xD,EAAQ2xD,EAUZ,sCCtBA,IAAIx1D,EAAQ7E,EAAQ,OAChBogC,EAAWpgC,EAAQ,OAUvBkiC,EAAOl/B,QAAU,SAAuB0E,EAAMsK,EAASslE,GACrD,IAAI9vE,EAAUnG,MAAQ++B,EAMtB,OAJAv7B,EAAMinC,QAAQwrC,GAAK,SAAmBrtE,GACpCvC,EAAOuC,EAAGzB,KAAKhB,EAASE,EAAMsK,EAChC,IAEOtK,CACT,sCCnBA,IAAI7C,EAAQ7E,EAAQ,OAChBu3E,EAAsBv3E,EAAQ,OAC9BiuE,EAAajuE,EAAQ,OACrBguE,EAAuBhuE,EAAQ,OAC/BuyE,EAAavyE,EAAQ,OAErBw3E,EAAuB,CACzB,eAAgB,qCAGlB,SAASC,EAAsBzlE,EAASvQ,IACjCoD,EAAMqsE,YAAYl/D,IAAYnN,EAAMqsE,YAAYl/D,EAAQ,mBAC3DA,EAAQ,gBAAkBvQ,EAE9B,CA6BA,IAAI2+B,EAAW,CAEbqwC,aAAczC,EAEduI,QA/BF,WACE,IAAIA,EAQJ,OAP8B,qBAAnBxH,gBAGmB,qBAAZn3C,SAAuE,qBAA5C/pB,OAAOvC,UAAU3H,SAAS6E,KAAKovB,YAD1E2+C,EAAUv2E,EAAQ,OAKbu2E,CACT,CAqBWmB,GAETtB,iBAAkB,CAAC,SAA0B1uE,EAAMsK,GAIjD,GAHAulE,EAAoBvlE,EAAS,UAC7BulE,EAAoBvlE,EAAS,gBAEzBnN,EAAMgqE,WAAWnnE,IACnB7C,EAAM8yE,cAAcjwE,IACpB7C,EAAM4B,SAASiB,IACf7C,EAAM+yE,SAASlwE,IACf7C,EAAMgzE,OAAOnwE,IACb7C,EAAMizE,OAAOpwE,GAEb,OAAOA,EAET,GAAI7C,EAAMkzE,kBAAkBrwE,GAC1B,OAAOA,EAAKyF,OAEd,GAAItI,EAAMmzE,kBAAkBtwE,GAE1B,OADA+vE,EAAsBzlE,EAAS,mDACxBtK,EAAK/D,WAGd,IAGIs0E,EAHAC,EAAkBrzE,EAAMszE,SAASzwE,GACjC0wE,EAAcpmE,GAAWA,EAAQ,gBAIrC,IAAKimE,EAAapzE,EAAMozE,WAAWvwE,KAAWwwE,GAAmC,wBAAhBE,EAAwC,CACvG,IAAIC,EAAYh3E,KAAKi3E,KAAOj3E,KAAKi3E,IAAIC,SACrC,OAAOhG,EAAW0F,EAAa,CAAC,UAAWvwE,GAAQA,EAAM2wE,GAAa,IAAIA,EAC5E,CAAO,OAAIH,GAAmC,qBAAhBE,GAC5BX,EAAsBzlE,EAAS,oBAnDrC,SAAyBwmE,EAAUC,EAAQC,GACzC,GAAI7zE,EAAM8zE,SAASH,GACjB,IAEE,OADCC,GAAUG,KAAKC,OAAOL,GAChB3zE,EAAMi0E,KAAKN,EACpB,CAAE,MAAOr1E,GACP,GAAe,gBAAXA,EAAEkgB,KACJ,MAAMlgB,CAEV,CAGF,OAAQu1E,GAAWE,KAAKG,WAAWP,EACrC,CAuCaQ,CAAgBtxE,IAGlBA,CACT,GAEA8uE,kBAAmB,CAAC,SAA2B9uE,GAC7C,IAAI+oE,EAAepvE,KAAKovE,cAAgBrwC,EAASqwC,aAC7CsD,EAAoBtD,GAAgBA,EAAasD,kBACjDC,EAAoBvD,GAAgBA,EAAauD,kBACjDiF,GAAqBlF,GAA2C,SAAtB1yE,KAAKmtE,aAEnD,GAAIyK,GAAsBjF,GAAqBnvE,EAAM8zE,SAASjxE,IAASA,EAAK7G,OAC1E,IACE,OAAO+3E,KAAKC,MAAMnxE,EACpB,CAAE,MAAOvE,GACP,GAAI81E,EAAmB,CACrB,GAAe,gBAAX91E,EAAEkgB,KACJ,MAAM4qD,EAAWpsE,KAAKsB,EAAG8qE,EAAWoJ,iBAAkBh2E,KAAM,KAAMA,KAAKg5D,UAEzE,MAAMl3D,CACR,CACF,CAGF,OAAOuE,CACT,GAMAqoE,QAAS,EAETe,eAAgB,aAChBE,eAAgB,eAEhBkI,kBAAmB,EACnBC,eAAgB,EAEhBb,IAAK,CACHC,SAAUv4E,EAAQ,QAGpBo3E,eAAgB,SAAwBzhB,GACtC,OAAOA,GAAU,KAAOA,EAAS,GACnC,EAEA3jD,QAAS,CACPskE,OAAQ,CACN,OAAU,uCAKhBzxE,EAAMinC,QAAQ,CAAC,SAAU,MAAO,SAAS,SAA6B55B,GACpEkuB,EAASpuB,QAAQE,GAAU,CAAC,CAC9B,IAEArN,EAAMinC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+B55B,GACrEkuB,EAASpuB,QAAQE,GAAUrN,EAAMwxE,MAAMmB,EACzC,IAEAt1C,EAAOl/B,QAAUo9B,kCC/IjB8B,EAAOl/B,QAAU,CACf+wE,mBAAmB,EACnBC,mBAAmB,EACnBtD,qBAAqB,sBCLvBxuC,EAAOl/B,QAAU,CACf,QAAW,0CCCbk/B,EAAOl/B,QAAU,SAAciH,EAAImvE,GACjC,OAAO,WAEL,IADA,IAAIzvE,EAAO,IAAIhH,MAAM/B,UAAUC,QACtBoD,EAAI,EAAGA,EAAI0F,EAAK9I,OAAQoD,IAC/B0F,EAAK1F,GAAKrD,UAAUqD,GAEtB,OAAOgG,EAAGb,MAAMgwE,EAASzvE,EAC3B,CACF,sCCRA,IAAI9E,EAAQ7E,EAAQ,OAEpB,SAAS+B,EAAOmb,GACd,OAAOiyD,mBAAmBjyD,GACxB5P,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,IACrB,CASA40B,EAAOl/B,QAAU,SAAkB8O,EAAKlB,EAAQk/D,GAE9C,IAAKl/D,EACH,OAAOkB,EAGT,IAAIunE,EACJ,GAAIvJ,EACFuJ,EAAmBvJ,EAAiBl/D,QAC/B,GAAI/L,EAAMmzE,kBAAkBpnE,GACjCyoE,EAAmBzoE,EAAOjN,eACrB,CACL,IAAIq/B,EAAQ,GAEZn+B,EAAMinC,QAAQl7B,GAAQ,SAAmBsM,EAAK1b,GAChC,OAAR0b,GAA+B,qBAARA,IAIvBrY,EAAMjC,QAAQsa,GAChB1b,GAAY,KAEZ0b,EAAM,CAACA,GAGTrY,EAAMinC,QAAQ5uB,GAAK,SAAoBzQ,GACjC5H,EAAMy0E,OAAO7sE,GACfA,EAAIA,EAAE8sE,cACG10E,EAAMszE,SAAS1rE,KACxBA,EAAImsE,KAAKG,UAAUtsE,IAErBu2B,EAAMv1B,KAAK1L,EAAOP,GAAO,IAAMO,EAAO0K,GACxC,IACF,IAEA4sE,EAAmBr2C,EAAM6iB,KAAK,IAChC,CAEA,GAAIwzB,EAAkB,CACpB,IAAIG,EAAgB1nE,EAAI1B,QAAQ,MACT,IAAnBopE,IACF1nE,EAAMA,EAAIvN,MAAM,EAAGi1E,IAGrB1nE,KAA8B,IAAtBA,EAAI1B,QAAQ,KAAc,IAAM,KAAOipE,CACjD,CAEA,OAAOvnE,CACT,kCC5DAowB,EAAOl/B,QAAU,SAAqBusE,EAASkK,GAC7C,OAAOA,EACHlK,EAAQjiE,QAAQ,OAAQ,IAAM,IAAMmsE,EAAYnsE,QAAQ,OAAQ,IAChEiiE,CACN,sCCXA,IAAI1qE,EAAQ7E,EAAQ,OAEpBkiC,EAAOl/B,QACL6B,EAAMiqE,uBAIK,CACL4K,MAAO,SAAer2D,EAAM5hB,EAAOk4E,EAAS/a,EAAMn6B,EAAQm1C,GACxD,IAAIC,EAAS,GACbA,EAAOpsE,KAAK4V,EAAO,IAAM8rD,mBAAmB1tE,IAExCoD,EAAMi1E,SAASH,IACjBE,EAAOpsE,KAAK,WAAa,IAAIwyB,KAAK05C,GAASI,eAGzCl1E,EAAM8zE,SAAS/Z,IACjBib,EAAOpsE,KAAK,QAAUmxD,GAGpB/5D,EAAM8zE,SAASl0C,IACjBo1C,EAAOpsE,KAAK,UAAYg3B,IAGX,IAAXm1C,GACFC,EAAOpsE,KAAK,UAGdusE,SAASH,OAASA,EAAOh0B,KAAK,KAChC,EAEAkrB,KAAM,SAAc1tD,GAClB,IAAItS,EAAQipE,SAASH,OAAO9oE,MAAM,IAAIkpE,OAAO,aAAe52D,EAAO,cACnE,OAAQtS,EAAQmpE,mBAAmBnpE,EAAM,IAAM,IACjD,EAEAopE,OAAQ,SAAgB92D,GACtBhiB,KAAKq4E,MAAMr2D,EAAM,GAAI4c,KAAKC,MAAQ,MACpC,GAMK,CACLw5C,MAAO,WAAkB,EACzB3I,KAAM,WAAkB,OAAO,IAAM,EACrCoJ,OAAQ,WAAmB,mCCzCnCj4C,EAAOl/B,QAAU,SAAuB8O,GAItC,MAAO,8BAA8B1O,KAAK0O,EAC5C,sCCXA,IAAIjN,EAAQ7E,EAAQ,OAQpBkiC,EAAOl/B,QAAU,SAAsBghE,GACrC,OAAOn/D,EAAMszE,SAASnU,KAAsC,IAAzBA,EAAQ4O,YAC7C,sCCVA,IAAI/tE,EAAQ7E,EAAQ,OAEpBkiC,EAAOl/B,QACL6B,EAAMiqE,uBAIH,WACC,IAEIsL,EAFAC,EAAO,kBAAkBj3E,KAAKk3E,UAAUC,WACxCC,EAAiBR,SAASS,cAAc,KAS5C,SAASC,EAAW5oE,GAClB,IAAI6oE,EAAO7oE,EAWX,OATIuoE,IAEFG,EAAeI,aAAa,OAAQD,GACpCA,EAAOH,EAAeG,MAGxBH,EAAeI,aAAa,OAAQD,GAG7B,CACLA,KAAMH,EAAeG,KACrBhJ,SAAU6I,EAAe7I,SAAW6I,EAAe7I,SAASrkE,QAAQ,KAAM,IAAM,GAChFuxD,KAAM2b,EAAe3b,KACrBgc,OAAQL,EAAeK,OAASL,EAAeK,OAAOvtE,QAAQ,MAAO,IAAM,GAC3EzJ,KAAM22E,EAAe32E,KAAO22E,EAAe32E,KAAKyJ,QAAQ,KAAM,IAAM,GACpEwtE,SAAUN,EAAeM,SACzBC,KAAMP,EAAeO,KACrBC,SAAiD,MAAtCR,EAAeQ,SAASC,OAAO,GACxCT,EAAeQ,SACf,IAAMR,EAAeQ,SAE3B,CAUA,OARAZ,EAAYM,EAAW1iE,OAAOkjE,SAASP,MAQhC,SAAyBQ,GAC9B,IAAIC,EAAUv2E,EAAM8zE,SAASwC,GAAeT,EAAWS,GAAcA,EACrE,OAAQC,EAAOzJ,WAAayI,EAAUzI,UAClCyJ,EAAOvc,OAASub,EAAUvb,IAChC,CACF,CAlDC,GAsDQ,WACL,OAAO,CACT,sCC/DN,IAAIh6D,EAAQ7E,EAAQ,OAEpBkiC,EAAOl/B,QAAU,SAA6BgP,EAASqpE,GACrDx2E,EAAMinC,QAAQ95B,GAAS,SAAuBvQ,EAAO4hB,GAC/CA,IAASg4D,GAAkBh4D,EAAKlf,gBAAkBk3E,EAAel3E,gBACnE6N,EAAQqpE,GAAkB55E,SACnBuQ,EAAQqR,GAEnB,GACF,qBCVA6e,EAAOl/B,QAAU,yCCCjB,IAAI6B,EAAQ7E,EAAQ,OAIhBs7E,EAAoB,CACtB,MAAO,gBAAiB,iBAAkB,eAAgB,OAC1D,UAAW,OAAQ,OAAQ,oBAAqB,sBAChD,gBAAiB,WAAY,eAAgB,sBAC7C,UAAW,cAAe,cAgB5Bp5C,EAAOl/B,QAAU,SAAsBgP,GACrC,IACIxQ,EACA0b,EACAjZ,EAHAm3E,EAAS,CAAC,EAKd,OAAKppE,GAELnN,EAAMinC,QAAQ95B,EAAQgnB,MAAM,OAAO,SAAgBuiD,GAKjD,GAJAt3E,EAAIs3E,EAAKnrE,QAAQ,KACjB5O,EAAMqD,EAAMi0E,KAAKyC,EAAKhrE,OAAO,EAAGtM,IAAIR,cACpCyZ,EAAMrY,EAAMi0E,KAAKyC,EAAKhrE,OAAOtM,EAAI,IAE7BzC,EAAK,CACP,GAAI45E,EAAO55E,IAAQ85E,EAAkBlrE,QAAQ5O,IAAQ,EACnD,OAGA45E,EAAO55E,GADG,eAARA,GACa45E,EAAO55E,GAAO45E,EAAO55E,GAAO,IAAIkD,OAAO,CAACwY,IAEzCk+D,EAAO55E,GAAO45E,EAAO55E,GAAO,KAAO0b,EAAMA,CAE3D,CACF,IAEOk+D,GAnBgBA,CAoBzB,kCClDAl5C,EAAOl/B,QAAU,SAAuB8O,GACtC,IAAIf,EAAQ,4BAA4ByqE,KAAK1pE,GAC7C,OAAOf,GAASA,EAAM,IAAM,EAC9B,iCCiBAmxB,EAAOl/B,QAAU,SAAgB6G,GAC/B,OAAO,SAAcoE,GACnB,OAAOpE,EAAST,MAAM,KAAM6E,EAC9B,CACF,sCCxBA,IAAIpJ,EAAQ7E,EAAQ,OAqEpBkiC,EAAOl/B,QA5DP,SAAoB2yE,EAAK8F,GAEvBA,EAAWA,GAAY,IAAIlD,SAE3B,IAAIlD,EAAQ,GAEZ,SAASqG,EAAaj6E,GACpB,OAAc,OAAVA,EAAuB,GAEvBoD,EAAMy0E,OAAO73E,GACRA,EAAM83E,cAGX10E,EAAM8yE,cAAcl2E,IAAUoD,EAAM82E,aAAal6E,GAC5B,oBAATm6E,KAAsB,IAAIA,KAAK,CAACn6E,IAAUG,OAAOC,KAAKJ,GAG/DA,CACT,CAuCA,OArCA,SAASo6E,EAAMn0E,EAAMo0E,GACnB,GAAIj3E,EAAM+xE,cAAclvE,IAAS7C,EAAMjC,QAAQ8E,GAAO,CACpD,IAA6B,IAAzB2tE,EAAMjlE,QAAQ1I,GAChB,MAAMhG,MAAM,kCAAoCo6E,GAGlDzG,EAAM5nE,KAAK/F,GAEX7C,EAAMinC,QAAQpkC,GAAM,SAAcjG,EAAOD,GACvC,IAAIqD,EAAMqsE,YAAYzvE,GAAtB,CACA,IACIwM,EADA8tE,EAAUD,EAAYA,EAAY,IAAMt6E,EAAMA,EAGlD,GAAIC,IAAUq6E,GAA8B,kBAAVr6E,EAChC,GAAIoD,EAAMm3E,SAASx6E,EAAK,MAEtBC,EAAQm3E,KAAKG,UAAUt3E,QAClB,GAAIoD,EAAMm3E,SAASx6E,EAAK,QAAUyM,EAAMpJ,EAAMgI,QAAQpL,IAK3D,YAHAwM,EAAI69B,SAAQ,SAASmwC,IAClBp3E,EAAMqsE,YAAY+K,IAAOR,EAASS,OAAOH,EAASL,EAAaO,GAClE,IAKJJ,EAAMp6E,EAAOs6E,EAjBuB,CAkBtC,IAEA1G,EAAMzjB,KACR,MACE6pB,EAASS,OAAOJ,EAAWJ,EAAah0E,GAE5C,CAEAm0E,CAAMlG,GAEC8F,CACT,sCCnEA,IAAInJ,EAAUtyE,EAAAA,OAAAA,QACViuE,EAAajuE,EAAQ,OAErBmmB,EAAa,CAAC,EAGlB,CAAC,SAAU,UAAW,SAAU,WAAY,SAAU,UAAU2lB,SAAQ,SAAS75B,EAAMhO,GACrFkiB,EAAWlU,GAAQ,SAAmBkqE,GACpC,cAAcA,IAAUlqE,GAAQ,KAAOhO,EAAI,EAAI,KAAO,KAAOgO,CAC/D,CACF,IAEA,IAAImqE,EAAqB,CAAC,EAS1Bj2D,EAAWsqD,aAAe,SAAsBkD,EAAWnuC,EAASxxB,GAClE,SAASqoE,EAAcC,EAAKtpB,GAC1B,MAAO,WAAasf,EAAU,0BAA6BgK,EAAM,IAAOtpB,GAAQh/C,EAAU,KAAOA,EAAU,GAC7G,CAGA,OAAO,SAASvS,EAAO66E,EAAKtlE,GAC1B,IAAkB,IAAd28D,EACF,MAAM,IAAI1F,EACRoO,EAAcC,EAAK,qBAAuB92C,EAAU,OAASA,EAAU,KACvEyoC,EAAWsO,gBAef,OAXI/2C,IAAY42C,EAAmBE,KACjCF,EAAmBE,IAAO,EAE1B/qE,QAAQC,KACN6qE,EACEC,EACA,+BAAiC92C,EAAU,8CAK1CmuC,GAAYA,EAAUlyE,EAAO66E,EAAKtlE,EAC3C,CACF,EAgCAkrB,EAAOl/B,QAAU,CACf8wE,cAxBF,SAAuBj4D,EAAS2gE,EAAQC,GACtC,GAAuB,kBAAZ5gE,EACT,MAAM,IAAIoyD,EAAW,4BAA6BA,EAAWyO,sBAI/D,IAFA,IAAI54B,EAAOj2C,OAAOi2C,KAAKjoC,GACnB5X,EAAI6/C,EAAKjjD,OACNoD,KAAM,GAAG,CACd,IAAIq4E,EAAMx4B,EAAK7/C,GACX0vE,EAAY6I,EAAOF,GACvB,GAAI3I,EAAJ,CACE,IAAIlyE,EAAQoa,EAAQygE,GAChBxrE,OAAmBhQ,IAAVW,GAAuBkyE,EAAUlyE,EAAO66E,EAAKzgE,GAC1D,IAAe,IAAX/K,EACF,MAAM,IAAIm9D,EAAW,UAAYqO,EAAM,YAAcxrE,EAAQm9D,EAAWyO,qBAG5E,MACA,IAAqB,IAAjBD,EACF,MAAM,IAAIxO,EAAW,kBAAoBqO,EAAKrO,EAAW0O,eAE7D,CACF,EAIEx2D,WAAYA,uCClFd,IAOuBy2D,EAPnBz6C,EAAOniC,EAAQ,OAIf2D,EAAWkK,OAAOvC,UAAU3H,SAG5Bk5E,GAAmBD,EAMpB/uE,OAAOqI,OAAO,MAJR,SAASimE,GACd,IAAI31E,EAAM7C,EAAS6E,KAAK2zE,GACxB,OAAOS,EAAMp2E,KAASo2E,EAAMp2E,GAAOA,EAAIjC,MAAM,GAAI,GAAGd,cACtD,GAGF,SAASq5E,EAAW7qE,GAElB,OADAA,EAAOA,EAAKxO,cACL,SAAkB04E,GACvB,OAAOU,EAAOV,KAAWlqE,CAC3B,CACF,CAQA,SAASrP,EAAQsa,GACf,OAAOva,MAAMC,QAAQsa,EACvB,CAQA,SAASg0D,EAAYh0D,GACnB,MAAsB,qBAARA,CAChB,CAoBA,IAAIy6D,EAAgBmF,EAAW,eA6C/B,SAAS3E,EAASj7D,GAChB,OAAe,OAARA,GAA+B,kBAARA,CAChC,CAQA,SAAS05D,EAAc15D,GACrB,GAAoB,WAAhB2/D,EAAO3/D,GACT,OAAO,EAGT,IAAI5R,EAAYuC,OAAO6tB,eAAexe,GACtC,OAAqB,OAAd5R,GAAsBA,IAAcuC,OAAOvC,SACpD,CASA,IAAIguE,EAASwD,EAAW,QASpBjF,EAASiF,EAAW,QASpBhF,EAASgF,EAAW,QASpB7E,EAAa6E,EAAW,YAQ5B,SAASC,EAAW7/D,GAClB,MAA8B,sBAAvBvZ,EAAS6E,KAAK0U,EACvB,CAiCA,IAAI86D,EAAoB8E,EAAW,mBAmDnC,SAAShxC,EAAQ6pC,EAAK1rE,GAEpB,GAAY,OAAR0rE,GAA+B,qBAARA,EAU3B,GALmB,kBAARA,IAETA,EAAM,CAACA,IAGL/yE,EAAQ+yE,GAEV,IAAK,IAAI1xE,EAAI,EAAG+K,EAAI2mE,EAAI90E,OAAQoD,EAAI+K,EAAG/K,IACrCgG,EAAGzB,KAAK,KAAMmtE,EAAI1xE,GAAIA,EAAG0xE,QAI3B,IAAK,IAAIn0E,KAAOm0E,EACV9nE,OAAOvC,UAAUgoD,eAAe9qD,KAAKmtE,EAAKn0E,IAC5CyI,EAAGzB,KAAK,KAAMmtE,EAAIn0E,GAAMA,EAAKm0E,EAIrC,CAwJA,IAA6BqH,EAAzBrB,GAAyBqB,EAKJ,qBAAft6E,YAA8BmL,OAAO6tB,eAAeh5B,YAHrD,SAASy5E,GACd,OAAOa,GAAcb,aAAiBa,CACxC,GAGF96C,EAAOl/B,QAAU,CACfJ,QAASA,EACT+0E,cAAeA,EACflxE,SAvYF,SAAkByW,GAChB,OAAe,OAARA,IAAiBg0D,EAAYh0D,IAA4B,OAApBA,EAAIkG,cAAyB8tD,EAAYh0D,EAAIkG,cAChD,oBAA7BlG,EAAIkG,YAAY3c,UAA2ByW,EAAIkG,YAAY3c,SAASyW,EAClF,EAqYE2xD,WA9PF,SAAoBsN,GAClB,IAAIc,EAAU,oBACd,OAAOd,IACgB,oBAAb5D,UAA2B4D,aAAiB5D,UACpD50E,EAAS6E,KAAK2zE,KAAWc,GACxBF,EAAWZ,EAAMx4E,WAAaw4E,EAAMx4E,aAAes5E,EAExD,EAwPElF,kBApXF,SAA2B76D,GAOzB,MAL4B,qBAAhBggE,aAAiCA,YAAYC,OAC9CD,YAAYC,OAAOjgE,GAElBA,GAASA,EAAI/P,QAAYwqE,EAAcz6D,EAAI/P,OAGzD,EA6WEwrE,SArWF,SAAkBz7D,GAChB,MAAsB,kBAARA,CAChB,EAoWE48D,SA5VF,SAAkB58D,GAChB,MAAsB,kBAARA,CAChB,EA2VEi7D,SAAUA,EACVvB,cAAeA,EACf1F,YAAaA,EACboI,OAAQA,EACRzB,OAAQA,EACRC,OAAQA,EACRiF,WAAYA,EACZnF,SAnRF,SAAkB16D,GAChB,OAAOi7D,EAASj7D,IAAQ6/D,EAAW7/D,EAAIkgE,KACzC,EAkREpF,kBAAmBA,EACnBlJ,qBAjOF,WACE,OAAyB,qBAAdwL,WAAoD,gBAAtBA,UAAU+C,SACY,iBAAtB/C,UAAU+C,SACY,OAAtB/C,UAAU+C,WAI/B,qBAAXrlE,QACa,qBAAbgiE,SAEX,EAwNEluC,QAASA,EACTuqC,MA/JF,SAASA,IACP,IAAIvlE,EAAS,CAAC,EACd,SAASwsE,EAAYpgE,EAAK1b,GACpBo1E,EAAc9lE,EAAOtP,KAASo1E,EAAc15D,GAC9CpM,EAAOtP,GAAO60E,EAAMvlE,EAAOtP,GAAM0b,GACxB05D,EAAc15D,GACvBpM,EAAOtP,GAAO60E,EAAM,CAAC,EAAGn5D,GACfta,EAAQsa,GACjBpM,EAAOtP,GAAO0b,EAAI3Y,QAElBuM,EAAOtP,GAAO0b,CAElB,CAEA,IAAK,IAAIjZ,EAAI,EAAG+K,EAAIpO,UAAUC,OAAQoD,EAAI+K,EAAG/K,IAC3C6nC,EAAQlrC,UAAUqD,GAAIq5E,GAExB,OAAOxsE,CACT,EA8IEohE,OApIF,SAAgB5lE,EAAG2C,EAAGmqE,GAQpB,OAPAttC,EAAQ78B,GAAG,SAAqBiO,EAAK1b,GAEjC8K,EAAE9K,GADA43E,GAA0B,oBAARl8D,EACXilB,EAAKjlB,EAAKk8D,GAEVl8D,CAEb,IACO5Q,CACT,EA4HEwsE,KAxPF,SAActyE,GACZ,OAAOA,EAAIsyE,KAAOtyE,EAAIsyE,OAAStyE,EAAI8G,QAAQ,aAAc,GAC3D,EAuPEiwE,SArHF,SAAkBC,GAIhB,OAH8B,QAA1BA,EAAQ7sE,WAAW,KACrB6sE,EAAUA,EAAQj5E,MAAM,IAEnBi5E,CACT,EAiHEjK,SAvGF,SAAkBnwD,EAAaq6D,EAAkBC,EAAOpI,GACtDlyD,EAAY9X,UAAYuC,OAAOqI,OAAOunE,EAAiBnyE,UAAWgqE,GAClElyD,EAAY9X,UAAU8X,YAAcA,EACpCs6D,GAAS7vE,OAAOwyB,OAAOjd,EAAY9X,UAAWoyE,EAChD,EAoGEhI,aA1FF,SAAsBiI,EAAWC,EAASjyB,GACxC,IAAI+xB,EACAz5E,EACA6yE,EACA+G,EAAS,CAAC,EAEdD,EAAUA,GAAW,CAAC,EAEtB,EAAG,CAGD,IADA35E,GADAy5E,EAAQ7vE,OAAOiwE,oBAAoBH,IACzB98E,OACHoD,KAAM,GAEN45E,EADL/G,EAAO4G,EAAMz5E,MAEX25E,EAAQ9G,GAAQ6G,EAAU7G,GAC1B+G,EAAO/G,IAAQ,GAGnB6G,EAAY9vE,OAAO6tB,eAAeiiD,EACpC,OAASA,KAAehyB,GAAUA,EAAOgyB,EAAWC,KAAaD,IAAc9vE,OAAOvC,WAEtF,OAAOsyE,CACT,EAqEEf,OAAQA,EACRC,WAAYA,EACZd,SA9DF,SAAkBx1E,EAAKu3E,EAAcC,GACnCx3E,EAAMgK,OAAOhK,SACI1F,IAAbk9E,GAA0BA,EAAWx3E,EAAI3F,UAC3Cm9E,EAAWx3E,EAAI3F,QAEjBm9E,GAAYD,EAAal9E,OACzB,IAAIo9E,EAAYz3E,EAAI4J,QAAQ2tE,EAAcC,GAC1C,OAAsB,IAAfC,GAAoBA,IAAcD,CAC3C,EAuDEnxE,QA/CF,SAAiBsvE,GACf,IAAKA,EAAO,OAAO,KACnB,IAAIl4E,EAAIk4E,EAAMt7E,OACd,GAAIqwE,EAAYjtE,GAAI,OAAO,KAE3B,IADA,IAAIgK,EAAM,IAAItL,MAAMsB,GACbA,KAAM,GACXgK,EAAIhK,GAAKk4E,EAAMl4E,GAEjB,OAAOgK,CACT,EAuCE0tE,aAAcA,EACd1D,WAAYA,04BCndd,IAAAnM,EAAA9rE,EAAA,OACAylC,EAAAzlC,EAAA,OASA2lC,EAAA3lC,EAAA,OAGAk+E,EAAAl+E,EAAA,OAeAG,EAAAH,EAAA,OAWMm+E,EAAa,WAKjB,SAAAA,EAAAtsE,GAA6D,IAA/C05C,EAAM15C,EAAN05C,OAAQic,EAAgB31D,EAAhB21D,iBACpB,GADoCpmE,EAAA,KAAA+8E,GAJtCC,EAAA9kE,IAAA,aACA+kE,EAAA/kE,IAAA,aACAglE,EAAAhlE,IAAA,cAGOiyC,EACH,MAAM,IAAI7pD,MAAM,wCAIlB,GAFAqlC,EAAA,KAAIq3C,EAAW7yB,EAAM,KACJic,aAA4BsE,EAAAnY,OAC/B,CACZ,IAAM5Q,EAASykB,EACf,IAAKzkB,EAAO1wC,SACV,MAAM,IAAI3Q,MAAM,0CAElBqlC,EAAA,KAAIu3C,EAAav7B,EAAO1wC,SAAQ,KAChC00B,EAAA,KAAIs3C,EAAWt7B,EAAM,UAErBhc,EAAA,KAAIu3C,EAAa9W,EAA4B,IAEjD,CAoNC,OApNAjmE,EAAA48E,EAAA,EAAA38E,IAAA,cAAAC,MAED,WACE,OAAOulC,EAAA,KAAIs3C,EAAA,IACb,GAAC,CAAA98E,IAAA,YAAAC,MAED,WACE,OAAOulC,EAAA,KAAIq3C,EAAA,IACb,GAAC,CAAA78E,IAAA,YAAAC,MAED,SAAU8B,GACR,OAAOyjC,EAAA,KAAIo3C,EAAA,KAASv5E,MAAM6+B,UAAUngC,EACtC,GAAC,CAAA/B,IAAA,oBAAAC,MAAA,eAAA88E,EAAAp3E,EAAAL,IAAAQ,MAED,SAAAC,EAAwBw7B,GAAmB,IAAAtwB,EAAA,OAAA3L,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACnB,KAAKqgC,aAAY,OAA1B,OAAPj2B,EAAOlK,EAAAO,KAAAP,EAAA8I,OAAA,UACN,EAAAs0B,EAAA64C,wBAAuBz7C,EAAatwB,IAAQ,wBAAAlK,EAAAM,OAAA,GAAAtB,EAAA,UACpD,gBAAA2C,GAAA,OAAAq0E,EAAAn1E,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,aAAAC,MAAA,eAAAknC,EAAAxhC,EAAAL,IAAAQ,MAED,SAAAs4B,EAAiBr8B,EAAiBukD,GAA0B,OAAAhhD,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1C,OAD0CF,EAAAS,GACnD68B,EAAA+P,UAASrtC,EAAAE,KAAA,EAAY2+B,EAAA,KAAIs3C,EAAA,KAAWx1C,WAAWvlC,EAASukD,GAAS,cAAA3/C,EAAAc,GAAAd,EAAAW,KAAAX,EAAAkJ,OAAA,SAAAlJ,EAAAS,GAAvD/G,KAAI2G,KAAAL,EAAAS,GAAAT,EAAAc,KAAA,wBAAAd,EAAAU,OAAA,GAAA+2B,EAAA,UACtB,gBAAAz1B,EAAAC,GAAA,OAAAu+B,EAAAv/B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,WAAAC,MAAA,eAAAsmC,EAAA5gC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAejkC,EAAiBukD,GAA0B,OAAAhhD,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SACjD21B,EAAA,KAAIs3C,EAAA,KAAWje,oBAAoB98D,EAASukD,IAAS,wBAAArgB,EAAA5+B,OAAA,GAAA2+B,EAAA,UAC7D,gBAAA0C,EAAAgB,GAAA,OAAAnD,EAAA3+B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,aAAAC,MAAA,eAAA8mC,EAAAphC,EAAAL,IAAAQ,MAED,SAAAsgC,IAAA,OAAA9gC,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx/B,KAAA,EACgB2+B,EAAA,KAAIs3C,EAAA,KAAWhpB,aAAY,cAAAztB,EAAAx2B,OAAA,SAAAw2B,EAAA/+B,KAAE2J,SAAO,wBAAAo1B,EAAAh/B,OAAA,GAAA++B,EAAA,UACnD,yBAAAW,EAAAn/B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,wBAAAC,MAED,SAAsB8B,GACpB,OAAOyjC,EAAA,KAAIo3C,EAAA,KAASv5E,MAAMuiC,WAAW7jC,EACvC,GAAC,CAAA/B,IAAA,kBAAAC,MAED,SAAA0lC,GAKmB,IAJjBpD,EAAWoD,EAAXpD,YACAtxB,EAAO00B,EAAP10B,QACA0lC,EAAmBhR,EAAnBgR,oBACAG,EAAqBnR,EAArBmR,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,sCAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAO,yBAAwB16C,EAAa6mB,EAAiB4c,EAC/D,GAAC,CAAAhmE,IAAA,8BAAAC,MAED,SAAAi8B,GAKmB,IAJjBqG,EAAWrG,EAAXqG,YACAtxB,EAAOirB,EAAPjrB,QACA0lC,EAAmBza,EAAnBya,oBACAG,EAAqB5a,EAArB4a,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,6CAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAQ,qCAAoC36C,EAAa6mB,EAAiB4c,EAC3E,GAAC,CAAAhmE,IAAA,uBAAAC,MAED,SAAAowC,GAKmB,IAJjB9N,EAAW8N,EAAX9N,YACAtxB,EAAOo/B,EAAPp/B,QACA0lC,EAAmBtG,EAAnBsG,oBACAG,EAAqBzG,EAArByG,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,sCAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAS,8BAA6B56C,EAAa6mB,EAAiB4c,EACpE,GAAC,CAAAhmE,IAAA,+BAAAC,MAED,SAAA4wC,GAKmB,IAJjBtO,EAAWsO,EAAXtO,YACAtxB,EAAO4/B,EAAP5/B,QACA0lC,EAAmB9F,EAAnB8F,oBACAG,EAAqBjG,EAArBiG,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,8CAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAU,sCAAqC76C,EAAa6mB,EAAiB4c,EAC5E,GAAC,CAAAhmE,IAAA,0CAAAC,MAED,SAAAmxC,GAKmB,IAJjB7O,EAAW6O,EAAX7O,YACAtxB,EAAOmgC,EAAPngC,QACA0lC,EAAmBvF,EAAnBuF,oBACAG,EAAqB1F,EAArB0F,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,yDAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAW,iDACL96C,EACA6mB,EACA4c,EAEJ,GAAC,CAAAhmE,IAAA,4BAAAC,MAED,SAAAs0C,GAKmB,IAJjBhS,EAAWgS,EAAXhS,YACAtxB,EAAOsjC,EAAPtjC,QACA0lC,EAAmBpC,EAAnBoC,oBACAG,EAAqBvC,EAArBuC,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,2CAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAY,mCAAkC/6C,EAAa6mB,EAAiB4c,EACzE,GAAC,CAAAhmE,IAAA,wBAAAC,MAED,SAAAs9E,GAKmB,IAJjBh7C,EAAWg7C,EAAXh7C,YACAtxB,EAAOssE,EAAPtsE,QACA0lC,EAAmB4mC,EAAnB5mC,oBACAG,EAAqBymC,EAArBzmC,sBAEMsS,EAAkBtS,IAED,OAAnBH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgzB,iBAAiB14D,IAC1C,IAAKm4C,EACH,MAAM,IAAIlpD,MAAM,uCAElB,IAAM8lE,EAAmBxgC,EAAA,KAAIq3C,EAAA,MAAYr3C,EAAA,KAAIs3C,EAAA,KAC7C,OAAO,EAAAJ,EAAAc,+BAA8Bj7C,EAAa6mB,EAAiB4c,EACrE,GAAC,CAAAhmE,IAAA,kBAAAC,MAAA,eAAAw9E,EAAA93E,EAAAL,IAAAQ,MAED,SAAA0gC,EAAsBzkC,EAAiBukD,GAA0B,OAAAhhD,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,cAAA4/B,EAAA52B,OAAA,SACxD21B,EAAA,KAAIs3C,EAAA,KAAWhY,QAAQ/iE,EAASukD,IAAS,wBAAA7f,EAAAp/B,OAAA,GAAAm/B,EAAA,UACjD,gBAAAuD,EAAAS,GAAA,OAAAizC,EAAA71E,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,qBAAAC,MAAA,eAAAy9E,EAAA/3E,EAAAL,IAAAQ,MAED,SAAA8gC,EAAyB7kC,EAAiBukD,GAA0B,IAAAq3B,EAAA,OAAAr4E,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,cAAAggC,EAAAhgC,KAAA,EACvC2+B,EAAA,KAAIs3C,EAAA,KAAWhY,QAAQ/iE,EAASukD,GAAS,OAAlD,OAAZq3B,EAAY92C,EAAAv/B,KAAAu/B,EAAAh3B,OAAA,SACM,OAAjB8tE,GAAqB,wBAAA92C,EAAAx/B,OAAA,GAAAu/B,EAAA,UAC7B,gBAAAkE,EAAAK,GAAA,OAAAuyC,EAAA91E,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,eAAAC,MAAA,eAAA29E,EAAAj4E,EAAAL,IAAAQ,MAED,SAAAkhC,EAAmBjlC,EAAiBy6E,GAAgB,IAAAR,EAAA6B,EAAA,OAAAv4E,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,cAAAogC,EAAApgC,KAAA,EAC5B2+B,EAAA,KAAIs3C,EAAA,KAAWhiC,aAAa/4C,EAASy6E,GAAS,OACF,OAD5DR,EAAO/0C,EAAA3/B,KACPu2E,EAAiB,KAAKC,iBAAiB,CAAC,WAAY9B,GAAQ/0C,EAAAp3B,OAAA,SAC3DguE,EAAe,IAAE,wBAAA52C,EAAA5/B,OAAA,GAAA2/B,EAAA,UACzB,gBAAA4E,EAAAC,GAAA,OAAA+xC,EAAAh2E,MAAA,KAAAxI,UAAA,EANA,IAMA,CAAAY,IAAA,iBAAAC,MAAA,eAAAw5D,EAAA9zD,EAAAL,IAAAQ,MAED,SAAAshC,EAAqBysB,GAAuB,OAAAvuD,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,cAAAwgC,EAAAx3B,OAAA,SACnC21B,EAAA,KAAIs3C,EAAA,KAAWzvB,eAAewG,IAAgB,wBAAAxsB,EAAAhgC,OAAA,GAAA+/B,EAAA,UACtD,gBAAA0F,GAAA,OAAA2sB,EAAA7xD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,mBAAAC,MAAA,eAAA89E,EAAAp4E,EAAAL,IAAAQ,MAED,SAAA2hC,IAAA,IAAAjlB,EAAA,OAAAld,IAAAoB,MAAA,SAAAghC,GAAA,cAAAA,EAAA9gC,KAAA8gC,EAAA7gC,MAAA,cAAA6gC,EAAA73B,OAAA,SACqB,QAAZ2S,EAAAgjB,EAAA,KAAIq3C,EAAA,YAAQ,IAAAr6D,OAAA,EAAAA,EAAEojB,cAAY,wBAAA8B,EAAArgC,OAAA,GAAAogC,EAAA,UAClC,yBAAAs2C,EAAAn2E,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,cAAAC,MAED,SAAYuS,GACV,IAAKgzB,EAAA,KAAIq3C,EAAA,KACP,MAAM,IAAI38E,MAAM,mEAElB,IAAM89E,EAAex4C,EAAA,KAAIo3C,EAAA,KAASv5E,MAAM6gD,SAAS1xC,GACjD,OAAOgzB,EAAA,KAAIq3C,EAAA,KAAS96B,YAAYi8B,EAClC,GAAC,CAAAh+E,IAAA,gBAAAC,MAAA,eAAAmrC,EAAAzlC,EAAAL,IAAAQ,MAED,SAAA+hC,EAAoB0D,GAAoD,IAAAxI,EAAArxB,EAAA,OAAApM,IAAAoB,MAAA,SAAAohC,GAAA,cAAAA,EAAAlhC,KAAAkhC,EAAAjhC,MAAA,UACjE2+B,EAAA,KAAIq3C,EAAA,KAAQ,CAAA/0C,EAAAjhC,KAAA,cACT,IAAI3G,MAAM,mEAAkE,YAEhF,EAAAvB,EAAAs/E,mBAAkBz4C,EAAA,KAAIq3C,EAAA,MAAS,CAAA/0C,EAAAjhC,KAAA,QAC6B,OAAxDk8B,GAAY,EAAAoB,EAAA+5C,mBAAkB3yC,GAA0BzD,EAAAjhC,KAAA,EACtC2+B,EAAA,KAAIq3C,EAAA,KAASzxC,eACnCrI,EAAUE,OACV,CAAEN,OAAQI,EAAUC,MAAML,QAC1BI,EAAUvwB,SACX,OAJc,OAATd,EAASo2B,EAAAxgC,KAAAwgC,EAAAj4B,OAAA,SAKR6B,GAAS,aAEZ,IAAIxR,MAAM,oEAAmE,wBAAA4nC,EAAAzgC,OAAA,GAAAwgC,EAAA,UACpF,gBAAAwF,GAAA,OAAAjC,EAAAxjC,MAAA,KAAAxI,UAAA,EAhBA,IAgBA,CAAAY,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MAED,SAAAmiC,EAAkBgE,GAAkC,OAAA3mC,IAAAoB,MAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,cAAAshC,EAAAthC,KAAA,EACpC2+B,EAAA,KAAIs3C,EAAA,KAAWx5B,YAAYrX,GAAY,cAAA9D,EAAAt4B,OAAA,SAAAs4B,EAAA7gC,KAAEi8C,YAAQ,wBAAApb,EAAA9gC,OAAA,GAAA4gC,EAAA,UAChE,gBAAAqF,GAAA,OAAAwnB,EAAAltD,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,OAAAC,MAED,SAAKgsC,EAAoCqa,GACvC,OAAO9gB,EAAA,KAAIs3C,EAAA,KAAW91E,KAAKilC,EAAaqa,EAC1C,GAAC,CAAAtmD,IAAA,mBAAAC,MAED,SAAiB+iC,EAAiBjiC,GAChC,OAAO,IAAIykC,EAAA,KAAIo3C,EAAA,KAASv5E,MAAc,WAAG9C,OAAOyiC,EAAOjiC,EACzD,GAAC,CAAAf,IAAA,mBAAAC,MAED,SAAiB+iC,EAAiBjiC,GAChC,OAAO,IAAIykC,EAAA,KAAIo3C,EAAA,KAASv5E,MAAc,WAAGpC,OAAO+hC,EAAOjiC,EACzD,KAAC47E,CAAA,CAzOgB,6CA4OnBn7E,EAAAA,QAAem7E,qIC9QAwB,EAA0C,WAGvD,SAAAA,EAAmBttB,GAA6C,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAAu+E,GAA7C,KAAAttB,SAAAA,EAMnB,KAAAtwD,OAAsE,SACpE69E,EACAhvE,GAEA,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CAXmE,CAIlE,OAJmErP,EAAAo+E,EAAA,EAAAn+E,IAAA,aAAAC,MAEpE,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,KAACo8E,CAAA,CAPsD,GAiBzD38E,EAAAA,QAAe28E,uPCtBf,IAEME,EAA2C,SAAAC,GAAA74E,EAAA44E,EAAAC,GAAA,IAAAv2E,EAAArC,EAAA24E,GAC/C,SAAAA,EAAmBxtB,GAAsC,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAy+E,IACvDzuE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAsCjhD,CAEzD,CAAC,OAAA7P,EAAAs+E,EAAA,CAH8C,CAFjDz+C,EAAAphC,EAAA,QAEyD+R,SAMzD/O,EAAAA,QAAe68E,2MCHf,IAAA1/E,EAAAH,EAAA,OAEe+/E,EAAwB,WACrC,SAAAA,EAAmB1tB,GAA2B,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAA2+E,GAA3B,KAAA1tB,SAAAA,EAmCnB,KAAAtwD,OAA4D,SAC1D69E,EACAhvE,GAEA,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CAxCiD,CAgDhD,OAhDiDrP,EAAAw+E,EAAA,EAAAv+E,IAAA,aAAAC,MAElD,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,GAAC,CAAA/B,IAAA,iBAAAC,MAAA,eAAAu+E,EAAA74E,EAAAL,IAAAQ,MAED,SAAAC,EACE9F,EACAw+E,EACAz7E,EACAqX,GAAkC,IAAAw5B,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,WAE9BwT,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAAY,iBAAkB,CAACrjD,EAAOw+E,EAAgBz7E,GAAK4R,EAAA,GACpFyF,IACH,OAFFA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAIO,KAAKgqD,SAAS6tB,eAAez+E,EAAOw+E,EAAgBz7E,EAAMqX,GAAQ,OAA3E,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UACT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,EAAAC,EAAA8/B,GAAA,OAAA81C,EAAA52E,MAAA,KAAAxI,UAAA,EAfA,IAeA,CAAAY,IAAA,gBAAAC,MAAA,eAAA2+E,EAAAj5E,EAAAL,IAAAQ,MAED,SAAAs4B,EACEn+B,EACAw+E,EACApkE,GAAkC,IAAAw5B,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE9BwT,GAAYA,EAAQ8yB,SAAQ,CAAAxmC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACL,KAAKy8C,YAAY,gBAAiB,CAACrjD,EAAOw+E,GAAe7pE,EAAA,GAC7EyF,IACH,OAFFA,EAAQ8yB,SAAQxmC,EAAAW,KAAA,cAAAX,EAAAE,KAAA,EAIO,KAAKgqD,SAASguB,cAAc5+E,EAAOw+E,EAAgBpkE,GAAQ,OAApE,OAAVw5B,EAAUltC,EAAAW,KAAAX,EAAAkJ,OAAA,UACT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAA1T,EAAAU,OAAA,GAAA+2B,EAAA,UACvC,gBAAAsL,EAAAK,EAAAS,GAAA,OAAAo0C,EAAAh3E,MAAA,KAAAxI,UAAA,EAdA,IAcA,CAAAY,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MASD,SAAAkgC,EACEo4C,EACAhvE,EACAiL,GAAiC,IAAAykE,EAAA,OAAAx5E,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,GAElBi4E,EAAA,KAAKjuB,SAASvN,aAAoB86B,GAAWx2E,MAAAk3E,EAAA1nD,EAAIhoB,GAAMlM,OAAA,CAAEmX,KAAQ,cAAA4rB,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,KAAEi8C,YAAQ,wBAAAtd,EAAA5+B,OAAA,GAAA2+B,EAAA,UAC3F,gBAAA8E,EAAAK,EAAAS,GAAA,OAAAkpB,EAAAltD,MAAA,KAAAxI,UAAA,EAfA,MAeAm/E,CAAA,CAjDoC,GAoDvC/8E,EAAAA,QAAe+8E,uPC3Df,IAEMQ,EAAiC,SAAAC,GAAAv5E,EAAAs5E,EAAAC,GAAA,IAAAj3E,EAAArC,EAAAq5E,GACrC,SAAAA,EAAmBluB,GAAoB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAm/E,IACrCnvE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAoBjhD,CAEvC,CAAC,OAAA7P,EAAAg/E,EAAA,CAHoC,CAFvCn/C,EAAAphC,EAAA,QAE+C+R,SAM/C/O,EAAAA,QAAeu9E,2MCOf,IAAApgF,EAAAH,EAAA,OAEeygF,EAAwB,WACrC,SAAAA,EACSpuB,GAAuF,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAAq/E,GAAvF,KAAApuB,SAAAA,EAqJT,KAAAtwD,OAAoD,SAAC69E,EAAiBhvE,GACpE,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CAtJG,CA8JF,OA9JGrP,EAAAk/E,EAAA,EAAAj/E,IAAA,aAAAC,MAAA,eAAAi/E,EAAAv5E,EAAAL,IAAAQ,MAOJ,SAAAC,IAAA,OAAAT,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACgB,KAAKgqD,SAASigB,UAAS,cAAA/pE,EAAA8I,OAAA,SAAA9I,EAAAO,MAAA,wBAAAP,EAAAM,OAAA,GAAAtB,EAAA,UACtC,yBAAAm5E,EAAAt3E,MAAA,KAAAxI,UAAA,EATG,IASH,CAAAY,IAAA,aAAAC,MAED,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,GAAC,CAAA/B,IAAA,WAAAC,MAAA,eAAAsmC,EAAA5gC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgB,KAAKgqD,SAAS1xD,QAAO,cAAAwH,EAAAkJ,OAAA,SAAAlJ,EAAAW,KAAEi8C,YAAQ,wBAAA58C,EAAAU,OAAA,GAAA+2B,EAAA,UAC9C,yBAAAmI,EAAA3+B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,eAAAC,MAAA,eAAA0mC,EAAAhhC,EAAAL,IAAAQ,MAED,SAAAkgC,IAAA,OAAA1gC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EACgB,KAAKgqD,SAAS/pB,eAAc,cAAAb,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,KAAEi8C,YAAQ,wBAAAtd,EAAA5+B,OAAA,GAAA2+B,EAAA,UACrD,yBAAAW,EAAA/+B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,YAAAC,MAAA,eAAAkmC,EAAAxgC,EAAAL,IAAAQ,MAED,SAAAsgC,IAAA,OAAA9gC,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx2B,OAAA,SACS,KAAKghD,SAASvqB,aAAW,wBAAAD,EAAAh/B,OAAA,GAAA++B,EAAA,UACjC,yBAAAD,EAAAv+B,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,UAAAC,MAAA,eAAAooC,EAAA1iC,EAAAL,IAAAQ,MAED,SAAA0gC,EAAczkC,GAAe,OAAAuD,IAAAoB,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAA5/B,MAAA,cAAA4/B,EAAA52B,OAAA,SACpB,KAAKghD,SAASpoB,QAAQ1mC,IAAQ,wBAAA0kC,EAAAp/B,OAAA,GAAAm/B,EAAA,UACtC,gBAAA99B,GAAA,OAAA2/B,EAAAzgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,qBAAAC,MAAA,eAAAwqC,EAAA9kC,EAAAL,IAAAQ,MAED,SAAA8gC,EAAyB/D,GAAwC,OAAAv9B,IAAAoB,MAAA,SAAAmgC,GAAA,cAAAA,EAAAjgC,KAAAigC,EAAAhgC,MAAA,cAAAggC,EAAAh3B,OAAA,SACxD,KAAKghD,SAAShmB,mBACnBhI,EAAoBlV,GACpBkV,EAAoB5iC,MACpB4iC,EAAoB38B,KACpB28B,EAAoB0G,UACpB1G,EAAoBO,UACpBP,EAAoBQ,QACpBR,EAAoBS,SACpBT,EAAoBwP,SACpBxP,EAAoByP,eACpBzP,EAAoB1jC,QACrB,wBAAA0nC,EAAAx/B,OAAA,GAAAu/B,EAAA,UACF,gBAAAj+B,GAAA,OAAA8hC,EAAA7iC,MAAA,KAAAxI,UAAA,EAfA,IAeA,CAAAY,IAAA,iBAAAC,MAAA,eAAAk/E,EAAAx5E,EAAAL,IAAAQ,MAED,SAAAkhC,EAAqBuB,EAAsBlmC,GAAY,OAAAiD,IAAAoB,MAAA,SAAAugC,GAAA,cAAAA,EAAArgC,KAAAqgC,EAAApgC,MAAA,cAAAogC,EAAAp3B,OAAA,SAC9C,KAAKghD,SAASjjB,eAAerF,EAAclmC,IAAK,wBAAA4kC,EAAA5/B,OAAA,GAAA2/B,EAAA,UACxD,gBAAAp+B,EAAA8/B,GAAA,OAAAy2C,EAAAv3E,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,cAAAC,MAAA,eAAAm/E,EAAAz5E,EAAAL,IAAAQ,MAED,SAAAshC,EACE/kC,EACAgY,GAAkC,IAAAw5B,EAAA,OAAAvuC,IAAAoB,MAAA,SAAA2gC,GAAA,cAAAA,EAAAzgC,KAAAygC,EAAAxgC,MAAA,WAE9BwT,GAAYA,EAAQ8yB,SAAQ,CAAA9F,EAAAxgC,KAAA,eAAAwgC,EAAAxgC,KAAA,EACL,KAAKy8C,YAAY,cAAe,CAACjhD,GAAKuS,EAAA,GAAOyF,IAAU,OAAhFA,EAAQ8yB,SAAQ9F,EAAA//B,KAAA,cAAA+/B,EAAAxgC,KAAA,EAEO,KAAKgqD,SAASzjB,YAAY/qC,EAAMgY,GAAQ,OAAjD,OAAVw5B,EAAUxM,EAAA//B,KAAA+/B,EAAAx3B,OAAA,UACT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAgtB,EAAAhgC,OAAA,GAAA+/B,EAAA,UACvC,gBAAAsC,EAAAK,GAAA,OAAAq1C,EAAAx3E,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,qBAAAC,MAAA,eAAAyyC,EAAA/sC,EAAAL,IAAAQ,MAMD,SAAA2hC,EACEyC,EACA7vB,GAAkC,IAAA04B,EAAA,OAAAztC,IAAAoB,MAAA,SAAAghC,GAAA,cAAAA,EAAA9gC,KAAA8gC,EAAA7gC,MAAA,OAEb,GAAjBksC,GAAY,EAAKrL,EAAA9gC,KAAA,GAEfyT,GAAYA,EAAQ8yB,SAAQ,CAAAzF,EAAA7gC,KAAA,eAAA6gC,EAAA7gC,KAAA,EACL,KAAKy8C,YAC5B,kBACA,CACEpZ,EAAgBhkC,KAAKynB,GACrBuc,EAAgBhkC,KAAKjG,MACrBiqC,EAAgBhkC,KAAKA,KACrBgkC,EAAgBhkC,KAAKqjC,UACrBW,EAAgBhkC,KAAKk9B,UACrB8G,EAAgBhkC,KAAKm9B,QACrB6G,EAAgBhkC,KAAKo9B,SACrB4G,EAAgBhkC,KAAKmsC,SACrBnI,EAAgBhkC,KAAKosC,eACrBpI,EAAgBm1C,qBACjBzqE,EAAA,GAEIyF,IAEN,OAjBDA,EAAQ8yB,SAAQzF,EAAApgC,KAAA,cAAAogC,EAAA7gC,KAAA,EAmBA,KAAKgqD,SAASyuB,WAAWprC,gBACzChK,EAAgBhkC,KAAKynB,GACrBuc,EAAgBhkC,KAAKjG,MACrBiqC,EAAgBhkC,KAAKA,KACrBgkC,EAAgBhkC,KAAKqjC,UACrBW,EAAgBhkC,KAAKk9B,UACrB8G,EAAgBhkC,KAAKm9B,QACrB6G,EAAgBhkC,KAAKo9B,SACrB4G,EAAgBhkC,KAAKmsC,SACrBnI,EAAgBhkC,KAAKosC,eACrBpI,EAAgBm1C,oBAChBhlE,GACD,OAZD04B,EAASrL,EAAApgC,KAAAogC,EAAA7gC,KAAA,iBAAA6gC,EAAA9gC,KAAA,GAAA8gC,EAAAtgC,GAAAsgC,EAAA,wBAAAA,EAAA73B,OAAA,SAcJkjC,GAAS,yBAAArL,EAAArgC,OAAA,GAAAogC,EAAA,mBACjB,gBAAA+C,EAAAM,GAAA,OAAA4H,EAAA9qC,MAAA,KAAAxI,UAAA,EA/CA,IA+CA,CAAAY,IAAA,kBAAAC,MAAA,eAAAs/E,EAAA55E,EAAAL,IAAAQ,MAED,SAAA+hC,EACEqC,EACA7vB,GAAkC,IAAAw5B,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAohC,GAAA,cAAAA,EAAAlhC,KAAAkhC,EAAAjhC,MAAA,WAE9BwT,GAAYA,EAAQ8yB,SAAQ,CAAArF,EAAAjhC,KAAA,eAAAihC,EAAAjhC,KAAA,EACL,KAAKy8C,YAC5B,kBACA,CACEpZ,EAAgBhkC,KAAKynB,GACrBuc,EAAgBhkC,KAAKjG,MACrBiqC,EAAgBhkC,KAAKA,KACrBgkC,EAAgBhkC,KAAKqjC,UACrBW,EAAgBhkC,KAAKk9B,UACrB8G,EAAgBhkC,KAAKm9B,QACrB6G,EAAgBhkC,KAAKo9B,SACrB4G,EAAgBhkC,KAAKmsC,SACrBnI,EAAgBhkC,KAAKosC,eACrBpI,EAAgBm1C,qBACjBzqE,EAAA,GAEIyF,IAEN,OAjBDA,EAAQ8yB,SAAQrF,EAAAxgC,KAAA,cAAAwgC,EAAAjhC,KAAA,EAmBO,KAAKgqD,SAAS3c,gBACrChK,EAAgBhkC,KAAKynB,GACrBuc,EAAgBhkC,KAAKjG,MACrBiqC,EAAgBhkC,KAAKA,KACrBgkC,EAAgBhkC,KAAKqjC,UACrBW,EAAgBhkC,KAAKk9B,UACrB8G,EAAgBhkC,KAAKm9B,QACrB6G,EAAgBhkC,KAAKo9B,SACrB4G,EAAgBhkC,KAAKmsC,SACrBnI,EAAgBhkC,KAAKosC,eACrBpI,EAAgBm1C,oBAChBhlE,GACD,OAZe,OAAVw5B,EAAU/L,EAAAxgC,KAAAwgC,EAAAj4B,OAAA,UAaT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAytB,EAAAzgC,OAAA,GAAAwgC,EAAA,UACvC,gBAAAsD,EAAAS,GAAA,OAAA2zC,EAAA33E,MAAA,KAAAxI,UAAA,EAxCA,IAwCA,CAAAY,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MAMD,SAAAmiC,EACEm2C,EACAhvE,EACAiL,GAAiC,IAAAykE,EAAA,OAAAx5E,IAAAoB,MAAA,SAAAyhC,GAAA,cAAAA,EAAAvhC,KAAAuhC,EAAAthC,MAAA,cAAAshC,EAAAthC,KAAA,GAElBi4E,EAAA,KAAKjuB,SAASvN,aAAoB86B,GAAWx2E,MAAAk3E,EAAA1nD,EAAIhoB,GAAMlM,OAAA,CAAEmX,KAAQ,cAAA8tB,EAAAt4B,OAAA,SAAAs4B,EAAA7gC,KAAEi8C,YAAQ,wBAAApb,EAAA9gC,OAAA,GAAA4gC,EAAA,UAC3F,gBAAA4D,EAAAiB,EAAAO,GAAA,OAAAynB,EAAAltD,MAAA,KAAAxI,UAAA,EAZA,MAYA6/E,CAAA,CAjKoC,GAoKvCz9E,EAAAA,QAAey9E,gTCpLf,IAAApgF,EAAAL,EAAA,OAEAG,EAAAH,EAAA,OAGMghF,EAAiC,SAAAC,GAAAh6E,EAAA+5E,EAAAC,GAAA,IAAA13E,EAAArC,EAAA85E,GACrC,SAAAA,EAAmB3uB,GAAoB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAA4/E,IACrC5vE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAoBjhD,CAEvC,CAiDC,OAjDA7P,EAAAy/E,EAAA,EAAAx/E,IAAA,QAAAC,MAAA,eAAAy/E,EAAA/5E,EAAAL,IAAAQ,MAED,SAAAC,EACE45E,EACAtlE,GAAkC,IAAA6xB,EAAAoE,EAAAsvC,EAAAjyD,EAAAkyD,EAAA35E,EAAA45E,EAAA5gC,EAAA6gC,EAAA3gC,EAAA4gC,EAAA1gC,EAAAzL,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OASF,GAN9BqlC,EAOEyzC,EAPFzzC,OACAoE,EAMEqvC,EANFrvC,UAASsvC,EAMPD,EALFhyD,GAAAA,OAAE,IAAAiyD,EAAG/gF,EAAAu8C,aAAYwkC,EAAAC,EAKfF,EAJFz5E,KAAAA,OAAI,IAAA25E,EAAGhhF,EAAA0gD,WAAUsgC,EAAAC,EAIfH,EAHFzgC,aAAAA,OAAY,IAAA4gC,EAAGjhF,EAAAu8C,aAAY0kC,EAAAC,EAGzBJ,EAFFvgC,QAAAA,OAAO,IAAA2gC,EAAG,EAACA,EAAAC,EAETL,EADFrgC,gBAAAA,OAAe,IAAA0gC,EAAGnhF,EAAAu8C,aAAY4kC,GAG5B3lE,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAC5B,QACA,CAACpX,EAAQoE,EAAW3iB,EAAIznB,EAAMg5C,EAAcE,EAASE,GAAgB1qC,EAAA,GAEhEyF,IAEN,OANDA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAQO,KAAKgqD,SAASovB,MACrC/zC,EACAoE,EACA3iB,EACAznB,EACAg5C,EACAE,EACAE,EACAjlC,GACD,OATe,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UAWT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,GAAA,OAAA+2E,EAAA93E,MAAA,KAAAxI,UAAA,EArCA,IAqCA,CAAAY,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SACS,KAAKghD,SAAS9oB,cAAY,wBAAAphC,EAAAU,OAAA,GAAA+2B,EAAA,UAClC,yBAAAwJ,EAAAhgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAsBkC,GAAqB,IAAAkU,EAAAhU,EAAA,OAAA9iC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EACnB,KAAKkhC,aAAY,OAGtC,OAHKqU,EAAOnW,EAAA3+B,KACP8gC,EAAkBgU,EAAQztC,MAAK,SAACuxE,GAA4B,OAChE,EAAAvhF,EAAA+tC,YAAWwzC,EAAsBh4C,EAAc,IAChDjC,EAAAp2B,OAAA,SACMu4B,GAAe,wBAAAnC,EAAA5+B,OAAA,GAAA2+B,EAAA,UACvB,gBAAAp9B,GAAA,OAAAo/B,EAAApgC,MAAA,KAAAxI,UAAA,EARA,MAQAogF,CAAA,CApDoC,CAFvC5/C,EAAAphC,EAAA,QAE+C+R,SAuD/C/O,EAAAA,QAAeg+E,gTC5Df,IAAA3gF,EAAAL,EAAA,OAEAG,EAAAH,EAAA,OAGM2hF,EAAiC,SAAAV,GAAAh6E,EAAA06E,EAAAV,GAAA,IAAA13E,EAAArC,EAAAy6E,GACrC,SAAAA,EAAmBtvB,GAAoB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAugF,IACrCvwE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAoBjhD,CAEvC,CAmDC,OAnDA7P,EAAAogF,EAAA,EAAAngF,IAAA,QAAAC,MAAA,eAAAy/E,EAAA/5E,EAAAL,IAAAQ,MAED,SAAAC,EACE45E,EACAtlE,GAAkC,IAAA6xB,EAAAoE,EAAAsvC,EAAAjyD,EAAAkyD,EAAA35E,EAAAk6E,EAAAphC,EAAA8gC,EAAA5gC,EAAA6gC,EAAA3gC,EAAA4gC,EAAA1gC,EAAAzL,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAUF,GAP9BqlC,EAQEyzC,EARFzzC,OACAoE,EAOEqvC,EAPFrvC,UAASsvC,EAOPD,EANFhyD,GAAAA,OAAE,IAAAiyD,EAAG/gF,EAAAu8C,aAAYwkC,EAAAC,EAMfF,EALFz5E,KAAAA,OAAI,IAAA25E,EAAGhhF,EAAA0gD,WAAUsgC,EAAAO,EAKfT,EAJF3gC,gBAAAA,OAAe,IAAAohC,EAAGvhF,EAAAu8C,aAAYglC,EAAAN,EAI5BH,EAHFzgC,aAAAA,OAAY,IAAA4gC,EAAGjhF,EAAAu8C,aAAY0kC,EAAAC,EAGzBJ,EAFFvgC,QAAAA,OAAO,IAAA2gC,EAAG,EAACA,EAAAC,EAETL,EADFrgC,gBAAAA,OAAe,IAAA0gC,EAAGnhF,EAAAu8C,aAAY4kC,GAG5B3lE,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAC5B,QACA,CAACpX,EAAQoE,EAAW3iB,EAAIznB,EAAM84C,EAAiBE,EAAcE,EAASE,GAAgB1qC,EAAA,GAEjFyF,IAEN,OANDA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAQO,KAAKgqD,SAASovB,MACrC/zC,EACAoE,EACA3iB,EACAznB,EACA84C,EACAE,EACAE,EACAE,EACAjlC,GACD,OAVe,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UAYT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,GAAA,OAAA+2E,EAAA93E,MAAA,KAAAxI,UAAA,EAvCA,IAuCA,CAAAY,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SACS,KAAKghD,SAAS9oB,cAAY,wBAAAphC,EAAAU,OAAA,GAAA+2B,EAAA,UAClC,yBAAAwJ,EAAAhgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAsBkC,GAAqB,IAAAkU,EAAAhU,EAAA,OAAA9iC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,EACnB,KAAKkhC,aAAY,OAGtC,OAHKqU,EAAOnW,EAAA3+B,KACP8gC,EAAkBgU,EAAQztC,MAAK,SAACuxE,GAA4B,OAChE,EAAAvhF,EAAA+tC,YAAWwzC,EAAsBh4C,EAAc,IAChDjC,EAAAp2B,OAAA,SACMu4B,GAAe,wBAAAnC,EAAA5+B,OAAA,GAAA2+B,EAAA,UACvB,gBAAAp9B,GAAA,OAAAo/B,EAAApgC,MAAA,KAAAxI,UAAA,EARA,MAQA+gF,CAAA,CAtDoC,CAFvCvgD,EAAAphC,EAAA,QAE+C+R,SAyD/C/O,EAAAA,QAAe2+E,gTC9Df,IAAAxhF,EAAAH,EAAA,OACAK,EAAAL,EAAA,OAIM6hF,EAAiC,SAAAZ,GAAAh6E,EAAA46E,EAAAZ,GAAA,IAAA13E,EAAArC,EAAA26E,GACrC,SAAAA,EAAmBxvB,GAAoB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAygF,IACrCzwE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAoBjhD,CAEvC,CA+CC,OA/CA7P,EAAAsgF,EAAA,EAAArgF,IAAA,QAAAC,MAAA,eAAAy/E,EAAA/5E,EAAAL,IAAAQ,MAED,SAAAC,EACE45E,EACAtlE,GAAkC,IAAA6xB,EAAAoE,EAAAsvC,EAAAjyD,EAAAkyD,EAAA35E,EAAAk6E,EAAAphC,EAAA8gC,EAAA5gC,EAAA6gC,EAAA3gC,EAAA4gC,EAAA1gC,EAAAzL,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAUF,GAP9BqlC,EAQEyzC,EARFzzC,OACAoE,EAOEqvC,EAPFrvC,UAASsvC,EAOPD,EANFhyD,GAAAA,OAAE,IAAAiyD,EAAG/gF,EAAAu8C,aAAYwkC,EAAAC,EAMfF,EALFz5E,KAAAA,OAAI,IAAA25E,EAAGhhF,EAAA0gD,WAAUsgC,EAAAO,EAKfT,EAJF3gC,gBAAAA,OAAe,IAAAohC,EAAGvhF,EAAAu8C,aAAYglC,EAAAN,EAI5BH,EAHFzgC,aAAAA,OAAY,IAAA4gC,EAAGjhF,EAAAu8C,aAAY0kC,EAAAC,EAGzBJ,EAFFvgC,QAAAA,OAAO,IAAA2gC,EAAG,EAACA,EAAAC,EAETL,EADFrgC,gBAAAA,OAAe,IAAA0gC,EAAGnhF,EAAAu8C,aAAY4kC,GAG5B3lE,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAC5B,QACA,CAACpX,EAAQoE,EAAW3iB,EAAIznB,EAAM84C,EAAiBE,EAAcE,EAASE,GAAgB1qC,EAAA,GAEjFyF,IAEN,OANDA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAQO,KAAKgqD,SAASovB,MACrC/zC,EACAoE,EACA3iB,EACAznB,EACA84C,EACAE,EACAE,EACAE,EACAjlC,GACD,OAVe,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UAYT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,GAAA,OAAA+2E,EAAA93E,MAAA,KAAAxI,UAAA,EAvCA,IAuCA,CAAAY,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,OAAA94B,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SACS,KAAKghD,SAAS9oB,cAAY,wBAAAphC,EAAAU,OAAA,GAAA+2B,EAAA,UAClC,yBAAAwJ,EAAAhgC,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAsBkC,GAAqB,OAAA5iC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SAClC,KAAKghD,SAASzoB,gBAAgBF,IAAc,wBAAAjC,EAAA5+B,OAAA,GAAA2+B,EAAA,UACpD,gBAAAp9B,GAAA,OAAAo/B,EAAApgC,MAAA,KAAAxI,UAAA,EAJA,MAIAihF,CAAA,CAlDoC,CAFvCzgD,EAAAphC,EAAA,QAE+C+R,SAqD/C/O,EAAAA,QAAe6+E,gTC1Df,IAAA1hF,EAAAH,EAAA,OAEAK,EAAAL,EAAA,OAGM8hF,EAAiC,SAAAb,GAAAh6E,EAAA66E,EAAAb,GAAA,IAAA13E,EAAArC,EAAA46E,GACrC,SAAAA,EAAmBzvB,GAAoB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAA0gF,IACrC1wE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAoBjhD,CAEvC,CAgDC,OAhDA7P,EAAAugF,EAAA,EAAAtgF,IAAA,QAAAC,MAAA,eAAAy/E,EAAA/5E,EAAAL,IAAAQ,MAED,SAAAC,EACE45E,EACAtlE,GAAkC,IAAA6xB,EAAAoE,EAAAsvC,EAAAjyD,EAAAkyD,EAAA35E,EAAAk6E,EAAAphC,EAAA8gC,EAAA5gC,EAAA6gC,EAAA3gC,EAAA4gC,EAAA1gC,EAAAzL,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,OAUF,GAP9BqlC,EAQEyzC,EARFzzC,OACAoE,EAOEqvC,EAPFrvC,UAASsvC,EAOPD,EANFhyD,GAAAA,OAAE,IAAAiyD,EAAG/gF,EAAAu8C,aAAYwkC,EAAAC,EAMfF,EALFz5E,KAAAA,OAAI,IAAA25E,EAAGhhF,EAAA0gD,WAAUsgC,EAAAO,EAKfT,EAJF3gC,gBAAAA,OAAe,IAAAohC,EAAGvhF,EAAAu8C,aAAYglC,EAAAN,EAI5BH,EAHFzgC,aAAAA,OAAY,IAAA4gC,EAAGjhF,EAAAu8C,aAAY0kC,EAAAC,EAGzBJ,EAFFvgC,QAAAA,OAAO,IAAA2gC,EAAG,EAACA,EAAAC,EAETL,EADFrgC,gBAAAA,OAAe,IAAA0gC,EAAGnhF,EAAAu8C,aAAY4kC,GAG5B3lE,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAC5B,QACA,CAACpX,EAAQoE,EAAW3iB,EAAIznB,EAAM84C,EAAiBE,EAAcE,EAASE,GAAgB1qC,EAAA,GAEjFyF,IAEN,OANDA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAQO,KAAKgqD,SAASovB,MACrC/zC,EACAoE,EACA3iB,EACAznB,EACA84C,EACAE,EACAE,EACAE,EACAjlC,GACD,OAVe,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UAYT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,GAAA,OAAA+2E,EAAA93E,MAAA,KAAAxI,UAAA,EAvCA,IAuCA,CAAAY,IAAA,aAAAC,MAAA,eAAA2nC,EAAAjiC,EAAAL,IAAAQ,MAED,SAAAs4B,IAAA,IAAAmiD,EAAAv0E,EAAA,OAAA1G,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC0B,KAAKgqD,SAAS2vB,oBAAoB3hF,EAAAg+C,iBAAkB,IAAG,OAAlE,OAAkE0jC,EAAA55E,EAAAW,KAAvE0E,EAAKu0E,EAALv0E,MAAKrF,EAAAkJ,OAAA,SACN7D,GAAK,wBAAArF,EAAAU,OAAA,GAAA+2B,EAAA,UACb,yBAAAwJ,EAAAhgC,MAAA,KAAAxI,UAAA,EALA,IAKA,CAAAY,IAAA,kBAAAC,MAAA,eAAA+nC,EAAAriC,EAAAL,IAAAQ,MAED,SAAAkgC,EAAsBkC,GAAqB,OAAA5iC,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp2B,OAAA,SAClC,KAAKghD,SAASzoB,gBAAgBF,IAAc,wBAAAjC,EAAA5+B,OAAA,GAAA2+B,EAAA,UACpD,gBAAAp9B,GAAA,OAAAo/B,EAAApgC,MAAA,KAAAxI,UAAA,EAJA,MAIAkhF,CAAA,CAnDoC,CAFvC1gD,EAAAphC,EAAA,QAE+C+R,SAsD/C/O,EAAAA,QAAe8+E,2MC7Df,IAAAr8C,EAAAzlC,EAAA,OAgBMiiF,EAAoC,WACxC,SAAAA,EAAmB5vB,GAAyEjxD,EAAA,KAAA6gF,GAAzE,KAAA5vB,SAAAA,CAA4E,CAyD9F,OAzD+F9wD,EAAA0gF,EAAA,EAAAzgF,IAAA,aAAAC,MAEhG,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,GAAC,CAAA/B,IAAA,oBAAAC,MAAA,eAAAygF,EAAA/6E,EAAAL,IAAAQ,MAED,SAAAC,IAAA,OAAAT,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,cAAAE,EAAA8I,OAAA,SACS,KAAKghD,SAAS/Q,qBAAmB,wBAAA/4C,EAAAM,OAAA,GAAAtB,EAAA,UACzC,yBAAA26E,EAAA94E,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,cAAAC,MAAA,eAAA0gF,EAAAh7E,EAAAL,IAAAQ,MAED,SAAAkgC,EAAA31B,GAAA,IAAA0mC,EAAA4I,EAAAC,EAAAvlC,EAAAhS,EAAA43C,EAAA,OAAA36C,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,OAKU,GAJRkwC,EAAqB1mC,EAArB0mC,sBACA4I,EAAWtvC,EAAXsvC,YACAC,EAASvvC,EAATuvC,UACAvlC,EAAOhK,EAAPgK,QACAhS,EAAQgI,EAARhI,UAEI47B,EAAA+P,UAAU3zC,KAAKu/C,GAAWmB,GAAG,GAAE,CAAA9a,EAAAp/B,KAAA,cAC3B,IAAI3G,MAAM,gDAA+C,WAC7Dma,GAAYA,EAAQ8yB,SAAQ,CAAAlH,EAAAp/B,KAAA,eAAAo/B,EAAAp/B,KAAA,EACL,KAAKy8C,YAC5B,uBACA,CAACvM,EAAuB4I,EAAaC,GAAUhrC,EAAA,GAE1CyF,IAEN,OANDA,EAAQ8yB,SAAQlH,EAAA3+B,KAAA,OAuBd,OAfE24C,EAAe,KAAK4Q,SACvB+vB,qBAAqB7pC,EAAuB4I,EAAaC,EAAWvlC,GACpEvR,KAAI,eAAA68B,EAAAhgC,EAAAL,IAAAQ,MAAC,SAAAs4B,EAAOyV,GAAU,IAAArxB,EAAA0gD,EAAA2d,EAAA5gC,EAAA,OAAA36C,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGpB,OAFGwB,GACFA,EAASwrC,EAAWxxC,MACrBsE,EAAAE,KAAA,EACuBgtC,EAAWwU,OAAM,OAGxC,GAHK6a,EAASv8D,EAAAW,MACTu5E,EAAsC,QAAjBr+D,EAAS,OAAT0gD,QAAS,IAATA,OAAS,EAATA,EAAW4d,cAAM,IAAAt+D,OAAA,EAAAA,EAAEmf,MAC5C,SAAAzF,GAAQ,MAAwB,kBAAxBA,EAALl0B,KAA4C,MAErB64E,EAAmB14E,KAAI,CAAAxB,EAAAE,KAAA,cAC3C,IAAI3G,MAAM,wCAAuC,OAEF,OAAjD+/C,EAAuB4gC,EAAmB14E,KAAK,GAAExB,EAAAkJ,OAAA,SAChDowC,GAAY,wBAAAt5C,EAAAU,OAAA,GAAA+2B,EAAA,KACpB,gBAAAz1B,GAAA,OAAAg9B,EAAA/9B,MAAA,KAAAxI,UAAA,EAbI,IAaH6mC,EAAAp2B,OAAA,SACGowC,GAAY,wBAAAha,EAAA5+B,OAAA,GAAA2+B,EAAA,UACpB,gBAAAt9B,GAAA,OAAAi4E,EAAA/4E,MAAA,KAAAxI,UAAA,EArCA,IAqCA,CAAAY,IAAA,SAAAC,MAED,SAAOm+E,EAAoBhvE,GACzB,OAAQ,KAAKyhD,SAAiBtD,UAAUsC,mBAAmBuuB,EAAYhvE,EACzE,GAAC,CAAApP,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MAED,SAAAsgC,EACEg4C,EACAhvE,EACAiL,GAAiC,IAAAykE,EAAA,OAAAx5E,IAAAoB,MAAA,SAAA2/B,GAAA,cAAAA,EAAAz/B,KAAAy/B,EAAAx/B,MAAA,cAAAw/B,EAAAx/B,KAAA,GAElBi4E,EAAA,KAAKjuB,SAASvN,aAAoB86B,GAAWx2E,MAAAk3E,EAAA1nD,EAAIhoB,GAAMlM,OAAA,CAAEmX,KAAQ,cAAAgsB,EAAAx2B,OAAA,SAAAw2B,EAAA/+B,KAAEi8C,YAAQ,wBAAAld,EAAAh/B,OAAA,GAAA++B,EAAA,UAC3F,gBAAAx9B,EAAA8/B,EAAAgB,GAAA,OAAAorB,EAAAltD,MAAA,KAAAxI,UAAA,EARA,MAQAqhF,CAAA,CA1DuC,GA6D1Cj/E,EAAAA,QAAei/E,uPC5Ef,IAEMM,EAA6C,SAAAC,GAAAv7E,EAAAs7E,EAAAC,GAAA,IAAAj5E,EAAArC,EAAAq7E,GACjD,SAAAA,EAAmBlwB,GAAsB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAmhF,IACvCnxE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAsBjhD,CAEzC,CAAC,OAAA7P,EAAAghF,EAAA,CAHgD,CAFnDnhD,EAAAphC,EAAA,QAE2D+R,SAM3D/O,EAAAA,QAAeu/E,uPCRf,IAEME,EAA6C,SAAAD,GAAAv7E,EAAAw7E,EAAAD,GAAA,IAAAj5E,EAAArC,EAAAu7E,GACjD,SAAAA,EAAmBpwB,GAAsB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAqhF,IACvCrxE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAsBjhD,CAEzC,CAAC,OAAA7P,EAAAkhF,EAAA,CAHgD,CAFnDrhD,EAAAphC,EAAA,QAE2D+R,SAM3D/O,EAAAA,QAAey/E,uPCRf,IAEMC,EAA6C,SAAAF,GAAAv7E,EAAAy7E,EAAAF,GAAA,IAAAj5E,EAAArC,EAAAw7E,GACjD,SAAAA,EAAmBrwB,GAAsB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAshF,IACvCtxE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAsBjhD,CAEzC,CAAC,OAAA7P,EAAAmhF,EAAA,CAHgD,CAFnDthD,EAAAphC,EAAA,QAE2D+R,SAM3D/O,EAAAA,QAAe0/E,qICFAC,EAAuB,WACpC,SAAAA,EAAmBtwB,GAA6C,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAAuhF,GAA7C,KAAAtwB,SAAAA,EAMnB,KAAAtwD,OAAmD,SAAC69E,EAAiBhvE,GACnE,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CARmE,CAIlE,OAJmErP,EAAAohF,EAAA,EAAAnhF,IAAA,aAAAC,MAEpE,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,KAACo/E,CAAA,CALmC,GAYtC3/E,EAAAA,QAAe2/E,uPClBf,IAEMC,EAAgC,SAAAC,GAAA57E,EAAA27E,EAAAC,GAAA,IAAAt5E,EAAArC,EAAA07E,GACpC,SAAAA,EAAmBvwB,GAAmB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAwhF,IACpCxxE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAmBjhD,CAEtC,CAAC,OAAA7P,EAAAqhF,EAAA,CAHmC,CAFtCxhD,EAAAphC,EAAA,QAE8C+R,SAM9C/O,EAAAA,QAAe4/E,uPCRf,IAEME,EAAgC,SAAAD,GAAA57E,EAAA67E,EAAAD,GAAA,IAAAt5E,EAAArC,EAAA47E,GACpC,SAAAA,EAAmBzwB,GAAmB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAA0hF,IACpC1xE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAmBjhD,CAEtC,CAAC,OAAA7P,EAAAuhF,EAAA,CAHmC,CAFtC1hD,EAAAphC,EAAA,QAE8C+R,SAM9C/O,EAAAA,QAAe8/E,qICHAC,EAA+B,WAC5C,SAAAA,EAAmB1wB,GAAkC,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAA2hF,GAAlC,KAAA1wB,SAAAA,EAMnB,KAAAtwD,OAA2D,SACzD69E,EACAhvE,GAEA,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CAXwD,CAIvD,OAJwDrP,EAAAwhF,EAAA,EAAAvhF,IAAA,aAAAC,MAEzD,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,KAACw/E,CAAA,CAL2C,GAe9C//E,EAAAA,QAAe+/E,uPCpBf,IAEMC,EAAwC,SAAAC,GAAAh8E,EAAA+7E,EAAAC,GAAA,IAAA15E,EAAArC,EAAA87E,GAC5C,SAAAA,EAAmB3wB,GAA2B,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAA4hF,IAC5C5xE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAA2BjhD,CAE9C,CAAC,OAAA7P,EAAAyhF,EAAA,CAH2C,CAF9C5hD,EAAAphC,EAAA,QAEsD+R,SAMtD/O,EAAAA,QAAeggF,2MCHf,IAAA7iF,EAAAH,EAAA,OAEekjF,EAA4B,WACzC,SAAAA,EAAmB7wB,GAA+B,IAAAjhD,EAAA,KAAAhQ,EAAA,KAAA8hF,GAA/B,KAAA7wB,SAAAA,EAqBnB,KAAAtwD,OAAgE,SAC9D69E,EACAhvE,GAEA,OAAOQ,EAAKihD,SAAStD,UAAUsC,mBAAmBuuB,EAAYhvE,EAChE,CA1BqD,CAkCpD,OAlCqDrP,EAAA2hF,EAAA,EAAA1hF,IAAA,aAAAC,MAEtD,WACE,OAAO,KAAK4wD,SAAS9uD,OACvB,GAAC,CAAA/B,IAAA,cAAAC,MAAA,eAAA0hF,EAAAh8E,EAAAL,IAAAQ,MAED,SAAAC,EACEG,EACAmU,GAAkC,IAAAw5B,EAAA,OAAAvuC,IAAAoB,MAAA,SAAAK,GAAA,cAAAA,EAAAH,KAAAG,EAAAF,MAAA,WAE9BwT,GAAYA,EAAQ8yB,SAAQ,CAAApmC,EAAAF,KAAA,eAAAE,EAAAF,KAAA,EACL,KAAKy8C,YAAY,cAAe,CAACp9C,GAAK0O,EAAA,GAAOyF,IAAU,OAAhFA,EAAQ8yB,SAAQpmC,EAAAO,KAAA,cAAAP,EAAAF,KAAA,EAEO,KAAKgqD,SAAS9O,YAAY77C,EAAMmU,GAAQ,OAAjD,OAAVw5B,EAAU9sC,EAAAO,KAAAP,EAAA8I,OAAA,UACT,EAAAlR,EAAAggF,YAAW9qC,EAAYx5B,IAAQ,wBAAAtT,EAAAM,OAAA,GAAAtB,EAAA,UACvC,gBAAA2C,EAAAC,GAAA,OAAAg5E,EAAA/5E,MAAA,KAAAxI,UAAA,EAXA,IAWA,CAAAY,IAAA,iBAAAC,MAAA,eAAA2hF,EAAAj8E,EAAAL,IAAAQ,MAED,SAAAs4B,EAAqB5rB,GAAe,OAAAlN,IAAAoB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkJ,OAAA,SAC3B,KAAKghD,SAASgxB,eAAervE,IAAQ,wBAAA7L,EAAAU,OAAA,GAAA+2B,EAAA,UAC7C,gBAAAx1B,GAAA,OAAAg5E,EAAAh6E,MAAA,KAAAxI,UAAA,EAJA,IAIA,CAAAY,IAAA,cAAAC,MAAA,eAAA60D,EAAAnvD,EAAAL,IAAAQ,MASD,SAAAkgC,EACEo4C,EACAhvE,EACAiL,GAAiC,IAAAykE,EAAA,OAAAx5E,IAAAoB,MAAA,SAAAu/B,GAAA,cAAAA,EAAAr/B,KAAAq/B,EAAAp/B,MAAA,cAAAo/B,EAAAp/B,KAAA,GAElBi4E,EAAA,KAAKjuB,SAASvN,aAAoB86B,GAAWx2E,MAAAk3E,EAAA1nD,EAAIhoB,GAAMlM,OAAA,CAAEmX,KAAQ,cAAA4rB,EAAAp2B,OAAA,SAAAo2B,EAAA3+B,KAAEi8C,YAAQ,wBAAAtd,EAAA5+B,OAAA,GAAA2+B,EAAA,UAC3F,gBAAA0C,EAAAgB,EAAAK,GAAA,OAAA+qB,EAAAltD,MAAA,KAAAxI,UAAA,EAfA,MAeAsiF,CAAA,CAnCwC,GAsC3ClgF,EAAAA,QAAekgF,uPC7Cf,IAEMI,EAAqC,SAAAC,GAAAt8E,EAAAq8E,EAAAC,GAAA,IAAAh6E,EAAArC,EAAAo8E,GACzC,SAAAA,EAAmBjxB,GAAwB,IAAAjhD,EAAA,OAAAhQ,EAAA,KAAAkiF,IACzClyE,EAAA7H,EAAAf,KAAA,KAAM6pD,IADWA,SAAAA,EAAwBjhD,CAE3C,CAAC,OAAA7P,EAAA+hF,EAAA,CAHwC,CAF3CliD,EAAAphC,EAAA,QAEmD+R,SAMnD/O,EAAAA,QAAesgF,8aCNf,IAAAE,EAAAxjF,EAAA,OACAyjF,EAAAzjF,EAAA,OACA0jF,EAAA1jF,EAAA,OACA2jF,EAAA3jF,EAAA,OACA4jF,EAAA5jF,EAAA,OACA6jF,EAAA7jF,EAAA,OACA8jF,EAAA9jF,EAAA,OACA+jF,EAAA/jF,EAAA,MACAgkF,EAAAhkF,EAAA,OACAikF,EAAAjkF,EAAA,OACAkkF,EAAAlkF,EAAA,OACAmkF,EAAAnkF,EAAA,OACAokF,EAAApkF,EAAA,OACAqkF,EAAAjjD,EAAAphC,EAAA,QACAskF,EAAAljD,EAAAphC,EAAA,QACAukF,EAAAnjD,EAAAphC,EAAA,QACAwkF,EAAApjD,EAAAphC,EAAA,QACAykF,EAAArjD,EAAAphC,EAAA,QACA0kF,EAAAtjD,EAAAphC,EAAA,QACA2kF,EAAAvjD,EAAAphC,EAAA,QACA4kF,EAAAxjD,EAAAphC,EAAA,QACA6kF,EAAAzjD,EAAAphC,EAAA,QACA8kF,EAAA1jD,EAAAphC,EAAA,QACA+kF,EAAA3jD,EAAAphC,EAAA,QACAglF,EAAA5jD,EAAAphC,EAAA,QACAilF,EAAA7jD,EAAAphC,EAAA,QAEAgD,EAAAA,wBAAA,SACE+gC,EACA6mB,EACA4c,GAMA,IAAIvgC,EACJ,OAAQlD,GACN,IAAK,QAEH,OADAkD,EAAe88C,EAAAmB,qBAAsB99B,QAAQwD,EAAiB4c,GACvD,IAAIkd,EAAA3yE,QAAiCk1B,GAC9C,IAAK,QAEH,OADAA,EAAe48C,EAAAqB,qBAAsB99B,QAAQwD,EAAiB4c,GACvD,IAAIid,EAAA1yE,QAAiCk1B,GAC9C,IAAK,QAEH,OADAA,EAAey8C,EAAAwB,qBAAsB99B,QAAQwD,EAAiB4c,GACvD,IAAIgd,EAAAzyE,QAAiCk1B,GAC9C,IAAK,QAEH,OADAA,EAAeu8C,EAAA0B,qBAAsB99B,QAAQwD,EAAiB4c,GACvD,IAAI+c,EAAAxyE,QAAiCk1B,GAC9C,QACE,MAAM,IAAIvlC,MAAM,wBAEtB,EAEAsB,EAAAA,gDAAA,SACE+gC,EACA6mB,EACA4c,GAEA,IAAI2d,EACJ,OAAQphD,GACN,IAAK,QACL,IAAK,QACL,IAAK,QAKH,OAJAohD,EAAuCrB,EAAAsB,wCAAoCh+B,QACzEwD,EACA4c,GAEK,IAAI6c,EAAAtyE,QAA2CozE,GACxD,QACE,MAAM,IAAIzjF,MAAM,wBAEtB,EAEAsB,EAAAA,6BAAA,SACE+gC,EACA6mB,EACA4c,GAEA,IAAIngC,EACJ,OAAQtD,GACN,IAAK,QAEH,OADAsD,EAAoB48C,EAAAoB,oBAAiBj+B,QAAQwD,EAAiB4c,GACvD,IAAIud,EAAAhzE,QAAgCs1B,GAC7C,IAAK,QACL,IAAK,QACL,IAAK,QAEH,OADAA,EAAoBs8C,EAAA0B,oBAAiBj+B,QAAQwD,EAAiB4c,GACvD,IAAIsd,EAAA/yE,QAAgCs1B,GAC7C,QACE,MAAM,IAAI3lC,MAAM,wBAEtB,EAEAsB,EAAAA,qCAAA,SACE+gC,EACA6mB,EACA4c,GAEA,IAAIlgC,EACJ,OAAQvD,GACN,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QAKH,OAJAuD,EAA4B08C,EAAAsB,8BAAyBl+B,QACnDwD,EACA4c,GAEK,IAAIwd,EAAAjzE,QAAwCu1B,GACrD,QACE,MAAM,IAAI5lC,MAAM,wBAEtB,EAEAsB,EAAAA,oCAAA,SACE+gC,EACA6mB,EACA4c,GAKA,IAAI+d,EACJ,OAAQxhD,GACN,IAAK,QAKH,OAJAwhD,EAAiCrB,EAAAsB,uBAAwBp+B,QACvDwD,EACA4c,GAEK,IAAIqd,EAAA9yE,QAA6CwzE,GAC1D,IAAK,QACL,IAAK,QAKH,OAJAA,EAAiC3B,EAAA4B,uBAAwBp+B,QACvDwD,EACA4c,GAEK,IAAIod,EAAA7yE,QAA6CwzE,GAC1D,IAAK,QAKH,OAJAA,EAAiC9B,EAAA+B,uBAAwBp+B,QACvDwD,EACA4c,GAEK,IAAImd,EAAA5yE,QAA6CwzE,GAC1D,QACE,MAAM,IAAI7jF,MAAM,wBAEtB,EAEAsB,EAAAA,kCAAA,SACE+gC,EACA6mB,EACA4c,GAEA,IAAIttB,EACJ,GACO,UADCnW,EAGJ,OADAmW,EAAyBiqC,EAAAsB,0BAAsBr+B,QAAQwD,EAAiB4c,GACjE,IAAIyd,EAAAlzE,QAAqCmoC,GAEhD,MAAM,IAAIx4C,MAAM,uBAEtB,EAEAsB,EAAAA,8BAAA,SACE+gC,EACA6mB,EACA4c,GAEA,IAAIhtB,EACJ,OAAQzW,GACN,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QAEH,OADAyW,EAAqB4pC,EAAAsB,qBAAkBt+B,QAAQwD,EAAiB4c,GACzD,IAAI8c,EAAAvyE,QAAiCyoC,GAC9C,QACE,MAAM,IAAI94C,MAAM,wBAEtB,2KvGvLA,IAAAikF,EAAAvkD,EAAAphC,EAAA,QAGAgD,EAAAA,QAAe2iF,EAAA5zE,iJgBJF/O,EAAAA,aAAY,KAAA0B,OAAQ,IAAI89C,OAAO,KAC/Bx/C,EAAAA,WAAa,KACbA,EAAAA,iBAAmB,qLCEhCA,EAAAA,WAAA,SAA2By/C,EAAcC,GACvC,OAAOD,EAAKh/C,gBAAkBi/C,EAAKj/C,aACrC,EAEAT,EAAAA,WAAA,SACE4iF,EACA/pE,GAEA,MAAO,CACLhY,KAAM+hF,EAAoB/hF,KAC1BgY,QAAAA,EACA+pE,oBAAAA,EAEJ,EAEA5iF,EAAAA,kBAAA,SAAkC+/C,GAChC,YAAiEjiD,IAAzDiiD,EAAsCnW,cAChD,sCuFnBA,IAAAxrC,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,uFAEA,IAAAimD,EAAAjmD,EAAA,OAIMynE,EAAO,CACX,CACEoe,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,aACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,4BACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,QACNpR,KAAM,YAGVoR,KAAM,UACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,UAGVoR,KAAM,4BACNwkD,QAAS,CACP,CACExkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,SACNpR,KAAM,YAGVoR,KAAM,eACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,aACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,GACNpR,KAAM,WAER,CACEoR,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,cACNpR,KAAM,YAGVoR,KAAM,mBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,mBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,YACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,OACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,QACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,aACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,oBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,mBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,aACNpR,KAAM,WAER,CACEoR,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,YACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,YAGVoR,KAAM,YACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,eACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,YACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,aACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,UACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE6zE,SAAS,EACThe,gBAAiB,UACjB71D,KAAM,YAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,kBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,aACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,eACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,YACNpR,KAAM,YAGVoR,KAAM,mBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,iBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTtkD,KAAM,cACNpR,KAAM,YAGVoR,KAAM,mBACNpR,KAAM,SAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,UACNpR,KAAM,aAER,CACEoR,KAAM,aACNpR,KAAM,WAER,CACEoR,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,eACNpR,KAAM,WAER,CACEoR,KAAM,UACNpR,KAAM,WAER,CACEoR,KAAM,kBACNpR,KAAM,YAGVoR,KAAM,QACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,WAER,CACEoR,KAAM,UACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,iBACNpR,KAAM,WAER,CACEoR,KAAM,aACNpR,KAAM,UAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACExkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,UAGVoR,KAAM,gBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,gBACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,QACNpR,KAAM,UAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,QACNpR,KAAM,SAER,CACEoR,KAAM,aACNpR,KAAM,UAGVoR,KAAM,mBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,UACNpR,KAAM,UAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,WAER,CACEoR,KAAM,UACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,iBACNpR,KAAM,WAER,CACEoR,KAAM,SACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,CACP,CACExkD,KAAM,GACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEtuC,KAAM,KACNpR,KAAM,WAER,CACEoR,KAAM,QACNpR,KAAM,WAER,CACEoR,KAAM,OACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,SAER,CACEoR,KAAM,YACNpR,KAAM,WAER,CACEoR,KAAM,UACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAAM,WAER,CACEoR,KAAM,WACNpR,KAA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AAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGVoR,KAAM,mBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,kBACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,eACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,4BACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,sCACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,QAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,aACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,sBACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,QACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,OACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,YACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,eACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,UACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,QACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,YACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,YACdvkD,KAAM,UACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,kBACNpR,KAAM,YAGVoR,KAAM,QACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,gBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,QACNpR,KAAM,UAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,QACNpR,KAAM,SAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,mBACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,UACNpR,KAAM,UAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,aAIGizE,EAAoB,oBAAAA,IAAA9jF,EAAA,KAAA8jF,EAAA,CAU9B,OAV8B3jF,EAAA2jF,EAAA,OAAA1jF,IAAA,kBAAAC,MAE/B,WACE,OAAO,IAAIwkD,EAAAphD,MAAM2vD,UAAUiT,EAC7B,GAAC,CAAAjmE,IAAA,UAAAC,MACD,SACE8B,EACAikE,GAEA,OAAO,IAAIvhB,EAAA4K,SAASttD,EAASkkE,EAAMD,EACrC,KAAC0d,CAAA,CAV8B,GAAjCliF,EAAAA,qBAAAkiF,EACkBA,EAAAl0B,IAAMyW,sCC39BxB,IAAArmE,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,sFAEA,IAAAimD,EAAAjmD,EAAA,OAIMynE,EAAO,CACX,CACE9V,OAAQ,GACRm0B,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,eAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,eACNpR,KAAM,UAGVoR,KAAM,YACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,aAIGozE,EAAmB,oBAAAA,IAAAjkF,EAAA,KAAAikF,EAAA,CAU7B,OAV6B9jF,EAAA8jF,EAAA,OAAA7jF,IAAA,kBAAAC,MAE9B,WACE,OAAO,IAAIwkD,EAAAphD,MAAM2vD,UAAUiT,EAC7B,GAAC,CAAAjmE,IAAA,UAAAC,MACD,SACE8B,EACAikE,GAEA,OAAO,IAAIvhB,EAAA4K,SAASttD,EAASkkE,EAAMD,EACrC,KAAC6d,CAAA,CAV6B,GAAhCriF,EAAAA,oBAAAqiF,EACkBA,EAAAr0B,IAAMyW,sCC/BxB,IAAArmE,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,yFAEA,IAAAimD,EAAAjmD,EAAA,OAIMynE,EAAO,CACX,CACEC,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,2BACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,gBACNpR,KAAM,SAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,UAGVoR,KAAM,cACNwkD,QAAS,CACP,CACED,aAAc,2BACdvkD,KAAM,QACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,mBACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,oBACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,cACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,YAGVoR,KAAM,uBACNwkD,QAAS,CACP,CACED,aAAc,2BACdvkD,KAAM,QACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,cACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,kCACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,0BACNwkD,QAAS,CACP,CACED,aAAc,2BACdvkD,KAAM,QACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,cACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,YAGVoR,KAAM,uCACNwkD,QAAS,CACP,CACED,aAAc,2BACdvkD,KAAM,QACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,aAIGuzE,EAAsB,oBAAAA,IAAApkF,EAAA,KAAAokF,EAAA,CAUhC,OAVgCjkF,EAAAikF,EAAA,OAAAhkF,IAAA,kBAAAC,MAEjC,WACE,OAAO,IAAIwkD,EAAAphD,MAAM2vD,UAAUiT,EAC7B,GAAC,CAAAjmE,IAAA,UAAAC,MACD,SACE8B,EACAikE,GAEA,OAAO,IAAIvhB,EAAA4K,SAASttD,EAASkkE,EAAMD,EACrC,KAACge,CAAA,CAVgC,GAAnCxiF,EAAAA,uBAAAwiF,EACkBA,EAAAx0B,IAAMyW,sCCjLxB,IAAArmE,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,uFAEA,IAAAimD,EAAAjmD,EAAA,OAIMynE,EAAO,CACX,CACE9V,OAAQ,GACRm0B,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,eAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,aACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAER,CACE01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,cACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,oBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,YACNpR,KAAM,YAGVoR,KAAM,mBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,iBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAER,CACE01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,mBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,6BACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,6BACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAER,CACE01D,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,mBACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,eACNpR,KAAM,SAER,CACEy1D,WAAW,EACX/V,OAAQ,CACN,CACEgW,SAAS,EACTC,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,UACNpR,KAAM,SAER,CACE6zE,SAAS,EACThe,gBAAiB,UACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,OACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,UACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,cACNpR,KAAM,YAGVoR,KAAM,mBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,kBACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,eACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,4BACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,sCACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,QAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,aACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,sBACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,QACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,OACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,YACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,eACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,kBACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,UACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,GACRtuC,KAAM,QACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,YACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,YACdvkD,KAAM,UACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,kBACNpR,KAAM,YAGVoR,KAAM,QACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV6zE,SAAS,EACThe,gBAAiB,UACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,gBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,QACNpR,KAAM,UAGVoR,KAAM,cACNwkD,QAAS,GACTie,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,QACNpR,KAAM,SAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,mBACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV6zE,SAAS,EACThe,gBAAiB,aACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,UACNpR,KAAM,UAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,YAER,CACE4zE,UAAU,EACVl0B,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV6zE,SAAS,EACThe,gBAAiB,OACjB71D,KAAM,aAIGizE,EAAoB,oBAAAA,IAAA9jF,EAAA,KAAA8jF,EAAA,CAU9B,OAV8B3jF,EAAA2jF,EAAA,OAAA1jF,IAAA,kBAAAC,MAE/B,WACE,OAAO,IAAIwkD,EAAAphD,MAAM2vD,UAAUiT,EAC7B,GAAC,CAAAjmE,IAAA,UAAAC,MACD,SACE8B,EACAikE,GAEA,OAAO,IAAIvhB,EAAA4K,SAASttD,EAASkkE,EAAMD,EACrC,KAAC0d,CAAA,CAV8B,GAAjCliF,EAAAA,qBAAAkiF,EACkBA,EAAAl0B,IAAMyW,sCCh/BxB,IAAArmE,EAAApB,EAAAA,OAAAA,QAAAuB,EAAAvB,EAAAA,OAAAA,0GAEA,IAAAimD,EAAAjmD,EAAA,OAOMynE,EAAO,CACX,CACE9V,OAAQ,GACRtuC,KAAM,OACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,UACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,UACNpR,KAAM,UAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,sBACdvkD,KAAM,OACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,UACNpR,KAAM,UAGVoR,KAAM,wBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,aACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,mBACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,QACdvkD,KAAM,QACNpR,KAAM,SAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,mBACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,YACdvkD,KAAM,GACNpR,KAAM,aAER,CACE21D,aAAc,YACdvkD,KAAM,GACNpR,KAAM,aAER,CACE21D,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGVoR,KAAM,yBACNwkD,QAAS,CACP,CACED,aAAc,SACdvkD,KAAM,GACNpR,KAAM,WAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,GACNpR,KA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AAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,gBACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,qBACNpR,KAAM,YAGVoR,KAAM,mBACNwkD,QAAS,GACTC,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,kBACNwkD,QAAS,GACTC,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,gBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,eACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,wBACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV61D,gBAAiB,UACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,4BACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,SAGV61D,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,sCACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,UACNpR,KAAM,QAER,CACE21D,aAAc,QACdvkD,KAAM,aACNpR,KAAM,UAGV61D,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,aACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,YAGVoR,KAAM,sBACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,QACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,OACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,YACNwkD,QAAS,CACP,CACED,aAAc,YACdvkD,KAAM,GACNpR,KAAM,cAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,SACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,eACNwkD,QAAS,CACP,CACED,aAAc,QACdvkD,KAAM,GACNpR,KAAM,UAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,eACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,WACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,iBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,SACNpR,KAAM,YAGVoR,KAAM,kBACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,UACNwkD,QAAS,CACP,CACED,aAAc,OACdvkD,KAAM,GACNpR,KAAM,SAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,GACRtuC,KAAM,QACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,OACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,YACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,YAGVoR,KAAM,cACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,QACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,sBACdvkD,KAAM,YACNpR,KAAM,UAGVoR,KAAM,gBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,UACNpR,KAAM,YAGVoR,KAAM,qBACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,QACNpR,KAAM,YAGVoR,KAAM,WACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,YACdvkD,KAAM,UACNpR,KAAM,aAER,CACE21D,aAAc,UACdvkD,KAAM,aACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,KACNpR,KAAM,WAER,CACE21D,aAAc,QACdvkD,KAAM,OACNpR,KAAM,SAER,CACE21D,aAAc,UACdvkD,KAAM,kBACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,eACNpR,KAAM,WAER,CACE21D,aAAc,UACdvkD,KAAM,UACNpR,KAAM,WAER,CACE21D,aAAc,kBACdvkD,KAAM,kBACNpR,KAAM,YAGVoR,KAAM,QACNwkD,QAAS,GACTC,gBAAiB,aACjB71D,KAAM,YAER,CACE0/C,OAAQ,CACN,CACEiW,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGVoR,KAAM,iBACNwkD,QAAS,CACP,CACED,aAAc,UACdvkD,KAAM,GACNpR,KAAM,YAGV61D,g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EACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINyyE,IAAK,CACHW,IAAK,EACLpzE,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,m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","sources":["../node_modules/@ethereumjs/util/src/account.ts","../node_modules/@ethereumjs/util/src/address.ts","../node_modules/@ethereumjs/util/src/asyncEventEmitter.ts","../node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@ethereumjs/util/src/encoding.ts","../node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@ethereumjs/util/src/index.ts","../node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@ethereumjs/util/src/lock.ts","../node_modules/@ethereumjs/util/src/provider.ts","../node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@ethereumjs/util/src/types.ts","../node_modules/@ethereumjs/util/src/units.ts","../node_modules/@ethereumjs/util/src/withdrawal.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@ethereumjs/util/node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/crypto.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/hmac.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/sha256.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/sha3.ts","../node_modules/@ethereumjs/util/node_modules/@noble/hashes/src/utils.ts","../node_modules/@ethereumjs/util/node_modules/ethereum-cryptography/keccak.js","../node_modules/@ethereumjs/util/node_modules/ethereum-cryptography/secp256k1.js","../node_modules/@ethereumjs/util/node_modules/ethereum-cryptography/utils.js","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/@noble/hashes/src/utils.ts","../../../src/index.ts","../../../src/types.ts","../../../../src/eip-3770/config.ts","../../../../src/eip-3770/index.ts","../../../../src/eip-712/index.ts","../../../src/safeVersions.ts","../../../src/Safe.ts","../../../../src/contracts/config.ts","../../../../src/contracts/safeDeploymentContracts.ts","../../../../src/managers/contractManager.ts","../../../../src/managers/fallbackHandlerManager.ts","../../../../src/managers/guardManager.ts","../../../../src/managers/moduleManager.ts","../../../../src/managers/ownerManager.ts","../../../../src/safeFactory/index.ts","../../../../src/safeFactory/utils.ts","../../../../src/utils/constants.ts","../../../../src/utils/index.ts","../../../../../src/utils/signatures/SafeSignature.ts","../../../../../src/utils/signatures/index.ts","../../../../../src/utils/transactions/SafeTransaction.ts","../../../../../src/utils/transactions/gas.ts","../../../../../src/utils/transactions/utils.ts","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/adapters.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/contract.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/index.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/paymaster-utils.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/provider.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/signer.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/types.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/utils.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/src/wallet.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IAllowListFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IERC20MetadataFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IEthTokenFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IL1BridgeFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IL2BridgeFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/IZkSyncFactory.js","../node_modules/@safe-global/safe-core-sdk/node_modules/zksync-web3/build/typechain/index.js","../node_modules/@safe-global/safe-deployments/dist/accessors.js","../node_modules/@safe-global/safe-deployments/dist/factories.js","../node_modules/@safe-global/safe-deployments/dist/handler.js","../node_modules/@safe-global/safe-deployments/dist/index.js","../node_modules/@safe-global/safe-deployments/dist/libs.js","../node_modules/@safe-global/safe-deployments/dist/safes.js","../node_modules/@safe-global/safe-deployments/dist/types.js","../node_modules/@safe-global/safe-deployments/dist/utils.js","../../../src/service.ts","../../../src/signer.ts","../../../src/utils.ts","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/index.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/adapters/xhr.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/axios.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/cancel/CanceledError.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/cancel/isCancel.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/Axios.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/AxiosError.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/buildFullPath.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/mergeConfig.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/settle.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/core/transformData.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/defaults/index.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/defaults/transitional.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/env/data.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/bind.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/buildURL.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/cookies.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/null.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/spread.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/toFormData.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/helpers/validator.js","../node_modules/@safe-global/safe-ethers-adapters/node_modules/axios/lib/utils.js","../../../src/EthersAdapter.ts","../../../../../src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerEthersContract.ts","../../../../../../src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandler_V1_3_0_Ethers.ts","../../../../../src/contracts/CreateCall/CreateCallEthersContract.ts","../../../../../../src/contracts/CreateCall/v1.3.0/CreateCallEthersContract_V1_3_0_Ethers.ts","../../../../../src/contracts/GnosisSafe/GnosisSafeContractEthers.ts","../../../../../../src/contracts/GnosisSafe/v1.0.0/GnosisSafeContract_V1_0_0_Ethers.ts","../../../../../../src/contracts/GnosisSafe/v1.1.1/GnosisSafeContract_V1_1_1_Ethers.ts","../../../../../../src/contracts/GnosisSafe/v1.2.0/GnosisSafeContract_V1_2_0_Ethers.ts","../../../../../../src/contracts/GnosisSafe/v1.3.0/GnosisSafeContract_V1_3_0_Ethers.ts","../../../../../src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.ts","../../../../../../src/contracts/GnosisSafeProxyFactory/v1.0.0/GnosisSafeProxyFactoryContract_V1_0_0_Ethers.ts","../../../../../../src/contracts/GnosisSafeProxyFactory/v1.1.1/GnosisSafeProxyFactoryContract_V1_1_1_Ethers.ts","../../../../../../src/contracts/GnosisSafeProxyFactory/v1.3.0/GnosisSafeProxyFactoryContract_V1_3_0_Ethers.ts","../../../../../src/contracts/MultiSend/MultiSendEthersContract.ts","../../../../../../src/contracts/MultiSend/v1.1.1/MultiSendContract_V1_1_1_Ethers.ts","../../../../../../src/contracts/MultiSend/v1.3.0/MultiSendContract_V1_3_0_Ethers.ts","../../../../../src/contracts/MultiSendCallOnly/MultiSendCallOnlyEthersContract.ts","../../../../../../src/contracts/MultiSendCallOnly/v1.3.0/MultiSendCallOnlyContract_V1_3_0_Ethers.ts","../../../../../src/contracts/SignMessageLib/SignMessageLibEthersContract.ts","../../../../../../src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_V1_3_0_Ethers.ts","../../../../src/contracts/contractInstancesEthers.ts","../../../../../../../typechain/src/ethers-v5/v1.0.0/factories/Gnosis_safe__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.0.0/factories/Proxy_factory__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.1.1/factories/Gnosis_safe__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.1.1/factories/Multi_send__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.1.1/factories/Proxy_factory__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.2.0/factories/Gnosis_safe__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Compatibility_fallback_handler__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Create_call__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Gnosis_safe__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Multi_send_call_only__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Proxy_factory__factory.ts","../../../../../../../typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory.ts","../node_modules/Base64/base64.js","../node_modules/brorand/index.js","../node_modules/cipher-base/index.js","../node_modules/create-hash/browser.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../node_modules/emitter-component/index.js","../node_modules/ethereum-bloom-filters/dist/index.js","../node_modules/ethereum-bloom-filters/dist/utils.js","../node_modules/ethereum-cryptography/src/hash-utils.ts","../node_modules/ethereum-cryptography/src/keccak.ts","../node_modules/ethereum-cryptography/src/random.ts","../node_modules/ethereum-cryptography/src/secp256k1.ts","../node_modules/ethereumjs-util/src/account.ts","../node_modules/ethereumjs-util/src/address.ts","../node_modules/ethereumjs-util/src/bytes.ts","../node_modules/ethereumjs-util/src/constants.ts","../node_modules/ethereumjs-util/src/externals.ts","../node_modules/ethereumjs-util/src/hash.ts","../node_modules/ethereumjs-util/src/helpers.ts","../node_modules/ethereumjs-util/src/index.ts","../node_modules/ethereumjs-util/src/internal.ts","../node_modules/ethereumjs-util/src/object.ts","../node_modules/ethereumjs-util/src/signature.ts","../node_modules/ethereumjs-util/src/types.ts","../node_modules/ethjs-unit/lib/index.js","../node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js","../node_modules/hash-base/index.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/http/index.js","../node_modules/http/lib/request.js","../node_modules/http/lib/response.js","../node_modules/https/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/md5.js/index.js","../node_modules/micro-ftch/index.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","../node_modules/number-to-bn/src/index.js","../node_modules/randombytes/browser.js","../node_modules/ripemd160/index.js","../node_modules/secp256k1/elliptic.js","../node_modules/secp256k1/lib/elliptic.js","../node_modules/secp256k1/lib/index.js","../node_modules/stream/index.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/utf8/utf8.js","../node_modules/web3-utils/lib/index.js","../node_modules/web3-utils/lib/soliditySha3.js","../node_modules/web3-utils/lib/utils.js","../node_modules/web3-utils/node_modules/@noble/hashes/src/_assert.ts","../node_modules/web3-utils/node_modules/@noble/hashes/src/_u64.ts","../node_modules/web3-utils/node_modules/@noble/hashes/src/crypto.ts","../node_modules/web3-utils/node_modules/@noble/hashes/src/sha3.ts","../node_modules/web3-utils/node_modules/@noble/hashes/src/utils.ts","../node_modules/web3-utils/node_modules/ethereum-cryptography/keccak.js","../node_modules/web3-utils/node_modules/ethereum-cryptography/utils.js","../node_modules/zlib/lib/binding.js","../node_modules/zlib/lib/index.js","../node_modules/zlib/node_modules/pako/lib/utils/common.js","../node_modules/zlib/node_modules/pako/lib/zlib/adler32.js","../node_modules/zlib/node_modules/pako/lib/zlib/constants.js","../node_modules/zlib/node_modules/pako/lib/zlib/crc32.js","../node_modules/zlib/node_modules/pako/lib/zlib/deflate.js","../node_modules/zlib/node_modules/pako/lib/zlib/inffast.js","../node_modules/zlib/node_modules/pako/lib/zlib/inflate.js","../node_modules/zlib/node_modules/pako/lib/zlib/inftrees.js","../node_modules/zlib/node_modules/pako/lib/zlib/messages.js","../node_modules/zlib/node_modules/pako/lib/zlib/trees.js","../node_modules/zlib/node_modules/pako/lib/zlib/zstream.js","../node_modules/@babel/runtime/helpers/asyncIterator.js","../node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js"],"sourcesContent":["import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(\n    secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n  )\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nasync function runInSeries(\n  context: any,\n  tasks: Array<(data: unknown, callback?: (error?: Error) => void) => void>,\n  data: unknown\n): Promise<void> {\n  let error: Error | undefined\n  for await (const task of tasks) {\n    try {\n      if (task.length < 2) {\n        //sync\n        task.call(context, data)\n      } else {\n        await new Promise<void>((resolve, reject) => {\n          task.call(context, data, (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }\n    } catch (e: unknown) {\n      error = e as Error\n    }\n  }\n  if (error) {\n    throw error\n  }\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n    runInSeries(self, listeners.slice(), data).then(callback).catch(callback)\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n","import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n","import { Buffer } from 'buffer'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n","// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nexport const hasTerminator = (nibbles: Uint8Array) => {\n  return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16\n}\n\nexport const nibblesToBytes = (nibbles: Uint8Array, bytes: Uint8Array) => {\n  for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n    bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1]\n  }\n}\n\nexport const nibblesToCompactBytes = (nibbles: Uint8Array) => {\n  let terminator = 0\n  if (hasTerminator(nibbles)) {\n    terminator = 1\n    // Remove the terminator from the sequence\n    nibbles = nibbles.subarray(0, nibbles.length - 1)\n  }\n  const buf = new Uint8Array(nibbles.length / 2 + 1)\n  // Shift the terminator info into the first nibble of buf[0]\n  buf[0] = terminator << 5\n  // If odd length, then add that flag into the first nibble and put the odd nibble to\n  // second part of buf[0] which otherwise will be left padded with a 0\n  if ((nibbles.length & 1) === 1) {\n    buf[0] |= 1 << 4\n    buf[0] |= nibbles[0]\n    nibbles = nibbles.subarray(1)\n  }\n  // create bytes out of the rest even nibbles\n  nibblesToBytes(nibbles, buf.subarray(1))\n  return buf\n}\n\nexport const bytesToNibbles = (str: Uint8Array) => {\n  const l = str.length * 2 + 1\n  const nibbles = new Uint8Array(l)\n  for (let i = 0; i < str.length; i++) {\n    const b = str[i]\n    nibbles[i * 2] = b / 16\n    nibbles[i * 2 + 1] = b % 16\n  }\n  // This will get removed from calling function if the first nibble\n  // indicates that terminator is not present\n  nibbles[l - 1] = 16\n  return nibbles\n}\n\nexport const compactBytesToNibbles = (compact: Uint8Array) => {\n  if (compact.length === 0) {\n    return compact\n  }\n  let base = bytesToNibbles(compact)\n  // delete terminator flag if terminator flag was not in first nibble\n  if (base[0] < 2) {\n    base = base.subarray(0, base.length - 1)\n  }\n  // chop the terminator nibble and the even padding (if there is one)\n  // i.e.  chop 2 left nibbles when even else 1 when odd\n  const chop = 2 - (base[0] & 1)\n  return base.subarray(chop)\n}\n\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Units helpers\n */\nexport * from './units'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Helper function for working with compact encoding\n */\nexport * from './encoding'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\nexport * from './provider'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n","import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = Buffer.from(buf.slice(0, 32))\n  const s = Buffer.from(buf.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return Buffer.from(senderPubKey.toRawBytes(false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n","import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n","import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in Gwei 8 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toValue() {\n    return {\n      index: this.index,\n      validatorIndex: this.validatorIndex,\n      address: this.address.buf,\n      amount: this.amount,\n    }\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport type { CHash } from './utils.js';\nimport { bytesToNumberBE, isBytes, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (isBytes(dst)) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  let res = new Uint8Array(sum);\n  let pad = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!ut.isBytes(data)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n  isLE,\n  byteSwap32,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdapterL2 = exports.AdapterL1 = void 0;\nconst ethers_1 = require(\"ethers\");\nconst typechain_1 = require(\"../typechain\");\nconst utils_1 = require(\"./utils\");\nfunction AdapterL1(Base) {\n    return class Adapter extends Base {\n        _providerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _providerL1() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _signerL1() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        async getMainContract() {\n            const address = await this._providerL2().getMainContractAddress();\n            return typechain_1.IZkSyncFactory.connect(address, this._signerL1());\n        }\n        async getL1BridgeContracts() {\n            const addresses = await this._providerL2().getDefaultBridgeAddresses();\n            return {\n                erc20: typechain_1.IL1BridgeFactory.connect(addresses.erc20L1, this._signerL1())\n            };\n        }\n        async getBalanceL1(token, blockTag) {\n            token !== null && token !== void 0 ? token : (token = utils_1.ETH_ADDRESS);\n            if ((0, utils_1.isETH)(token)) {\n                return await this._providerL1().getBalance(await this.getAddress(), blockTag);\n            }\n            else {\n                const erc20contract = typechain_1.IERC20MetadataFactory.connect(token, this._providerL1());\n                return await erc20contract.balanceOf(await this.getAddress());\n            }\n        }\n        async l2TokenAddress(token) {\n            if (token == utils_1.ETH_ADDRESS) {\n                return utils_1.ETH_ADDRESS;\n            }\n            else {\n                const erc20Bridge = (await this.getL1BridgeContracts()).erc20;\n                return await erc20Bridge.l2TokenAddress(token);\n            }\n        }\n        async approveERC20(token, amount, overrides) {\n            if ((0, utils_1.isETH)(token)) {\n                throw new Error(\"ETH token can't be approved. The address of the token does not exist on L1.\");\n            }\n            let bridgeAddress = overrides === null || overrides === void 0 ? void 0 : overrides.bridgeAddress;\n            const erc20contract = typechain_1.IERC20MetadataFactory.connect(token, this._signerL1());\n            if (bridgeAddress == null) {\n                bridgeAddress = (await this._providerL2().getDefaultBridgeAddresses()).erc20L1;\n            }\n            else {\n                delete overrides.bridgeAddress;\n            }\n            return await erc20contract.approve(bridgeAddress, amount, overrides);\n        }\n        async getBaseCost(params) {\n            var _a, _b;\n            const zksyncContract = await this.getMainContract();\n            const parameters = { ...(0, utils_1.layer1TxDefaults)(), ...params };\n            (_a = parameters.gasPrice) !== null && _a !== void 0 ? _a : (parameters.gasPrice = await this._providerL1().getGasPrice());\n            (_b = parameters.gasPerPubdataByte) !== null && _b !== void 0 ? _b : (parameters.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            return ethers_1.BigNumber.from(await zksyncContract.l2TransactionBaseCost(parameters.gasPrice, parameters.gasLimit, parameters.gasPerPubdataByte));\n        }\n        async deposit(transaction) {\n            var _a;\n            const depositTx = await this.getDepositTx(transaction);\n            if (transaction.token == utils_1.ETH_ADDRESS) {\n                return this.requestExecute(depositTx);\n            }\n            else {\n                const bridgeContracts = await this.getL1BridgeContracts();\n                if (transaction.approveERC20) {\n                    const approveTx = await this.approveERC20(transaction.token, transaction.amount, {\n                        bridgeAddress: (_a = transaction.bridgeAddress) !== null && _a !== void 0 ? _a : bridgeContracts.erc20.address,\n                        ...transaction.approveOverrides\n                    });\n                    await approveTx.wait();\n                }\n                return await this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(depositTx));\n            }\n        }\n        async estimateGasDeposit(transaction) {\n            const depositTx = await this.getDepositTx(transaction);\n            if (transaction.token == utils_1.ETH_ADDRESS) {\n                return await this.estimateGasRequestExecute(depositTx);\n            }\n            else {\n                return await this._providerL1().estimateGas(depositTx);\n            }\n        }\n        async getDepositTx(transaction) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            const bridgeContracts = await this.getL1BridgeContracts();\n            if (transaction.bridgeAddress) {\n                bridgeContracts.erc20.attach(transaction.bridgeAddress);\n            }\n            const { ...tx } = transaction;\n            (_a = tx.to) !== null && _a !== void 0 ? _a : (tx.to = await this.getAddress());\n            (_b = tx.operatorTip) !== null && _b !== void 0 ? _b : (tx.operatorTip = ethers_1.BigNumber.from(0));\n            (_c = tx.overrides) !== null && _c !== void 0 ? _c : (tx.overrides = {});\n            (_d = tx.gasPerPubdataByte) !== null && _d !== void 0 ? _d : (tx.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            (_e = tx.l2GasLimit) !== null && _e !== void 0 ? _e : (tx.l2GasLimit = await (0, utils_1.estimateDefaultBridgeDepositL2Gas)(this._providerL1(), this._providerL2(), tx.token, tx.amount, tx.to, await this.getAddress(), tx.gasPerPubdataByte));\n            const { to, token, amount, operatorTip, overrides } = tx;\n            await insertGasPrice(this._providerL1(), overrides);\n            const gasPriceForEstimation = overrides.maxFeePerGas || overrides.gasPrice;\n            const zksyncContract = await this.getMainContract();\n            const baseCost = await zksyncContract.l2TransactionBaseCost(await gasPriceForEstimation, tx.l2GasLimit, tx.gasPerPubdataByte);\n            if (token == utils_1.ETH_ADDRESS) {\n                (_f = overrides.value) !== null && _f !== void 0 ? _f : (overrides.value = baseCost.add(operatorTip).add(amount));\n                return {\n                    contractAddress: to,\n                    calldata: '0x',\n                    l2Value: amount,\n                    // For some reason typescript can not deduce that we've already set the\n                    // tx.l2GasLimit\n                    l2GasLimit: tx.l2GasLimit,\n                    ...tx\n                };\n            }\n            else {\n                const args = [\n                    to,\n                    token,\n                    amount,\n                    tx.l2GasLimit,\n                    tx.gasPerPubdataByte\n                ];\n                (_g = overrides.value) !== null && _g !== void 0 ? _g : (overrides.value = baseCost.add(operatorTip));\n                await (0, utils_1.checkBaseCost)(baseCost, overrides.value);\n                // TODO: compatibility layer: using the old API which uses msg.sender as the\n                // refund recipient, to make the SDK compatible with the old contracts.\n                // const contract = bridgeContracts.erc20 as ethers.Contract;\n                return await bridgeContracts.erc20.populateTransaction.deposit(...args, overrides);\n            }\n        }\n        async _getWithdrawalLog(withdrawalHash, index = 0) {\n            const hash = ethers_1.ethers.utils.hexlify(withdrawalHash);\n            const receipt = await this._providerL2().getTransactionReceipt(hash);\n            const log = receipt.logs.filter((log) => log.address == utils_1.L1_MESSENGER_ADDRESS &&\n                log.topics[0] == ethers_1.ethers.utils.id('L1MessageSent(address,bytes32,bytes)'))[index];\n            return {\n                log,\n                l1BatchTxId: receipt.l1BatchTxIndex\n            };\n        }\n        async _getWithdrawalL2ToL1Log(withdrawalHash, index = 0) {\n            const hash = ethers_1.ethers.utils.hexlify(withdrawalHash);\n            const receipt = await this._providerL2().getTransactionReceipt(hash);\n            const messages = Array.from(receipt.l2ToL1Logs.entries()).filter(([_, log]) => log.sender == utils_1.L1_MESSENGER_ADDRESS);\n            const [l2ToL1LogIndex, l2ToL1Log] = messages[index];\n            return {\n                l2ToL1LogIndex,\n                l2ToL1Log\n            };\n        }\n        async finalizeWithdrawalParams(withdrawalHash, index = 0) {\n            const { log, l1BatchTxId } = await this._getWithdrawalLog(withdrawalHash, index);\n            const { l2ToL1LogIndex } = await this._getWithdrawalL2ToL1Log(withdrawalHash, index);\n            const sender = ethers_1.ethers.utils.hexDataSlice(log.topics[1], 12);\n            const proof = await this._providerL2().getLogProof(withdrawalHash, l2ToL1LogIndex);\n            const message = ethers_1.ethers.utils.defaultAbiCoder.decode(['bytes'], log.data)[0];\n            return {\n                l1BatchNumber: log.l1BatchNumber,\n                l2MessageIndex: proof.id,\n                l2TxNumberInBlock: l1BatchTxId,\n                message,\n                sender,\n                proof: proof.proof\n            };\n        }\n        async finalizeWithdrawal(withdrawalHash, index = 0, overrides) {\n            const { l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, sender, proof } = await this.finalizeWithdrawalParams(withdrawalHash, index);\n            if ((0, utils_1.isETH)(sender)) {\n                const contractAddress = await this._providerL2().getMainContractAddress();\n                const zksync = typechain_1.IZkSyncFactory.connect(contractAddress, this._signerL1());\n                return await zksync.finalizeEthWithdrawal(l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, proof, overrides !== null && overrides !== void 0 ? overrides : {});\n            }\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(sender, this._providerL2());\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(await l2Bridge.l1Bridge(), this._signerL1());\n            return await l1Bridge.finalizeWithdrawal(l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, proof, overrides !== null && overrides !== void 0 ? overrides : {});\n        }\n        async isWithdrawalFinalized(withdrawalHash, index = 0) {\n            const { log } = await this._getWithdrawalLog(withdrawalHash, index);\n            const { l2ToL1LogIndex } = await this._getWithdrawalL2ToL1Log(withdrawalHash, index);\n            const sender = ethers_1.ethers.utils.hexDataSlice(log.topics[1], 12);\n            // `getLogProof` is called not to get proof but\n            // to get the index of the corresponding L2->L1 log,\n            // which is returned as `proof.id`.\n            const proof = await this._providerL2().getLogProof(withdrawalHash, l2ToL1LogIndex);\n            if ((0, utils_1.isETH)(sender)) {\n                const contractAddress = await this._providerL2().getMainContractAddress();\n                const zksync = typechain_1.IZkSyncFactory.connect(contractAddress, this._signerL1());\n                return await zksync.isEthWithdrawalFinalized(log.l1BatchNumber, proof.id);\n            }\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(sender, this._providerL2());\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(await l2Bridge.l1Bridge(), this._providerL1());\n            return await l1Bridge.isWithdrawalFinalized(log.l1BatchNumber, proof.id);\n        }\n        async claimFailedDeposit(depositHash, overrides) {\n            const receipt = await this._providerL2().getTransactionReceipt(ethers_1.ethers.utils.hexlify(depositHash));\n            const successL2ToL1LogIndex = receipt.l2ToL1Logs.findIndex((l2ToL1log) => l2ToL1log.sender == utils_1.BOOTLOADER_FORMAL_ADDRESS && l2ToL1log.key == depositHash);\n            const successL2ToL1Log = receipt.l2ToL1Logs[successL2ToL1LogIndex];\n            if (successL2ToL1Log.value != ethers_1.ethers.constants.HashZero) {\n                throw new Error('Cannot claim successful deposit');\n            }\n            const tx = await this._providerL2().getTransaction(ethers_1.ethers.utils.hexlify(depositHash));\n            // Undo the aliasing, since the Mailbox contract set it as for contract address.\n            const l1BridgeAddress = (0, utils_1.undoL1ToL2Alias)(receipt.from);\n            const l2BridgeAddress = receipt.to;\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(l1BridgeAddress, this._signerL1());\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(l2BridgeAddress, this._providerL2());\n            const calldata = l2Bridge.interface.decodeFunctionData('finalizeDeposit', tx.data);\n            const proof = await this._providerL2().getLogProof(depositHash, successL2ToL1LogIndex);\n            return await l1Bridge.claimFailedDeposit(calldata['_l1Sender'], calldata['_l1Token'], depositHash, receipt.l1BatchNumber, proof.id, receipt.l1BatchTxIndex, proof.proof, overrides !== null && overrides !== void 0 ? overrides : {});\n        }\n        async requestExecute(transaction) {\n            const requestExecuteTx = await this.getRequestExecuteTx(transaction);\n            return this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(requestExecuteTx));\n        }\n        async estimateGasRequestExecute(transaction) {\n            const requestExecuteTx = await this.getRequestExecuteTx(transaction);\n            return this._providerL1().estimateGas(requestExecuteTx);\n        }\n        async getRequestExecuteTx(transaction) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            const zksyncContract = await this.getMainContract();\n            const { ...tx } = transaction;\n            (_a = tx.l2Value) !== null && _a !== void 0 ? _a : (tx.l2Value = ethers_1.BigNumber.from(0));\n            (_b = tx.operatorTip) !== null && _b !== void 0 ? _b : (tx.operatorTip = ethers_1.BigNumber.from(0));\n            (_c = tx.factoryDeps) !== null && _c !== void 0 ? _c : (tx.factoryDeps = []);\n            (_d = tx.overrides) !== null && _d !== void 0 ? _d : (tx.overrides = {});\n            (_e = tx.gasPerPubdataByte) !== null && _e !== void 0 ? _e : (tx.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            (_f = tx.refundRecipient) !== null && _f !== void 0 ? _f : (tx.refundRecipient = await this.getAddress());\n            (_g = tx.l2GasLimit) !== null && _g !== void 0 ? _g : (tx.l2GasLimit = await this._providerL2().estimateL1ToL2Execute(transaction));\n            const { contractAddress, l2Value, calldata, l2GasLimit, factoryDeps, operatorTip, overrides, gasPerPubdataByte, refundRecipient } = tx;\n            await insertGasPrice(this._providerL1(), overrides);\n            const gasPriceForEstimation = overrides.maxFeePerGas || overrides.gasPrice;\n            const baseCost = await this.getBaseCost({\n                gasPrice: await gasPriceForEstimation,\n                gasPerPubdataByte,\n                gasLimit: l2GasLimit\n            });\n            (_h = overrides.value) !== null && _h !== void 0 ? _h : (overrides.value = baseCost.add(operatorTip).add(l2Value));\n            await (0, utils_1.checkBaseCost)(baseCost, overrides.value);\n            return await zksyncContract.populateTransaction.requestL2Transaction(contractAddress, l2Value, calldata, l2GasLimit, utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT, factoryDeps, refundRecipient, overrides);\n        }\n    };\n}\nexports.AdapterL1 = AdapterL1;\nfunction AdapterL2(Base) {\n    return class Adapter extends Base {\n        _providerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _signerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        async getBalance(token, blockTag = 'committed') {\n            return await this._providerL2().getBalance(await this.getAddress(), blockTag, token);\n        }\n        async getAllBalances() {\n            return await this._providerL2().getAllAccountBalances(await this.getAddress());\n        }\n        async getL2BridgeContracts() {\n            const addresses = await this._providerL2().getDefaultBridgeAddresses();\n            return {\n                erc20: typechain_1.IL2BridgeFactory.connect(addresses.erc20L2, this._signerL2())\n            };\n        }\n        _fillCustomData(data) {\n            var _a, _b;\n            const customData = { ...data };\n            (_a = customData.gasPerPubdata) !== null && _a !== void 0 ? _a : (customData.gasPerPubdata = utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT);\n            (_b = customData.factoryDeps) !== null && _b !== void 0 ? _b : (customData.factoryDeps = []);\n            return customData;\n        }\n        async withdraw(transaction) {\n            const withdrawTx = await this._providerL2().getWithdrawTx({\n                from: await this.getAddress(),\n                ...transaction\n            });\n            const txResponse = await this.sendTransaction(withdrawTx);\n            return this._providerL2()._wrapTransaction(txResponse);\n        }\n        async transfer(transaction) {\n            const transferTx = await this._providerL2().getTransferTx({\n                from: await this.getAddress(),\n                ...transaction\n            });\n            const txResponse = await this.sendTransaction(transferTx);\n            return this._providerL2()._wrapTransaction(txResponse);\n        }\n    };\n}\nexports.AdapterL2 = AdapterL2;\n/// @dev This method checks if the overrides contain a gasPrice (or maxFeePerGas), if not it will insert\n/// the maxFeePerGas\nasync function insertGasPrice(l1Provider, overrides) {\n    if (!overrides.gasPrice && !overrides.maxFeePerGas) {\n        const l1FeeData = await l1Provider.getFeeData();\n        // Sometimes baseFeePerGas is not available, so we use gasPrice instead.\n        const baseFee = l1FeeData.lastBaseFeePerGas || l1FeeData.gasPrice;\n        // ethers.js by default uses multiplcation by 2, but since the price for the L2 part\n        // will depend on the L1 part, doubling base fee is typically too much.\n        const maxFeePerGas = baseFee.mul(3).div(2).add(l1FeeData.maxPriorityFeePerGas);\n        overrides.maxFeePerGas = maxFeePerGas;\n        overrides.maxPriorityFeePerGas = l1FeeData.maxPriorityFeePerGas;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractFactory = exports.Contract = void 0;\nconst ethers_1 = require(\"ethers\");\nconst utils_1 = require(\"./utils\");\nconst types_1 = require(\"./types\");\nvar ethers_2 = require(\"ethers\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return ethers_2.Contract; } });\nclass ContractFactory extends ethers_1.ethers.ContractFactory {\n    constructor(abi, bytecode, signer, deploymentType) {\n        super(abi, bytecode, signer);\n        this.deploymentType = deploymentType || 'create';\n    }\n    encodeCalldata(salt, bytecodeHash, constructorCalldata) {\n        if (this.deploymentType == 'create') {\n            return utils_1.CONTRACT_DEPLOYER.encodeFunctionData('create', [salt, bytecodeHash, constructorCalldata]);\n        }\n        else if (this.deploymentType == 'createAccount') {\n            return utils_1.CONTRACT_DEPLOYER.encodeFunctionData('createAccount', [\n                salt,\n                bytecodeHash,\n                constructorCalldata,\n                types_1.AccountAbstractionVersion.Version1\n            ]);\n        }\n        else {\n            throw new Error(`Unsupported deployment type ${this.deploymentType}`);\n        }\n    }\n    getDeployTransaction(...args) {\n        var _a, _b, _c;\n        var _d, _e;\n        // TODO (SMA-1585): Users should be able to provide the salt.\n        let salt = '0x0000000000000000000000000000000000000000000000000000000000000000';\n        // The overrides will be popped out in this call:\n        const txRequest = super.getDeployTransaction(...args);\n        // Removing overrides\n        if (this.interface.deploy.inputs.length + 1 == args.length) {\n            args.pop();\n        }\n        // Salt argument is not used, so we provide a placeholder value.\n        const bytecodeHash = (0, utils_1.hashBytecode)(this.bytecode);\n        const constructorCalldata = ethers_1.utils.arrayify(this.interface.encodeDeploy(args));\n        const deployCalldata = this.encodeCalldata(salt, bytecodeHash, constructorCalldata);\n        txRequest.type = utils_1.EIP712_TX_TYPE;\n        txRequest.to = utils_1.CONTRACT_DEPLOYER_ADDRESS;\n        txRequest.data = deployCalldata;\n        (_a = txRequest.customData) !== null && _a !== void 0 ? _a : (txRequest.customData = {});\n        (_b = (_d = txRequest.customData).factoryDeps) !== null && _b !== void 0 ? _b : (_d.factoryDeps = []);\n        (_c = (_e = txRequest.customData).gasPerPubdata) !== null && _c !== void 0 ? _c : (_e.gasPerPubdata = utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT);\n        // The number of factory deps is relatively low, so it is efficient enough.\n        if (!txRequest.customData.factoryDeps.includes(this.bytecode)) {\n            txRequest.customData.factoryDeps.push(this.bytecode);\n        }\n        return txRequest;\n    }\n    async deploy(...args) {\n        const contract = await super.deploy(...args);\n        const deployTxReceipt = await contract.deployTransaction.wait();\n        const deployedAddresses = (0, utils_1.getDeployedContracts)(deployTxReceipt).map((info) => info.deployedAddress);\n        const contractWithCorrectAddress = new ethers_1.ethers.Contract(deployedAddresses[deployedAddresses.length - 1], contract.interface, contract.signer);\n        ethers_1.utils.defineReadOnly(contractWithCorrectAddress, 'deployTransaction', contract.deployTransaction);\n        return contractWithCorrectAddress;\n    }\n}\nexports.ContractFactory = ContractFactory;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = exports.ContractFactory = exports.Provider = exports.Web3Provider = exports.Wallet = exports.L1Signer = exports.Signer = exports.EIP712Signer = exports.types = exports.utils = void 0;\nexports.utils = __importStar(require(\"./utils\"));\nexports.types = __importStar(require(\"./types\"));\nvar signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"EIP712Signer\", { enumerable: true, get: function () { return signer_1.EIP712Signer; } });\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"L1Signer\", { enumerable: true, get: function () { return signer_1.L1Signer; } });\nvar wallet_1 = require(\"./wallet\");\nObject.defineProperty(exports, \"Wallet\", { enumerable: true, get: function () { return wallet_1.Wallet; } });\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Web3Provider\", { enumerable: true, get: function () { return provider_1.Web3Provider; } });\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nvar contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"ContractFactory\", { enumerable: true, get: function () { return contract_1.ContractFactory; } });\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPaymasterParams = exports.getGeneralPaymasterInput = exports.getApprovalBasedPaymasterInput = exports.IPaymasterFlow = void 0;\nconst ethers_1 = require(\"ethers\");\nexports.IPaymasterFlow = new ethers_1.ethers.utils.Interface(require('../../abi/IPaymasterFlow.json').abi);\nfunction getApprovalBasedPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('approvalBased', [\n        paymasterInput.token,\n        paymasterInput.minimalAllowance,\n        paymasterInput.innerInput\n    ]);\n}\nexports.getApprovalBasedPaymasterInput = getApprovalBasedPaymasterInput;\nfunction getGeneralPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('general', [paymasterInput.innerInput]);\n}\nexports.getGeneralPaymasterInput = getGeneralPaymasterInput;\nfunction getPaymasterParams(paymasterAddress, paymasterInput) {\n    if (paymasterInput.type == 'General') {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getGeneralPaymasterInput(paymasterInput)\n        };\n    }\n    else {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getApprovalBasedPaymasterInput(paymasterInput)\n        };\n    }\n}\nexports.getPaymasterParams = getPaymasterParams;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Web3Provider = exports.Provider = void 0;\nconst ethers_1 = require(\"ethers\");\nvar Formatter = ethers_1.providers.Formatter;\nconst web_1 = require(\"@ethersproject/web\");\nconst typechain_1 = require(\"../typechain\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst signer_1 = require(\"./signer\");\nlet defaultFormatter = null;\nclass Provider extends ethers_1.ethers.providers.JsonRpcProvider {\n    async getTransactionReceipt(transactionHash) {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n        return (0, web_1.poll)(async () => {\n            const result = await this.perform('getTransactionReceipt', params);\n            if (result == null) {\n                if (this._emitted['t:' + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n            if (result.blockNumber == null && result.status != null && ethers_1.BigNumber.from(result.status).isZero()) {\n                // transaction is rejected in the state-keeper\n                return {\n                    ...this.formatter.receipt({\n                        ...result,\n                        confirmations: 1,\n                        blockNumber: 0,\n                        blockHash: ethers_1.ethers.constants.HashZero\n                    }),\n                    blockNumber: null,\n                    blockHash: null,\n                    l1BatchNumber: null,\n                    l1BatchTxIndex: null\n                };\n            }\n            if (result.blockHash == null) {\n                // receipt is not ready\n                return undefined;\n            }\n            else {\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = blockNumber - receipt.blockNumber + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }\n        }, { oncePoll: this });\n    }\n    async getBlock(blockHashOrBlockTag) {\n        return this._getBlock(blockHashOrBlockTag, false);\n    }\n    async getBlockWithTransactions(blockHashOrBlockTag) {\n        return this._getBlock(blockHashOrBlockTag, true);\n    }\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n            const number = defaultFormatter.number.bind(defaultFormatter);\n            const boolean = defaultFormatter.boolean.bind(defaultFormatter);\n            const hash = defaultFormatter.hash.bind(defaultFormatter);\n            const address = defaultFormatter.address.bind(defaultFormatter);\n            defaultFormatter.formats.receiptLog.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.l2Tol1Log = {\n                blockNumber: number,\n                blockHash: hash,\n                l1BatchNumber: Formatter.allowNull(number),\n                transactionIndex: number,\n                shardId: number,\n                isService: boolean,\n                sender: address,\n                key: hash,\n                value: hash,\n                transactionHash: hash,\n                logIndex: number\n            };\n            defaultFormatter.formats.receipt.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.receipt.l1BatchTxIndex = Formatter.allowNull(number);\n            defaultFormatter.formats.receipt.l2ToL1Logs = Formatter.arrayOf((value) => Formatter.check(defaultFormatter.formats.l2Tol1Log, value));\n            defaultFormatter.formats.block.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.block.l1BatchTimestamp = Formatter.allowNull(number);\n            defaultFormatter.formats.blockWithTransactions.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.blockWithTransactions.l1BatchTimestamp = Formatter.allowNull(number);\n            defaultFormatter.formats.transaction.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.transaction.l1BatchTxIndex = Formatter.allowNull(number);\n            defaultFormatter.formats.filterLog.l1BatchNumber = Formatter.allowNull(number);\n        }\n        return defaultFormatter;\n    }\n    async getBalance(address, blockTag, tokenAddress) {\n        const tag = this.formatter.blockTag(blockTag);\n        if (tokenAddress == null || (0, utils_1.isETH)(tokenAddress)) {\n            // requesting ETH balance\n            return await super.getBalance(address, tag);\n        }\n        else {\n            try {\n                let token = typechain_1.IERC20MetadataFactory.connect(tokenAddress, this);\n                return await token.balanceOf(address, { blockTag: tag });\n            }\n            catch {\n                return ethers_1.BigNumber.from(0);\n            }\n        }\n    }\n    async l2TokenAddress(token) {\n        if (token == utils_1.ETH_ADDRESS) {\n            return utils_1.ETH_ADDRESS;\n        }\n        else {\n            const erc20BridgeAddress = (await this.getDefaultBridgeAddresses()).erc20L2;\n            const erc20Bridge = typechain_1.IL2BridgeFactory.connect(erc20BridgeAddress, this);\n            return await erc20Bridge.l2TokenAddress(token);\n        }\n    }\n    async l1TokenAddress(token) {\n        if (token == utils_1.ETH_ADDRESS) {\n            return utils_1.ETH_ADDRESS;\n        }\n        else {\n            const erc20BridgeAddress = (await this.getDefaultBridgeAddresses()).erc20L2;\n            const erc20Bridge = typechain_1.IL2BridgeFactory.connect(erc20BridgeAddress, this);\n            return await erc20Bridge.l1TokenAddress(token);\n        }\n    }\n    // This function is used when formatting requests for\n    // eth_call and eth_estimateGas. We override it here\n    // because we have extra stuff to serialize (customData).\n    // This function is for internal use only.\n    static hexlifyTransaction(transaction, allowExtra) {\n        var _a;\n        const result = ethers_1.ethers.providers.JsonRpcProvider.hexlifyTransaction(transaction, {\n            ...allowExtra,\n            customData: true,\n            from: true\n        });\n        if (transaction.customData == null) {\n            return result;\n        }\n        result.eip712Meta = {\n            gasPerPubdata: ethers_1.utils.hexValue((_a = transaction.customData.gasPerPubdata) !== null && _a !== void 0 ? _a : 0)\n        };\n        transaction.type = utils_1.EIP712_TX_TYPE;\n        if (transaction.customData.factoryDeps) {\n            // @ts-ignore\n            result.eip712Meta.factoryDeps = transaction.customData.factoryDeps.map((dep) => \n            // TODO (SMA-1605): we arraify instead of hexlifying because server expects Vec<u8>.\n            //  We should change deserialization there.\n            Array.from(ethers_1.utils.arrayify(dep)));\n        }\n        if (transaction.customData.paymasterParams) {\n            // @ts-ignore\n            result.eip712Meta.paymasterParams = {\n                paymaster: ethers_1.utils.hexlify(transaction.customData.paymasterParams.paymaster),\n                paymasterInput: Array.from(ethers_1.utils.arrayify(transaction.customData.paymasterParams.paymasterInput))\n            };\n        }\n        return result;\n    }\n    async estimateGas(transaction) {\n        await this.getNetwork();\n        const params = await ethers_1.utils.resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n        if (transaction.customData != null) {\n            // @ts-ignore\n            params.transaction.customData = transaction.customData;\n        }\n        const result = await this.perform('estimateGas', params);\n        try {\n            return ethers_1.BigNumber.from(result);\n        }\n        catch (error) {\n            throw new Error(`bad result from backend (estimateGas): ${result}`);\n        }\n    }\n    async estimateGasL1(transaction) {\n        await this.getNetwork();\n        const params = await ethers_1.utils.resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n        if (transaction.customData != null) {\n            // @ts-ignore\n            params.transaction.customData = transaction.customData;\n        }\n        const result = await this.send('zks_estimateGasL1ToL2', [\n            Provider.hexlifyTransaction(params.transaction, { from: true })\n        ]);\n        try {\n            return ethers_1.BigNumber.from(result);\n        }\n        catch (error) {\n            throw new Error(`bad result from backend (zks_estimateGasL1ToL2): ${result}`);\n        }\n    }\n    async getGasPrice(token) {\n        const params = token ? [token] : [];\n        const price = await this.send('eth_gasPrice', params);\n        return ethers_1.BigNumber.from(price);\n    }\n    constructor(url, network) {\n        super(url, network);\n        this.pollingInterval = 500;\n        const blockTag = this.formatter.blockTag.bind(this.formatter);\n        this.formatter.blockTag = (tag) => {\n            if (tag == 'committed' || tag == 'finalized') {\n                return tag;\n            }\n            return blockTag(tag);\n        };\n        this.contractAddresses = {};\n        this.formatter.transaction = utils_1.parseTransaction;\n    }\n    async getMessageProof(blockNumber, sender, messageHash, logIndex) {\n        return await this.send('zks_getL2ToL1MsgProof', [\n            ethers_1.BigNumber.from(blockNumber).toNumber(),\n            sender,\n            ethers_1.ethers.utils.hexlify(messageHash),\n            logIndex\n        ]);\n    }\n    async getLogProof(txHash, index) {\n        return await this.send('zks_getL2ToL1LogProof', [ethers_1.ethers.utils.hexlify(txHash), index]);\n    }\n    async getL1BatchBlockRange(l1BatchNumber) {\n        const range = await this.send('zks_getL1BatchBlockRange', [l1BatchNumber]);\n        if (range == null) {\n            return null;\n        }\n        return [parseInt(range[0], 16), parseInt(range[1], 16)];\n    }\n    async getMainContractAddress() {\n        if (!this.contractAddresses.mainContract) {\n            this.contractAddresses.mainContract = await this.send('zks_getMainContract', []);\n        }\n        return this.contractAddresses.mainContract;\n    }\n    async getTestnetPaymasterAddress() {\n        // Unlike contract's addresses, the testnet paymaster is not cached, since it can be trivially changed\n        // on the fly by the server and should not be relied to be constant\n        return await this.send('zks_getTestnetPaymaster', []);\n    }\n    async getDefaultBridgeAddresses() {\n        if (!this.contractAddresses.erc20BridgeL1) {\n            let addresses = await this.send('zks_getBridgeContracts', []);\n            this.contractAddresses.erc20BridgeL1 = addresses.l1Erc20DefaultBridge;\n            this.contractAddresses.erc20BridgeL2 = addresses.l2Erc20DefaultBridge;\n        }\n        return {\n            erc20L1: this.contractAddresses.erc20BridgeL1,\n            erc20L2: this.contractAddresses.erc20BridgeL2\n        };\n    }\n    async getConfirmedTokens(start = 0, limit = 255) {\n        const tokens = await this.send('zks_getConfirmedTokens', [start, limit]);\n        return tokens.map((token) => ({ address: token.l2Address, ...token }));\n    }\n    async getTokenPrice(token) {\n        return await this.send('zks_getTokenPrice', [token]);\n    }\n    async getAllAccountBalances(address) {\n        let balances = await this.send('zks_getAllAccountBalances', [address]);\n        for (let token in balances) {\n            balances[token] = ethers_1.BigNumber.from(balances[token]);\n        }\n        return balances;\n    }\n    async l1ChainId() {\n        const res = await this.send('zks_L1ChainId', []);\n        return ethers_1.BigNumber.from(res).toNumber();\n    }\n    async getL1BatchNumber() {\n        const number = await this.send('zks_L1BatchNumber', []);\n        return ethers_1.BigNumber.from(number).toNumber();\n    }\n    async getL1BatchDetails(number) {\n        return await this.send('zks_getL1BatchDetails', [number]);\n    }\n    async getBlockDetails(number) {\n        return await this.send('zks_getBlockDetails', [number]);\n    }\n    async getTransactionDetails(txHash) {\n        return await this.send('zks_getTransactionDetails', [txHash]);\n    }\n    async getWithdrawTx(transaction) {\n        var _a, _b, _c;\n        var _d;\n        const { ...tx } = transaction;\n        if (tx.to == null && tx.from == null) {\n            throw new Error('withdrawal target address is undefined');\n        }\n        (_a = tx.to) !== null && _a !== void 0 ? _a : (tx.to = tx.from);\n        (_b = tx.overrides) !== null && _b !== void 0 ? _b : (tx.overrides = {});\n        (_c = (_d = tx.overrides).from) !== null && _c !== void 0 ? _c : (_d.from = tx.from);\n        if ((0, utils_1.isETH)(tx.token)) {\n            if (!tx.overrides.value) {\n                tx.overrides.value = tx.amount;\n            }\n            const passedValue = ethers_1.BigNumber.from(tx.overrides.value);\n            if (!passedValue.eq(tx.amount)) {\n                // To avoid users shooting themselves into the foot, we will always use the amount to withdraw\n                // as the value\n                throw new Error('The tx.value is not equal to the value withdrawn');\n            }\n            const ethL2Token = typechain_1.IEthTokenFactory.connect(utils_1.L2_ETH_TOKEN_ADDRESS, this);\n            return ethL2Token.populateTransaction.withdraw(tx.to, tx.overrides);\n        }\n        if (tx.bridgeAddress == null) {\n            const bridges = await this.getDefaultBridgeAddresses();\n            tx.bridgeAddress = bridges.erc20L2;\n        }\n        const bridge = typechain_1.IL2BridgeFactory.connect(tx.bridgeAddress, this);\n        return bridge.populateTransaction.withdraw(tx.to, tx.token, tx.amount, tx.overrides);\n    }\n    async estimateGasWithdraw(transaction) {\n        const withdrawTx = await this.getWithdrawTx(transaction);\n        return await this.estimateGas(withdrawTx);\n    }\n    async getTransferTx(transaction) {\n        var _a, _b;\n        var _c;\n        const { ...tx } = transaction;\n        (_a = tx.overrides) !== null && _a !== void 0 ? _a : (tx.overrides = {});\n        (_b = (_c = tx.overrides).from) !== null && _b !== void 0 ? _b : (_c.from = tx.from);\n        if (tx.token == null || tx.token == utils_1.ETH_ADDRESS) {\n            return {\n                ...(await ethers_1.ethers.utils.resolveProperties(tx.overrides)),\n                to: tx.to,\n                value: tx.amount\n            };\n        }\n        else {\n            const token = typechain_1.IERC20MetadataFactory.connect(tx.token, this);\n            return await token.populateTransaction.transfer(tx.to, tx.amount, tx.overrides);\n        }\n    }\n    async estimateGasTransfer(transaction) {\n        const transferTx = await this.getTransferTx(transaction);\n        return await this.estimateGas(transferTx);\n    }\n    static getDefaultProvider() {\n        // TODO (SMA-1606): Add different urls for different networks.\n        return new Provider(process.env.ZKSYNC_WEB3_API_URL || 'http://localhost:3050');\n    }\n    async newFilter(filter) {\n        filter = await filter;\n        const id = await this.send('eth_newFilter', [this._prepareFilter(filter)]);\n        return ethers_1.BigNumber.from(id);\n    }\n    async newBlockFilter() {\n        const id = await this.send('eth_newBlockFilter', []);\n        return ethers_1.BigNumber.from(id);\n    }\n    async newPendingTransactionsFilter() {\n        const id = await this.send('eth_newPendingTransactionFilter', []);\n        return ethers_1.BigNumber.from(id);\n    }\n    async getFilterChanges(idx) {\n        const logs = await this.send('eth_getFilterChanges', [idx.toHexString()]);\n        return typeof logs[0] === 'string' ? logs : this._parseLogs(logs);\n    }\n    async getLogs(filter = {}) {\n        filter = await filter;\n        const logs = await this.send('eth_getLogs', [this._prepareFilter(filter)]);\n        return this._parseLogs(logs);\n    }\n    _parseLogs(logs) {\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n    _prepareFilter(filter) {\n        return {\n            ...filter,\n            fromBlock: filter.fromBlock == null ? null : this.formatter.blockTag(filter.fromBlock),\n            toBlock: filter.fromBlock == null ? null : this.formatter.blockTag(filter.toBlock)\n        };\n    }\n    _wrapTransaction(tx, hash) {\n        const response = super._wrapTransaction(tx, hash);\n        response.waitFinalize = async () => {\n            const receipt = await response.wait();\n            while (true) {\n                const block = await this.getBlock('finalized');\n                if (receipt.blockNumber <= block.number) {\n                    return await this.getTransactionReceipt(receipt.transactionHash);\n                }\n                else {\n                    await (0, utils_1.sleep)(this.pollingInterval);\n                }\n            }\n        };\n        return response;\n    }\n    // This is inefficient. Status should probably be indicated in the transaction receipt.\n    async getTransactionStatus(txHash) {\n        const tx = await this.getTransaction(txHash);\n        if (tx == null) {\n            return types_1.TransactionStatus.NotFound;\n        }\n        if (tx.blockNumber == null) {\n            return types_1.TransactionStatus.Processing;\n        }\n        const verifiedBlock = await this.getBlock('finalized');\n        if (tx.blockNumber <= verifiedBlock.number) {\n            return types_1.TransactionStatus.Finalized;\n        }\n        return types_1.TransactionStatus.Committed;\n    }\n    async getTransaction(hash) {\n        hash = await hash;\n        const tx = await super.getTransaction(hash);\n        return tx ? this._wrapTransaction(tx, hash) : null;\n    }\n    async sendTransaction(transaction) {\n        return (await super.sendTransaction(transaction));\n    }\n    async getL2TransactionFromPriorityOp(l1TxResponse) {\n        const receipt = await l1TxResponse.wait();\n        const l2Hash = (0, utils_1.getL2HashFromPriorityOp)(receipt, await this.getMainContractAddress());\n        let status = null;\n        do {\n            status = await this.getTransactionStatus(l2Hash);\n            await (0, utils_1.sleep)(this.pollingInterval);\n        } while (status == types_1.TransactionStatus.NotFound);\n        return await this.getTransaction(l2Hash);\n    }\n    async getPriorityOpResponse(l1TxResponse) {\n        const l2Response = { ...l1TxResponse };\n        l2Response.waitL1Commit = l2Response.wait;\n        l2Response.wait = async () => {\n            const l2Tx = await this.getL2TransactionFromPriorityOp(l1TxResponse);\n            return await l2Tx.wait();\n        };\n        l2Response.waitFinalize = async () => {\n            const l2Tx = await this.getL2TransactionFromPriorityOp(l1TxResponse);\n            return await l2Tx.waitFinalize();\n        };\n        return l2Response;\n    }\n    async getContractAccountInfo(address) {\n        const deployerContract = new ethers_1.Contract(utils_1.CONTRACT_DEPLOYER_ADDRESS, utils_1.CONTRACT_DEPLOYER, this);\n        const data = await deployerContract.getAccountInfo(address);\n        return {\n            supportedAAVersion: data.supportedAAVersion,\n            nonceOrdering: data.nonceOrdering\n        };\n    }\n    // TODO (EVM-3): support refundRecipient for fee estimation\n    async estimateL1ToL2Execute(transaction) {\n        var _a, _b;\n        (_a = transaction.gasPerPubdataByte) !== null && _a !== void 0 ? _a : (transaction.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n        // If the `from` address is not provided, we use a random address, because\n        // due to storage slot aggregation, the gas estimation will depend on the address\n        // and so estimation for the zero address may be smaller than for the sender.\n        (_b = transaction.caller) !== null && _b !== void 0 ? _b : (transaction.caller = ethers_1.ethers.Wallet.createRandom().address);\n        const customData = {\n            gasPerPubdataByte: transaction.gasPerPubdataByte\n        };\n        if (transaction.factoryDeps) {\n            Object.assign(customData, { factoryDeps: transaction.factoryDeps });\n        }\n        const fee = await this.estimateGasL1({\n            from: transaction.caller,\n            data: transaction.calldata,\n            to: transaction.contractAddress,\n            value: transaction.l2Value,\n            customData\n        });\n        return fee;\n    }\n}\nexports.Provider = Provider;\nclass Web3Provider extends Provider {\n    constructor(provider, network) {\n        if (provider == null) {\n            throw new Error('missing provider');\n        }\n        if (!provider.request) {\n            throw new Error('provider must implement eip-1193');\n        }\n        let path = provider.host || provider.path || (provider.isMetaMask ? 'metamask' : 'eip-1193:');\n        super(path, network);\n        this.provider = provider;\n    }\n    async send(method, params) {\n        params !== null && params !== void 0 ? params : (params = []);\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == 'eth_sign' && (this.provider.isMetaMask || this.provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = 'personal_sign';\n            params = [params[1], params[0]];\n        }\n        return await this.provider.request({ method, params });\n    }\n    getSigner(addressOrIndex) {\n        return signer_1.Signer.from(super.getSigner(addressOrIndex));\n    }\n    async estimateGas(transaction) {\n        const gas = await super.estimateGas(transaction);\n        const metamaskMinimum = ethers_1.BigNumber.from(21000);\n        const isEIP712 = transaction.customData != null || transaction.type == utils_1.EIP712_TX_TYPE;\n        return gas.gt(metamaskMinimum) || isEIP712 ? gas : metamaskMinimum;\n    }\n}\nexports.Web3Provider = Web3Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.L1Signer = exports.Signer = exports.EIP712Signer = exports.eip712Types = void 0;\nconst ethers_1 = require(\"ethers\");\nconst utils_1 = require(\"./utils\");\nconst hash_1 = require(\"@ethersproject/hash\");\nconst adapters_1 = require(\"./adapters\");\nexports.eip712Types = {\n    Transaction: [\n        { name: 'txType', type: 'uint256' },\n        { name: 'from', type: 'uint256' },\n        { name: 'to', type: 'uint256' },\n        { name: 'gasLimit', type: 'uint256' },\n        { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n        { name: 'maxFeePerGas', type: 'uint256' },\n        { name: 'maxPriorityFeePerGas', type: 'uint256' },\n        { name: 'paymaster', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'value', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n        { name: 'factoryDeps', type: 'bytes32[]' },\n        { name: 'paymasterInput', type: 'bytes' }\n    ]\n};\nclass EIP712Signer {\n    constructor(ethSigner, chainId) {\n        this.ethSigner = ethSigner;\n        this.eip712Domain = Promise.resolve(chainId).then((chainId) => ({\n            name: 'zkSync',\n            version: '2',\n            chainId\n        }));\n    }\n    static getSignInput(transaction) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const maxFeePerGas = transaction.maxFeePerGas || transaction.gasPrice;\n        const maxPriorityFeePerGas = transaction.maxPriorityFeePerGas || maxFeePerGas;\n        const gasPerPubdataByteLimit = ((_a = transaction.customData) === null || _a === void 0 ? void 0 : _a.gasPerPubdata) || utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT;\n        const signInput = {\n            txType: transaction.type,\n            from: transaction.from,\n            to: transaction.to,\n            gasLimit: transaction.gasLimit,\n            gasPerPubdataByteLimit: gasPerPubdataByteLimit,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            paymaster: ((_c = (_b = transaction.customData) === null || _b === void 0 ? void 0 : _b.paymasterParams) === null || _c === void 0 ? void 0 : _c.paymaster) || ethers_1.ethers.constants.AddressZero,\n            nonce: transaction.nonce,\n            value: transaction.value,\n            data: transaction.data,\n            factoryDeps: ((_e = (_d = transaction.customData) === null || _d === void 0 ? void 0 : _d.factoryDeps) === null || _e === void 0 ? void 0 : _e.map((dep) => (0, utils_1.hashBytecode)(dep))) || [],\n            paymasterInput: ((_g = (_f = transaction.customData) === null || _f === void 0 ? void 0 : _f.paymasterParams) === null || _g === void 0 ? void 0 : _g.paymasterInput) || '0x'\n        };\n        return signInput;\n    }\n    async sign(transaction) {\n        return await this.ethSigner._signTypedData(await this.eip712Domain, exports.eip712Types, EIP712Signer.getSignInput(transaction));\n    }\n    static getSignedDigest(transaction) {\n        if (!transaction.chainId) {\n            throw Error(\"Transaction chainId isn't set\");\n        }\n        const domain = {\n            name: 'zkSync',\n            version: '2',\n            chainId: transaction.chainId\n        };\n        return hash_1._TypedDataEncoder.hash(domain, exports.eip712Types, EIP712Signer.getSignInput(transaction));\n    }\n}\nexports.EIP712Signer = EIP712Signer;\n// This class is to be used on the frontend, with metamask injection.\n// It only contains L2 operations. For L1 operations, see L1Signer.\n// Sample usage:\n// const provider = new zkweb3.Web3Provider(window.ethereum);\n// const signer = provider.getSigner();\n// const tx = await signer.sendTransaction({ ... });\nclass Signer extends (0, adapters_1.AdapterL2)(ethers_1.ethers.providers.JsonRpcSigner) {\n    _signerL2() {\n        return this;\n    }\n    _providerL2() {\n        return this.provider;\n    }\n    static from(signer) {\n        const newSigner = Object.setPrototypeOf(signer, Signer.prototype);\n        // @ts-ignore\n        newSigner.eip712 = new EIP712Signer(newSigner, newSigner.getChainId());\n        return newSigner;\n    }\n    // an alias with a better name\n    async getNonce(blockTag) {\n        return await this.getTransactionCount(blockTag);\n    }\n    async sendTransaction(transaction) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (transaction.customData == null && transaction.type == null) {\n            // use legacy txs by default\n            transaction.type = 0;\n        }\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            return (await super.sendTransaction(transaction));\n        }\n        else {\n            const address = await this.getAddress();\n            (_a = transaction.from) !== null && _a !== void 0 ? _a : (transaction.from = address);\n            if (transaction.from.toLowerCase() != address.toLowerCase()) {\n                throw new Error('Transaction `from` address mismatch');\n            }\n            transaction.type = utils_1.EIP712_TX_TYPE;\n            (_b = transaction.value) !== null && _b !== void 0 ? _b : (transaction.value = 0);\n            (_c = transaction.data) !== null && _c !== void 0 ? _c : (transaction.data = '0x');\n            (_d = transaction.nonce) !== null && _d !== void 0 ? _d : (transaction.nonce = await this.getNonce());\n            transaction.customData = this._fillCustomData(transaction.customData);\n            (_e = transaction.gasPrice) !== null && _e !== void 0 ? _e : (transaction.gasPrice = await this.provider.getGasPrice());\n            (_f = transaction.gasLimit) !== null && _f !== void 0 ? _f : (transaction.gasLimit = await this.provider.estimateGas(transaction));\n            (_g = transaction.chainId) !== null && _g !== void 0 ? _g : (transaction.chainId = (await this.provider.getNetwork()).chainId);\n            transaction.customData.customSignature = await this.eip712.sign(transaction);\n            const txBytes = (0, utils_1.serialize)(transaction);\n            return await this.provider.sendTransaction(txBytes);\n        }\n    }\n}\nexports.Signer = Signer;\n// This class is to be used on the frontend with metamask injection.\n// It only contains L1 operations. For L2 operations, see Signer.\n// Sample usage:\n// const provider = new ethers.Web3Provider(window.ethereum);\n// const zksyncProvider = new zkweb3.Provider('<rpc_url>');\n// const signer = zkweb3.L1Signer.from(provider.getSigner(), zksyncProvider);\n// const tx = await signer.deposit({ ... });\nclass L1Signer extends (0, adapters_1.AdapterL1)(ethers_1.ethers.providers.JsonRpcSigner) {\n    _providerL2() {\n        return this.providerL2;\n    }\n    _providerL1() {\n        return this.provider;\n    }\n    _signerL1() {\n        return this;\n    }\n    static from(signer, zksyncProvider) {\n        const newSigner = Object.setPrototypeOf(signer, L1Signer.prototype);\n        newSigner.providerL2 = zksyncProvider;\n        return newSigner;\n    }\n    connectToL2(provider) {\n        this.providerL2 = provider;\n        return this;\n    }\n}\nexports.L1Signer = L1Signer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountNonceOrdering = exports.AccountAbstractionVersion = exports.TransactionStatus = exports.PriorityOpTree = exports.PriorityQueueType = exports.Network = void 0;\n// Ethereum network\nvar Network;\n(function (Network) {\n    Network[Network[\"Mainnet\"] = 1] = \"Mainnet\";\n    Network[Network[\"Ropsten\"] = 3] = \"Ropsten\";\n    Network[Network[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Network[Network[\"Goerli\"] = 5] = \"Goerli\";\n    Network[Network[\"Localhost\"] = 9] = \"Localhost\";\n})(Network = exports.Network || (exports.Network = {}));\nvar PriorityQueueType;\n(function (PriorityQueueType) {\n    PriorityQueueType[PriorityQueueType[\"Deque\"] = 0] = \"Deque\";\n    PriorityQueueType[PriorityQueueType[\"HeapBuffer\"] = 1] = \"HeapBuffer\";\n    PriorityQueueType[PriorityQueueType[\"Heap\"] = 2] = \"Heap\";\n})(PriorityQueueType = exports.PriorityQueueType || (exports.PriorityQueueType = {}));\nvar PriorityOpTree;\n(function (PriorityOpTree) {\n    PriorityOpTree[PriorityOpTree[\"Full\"] = 0] = \"Full\";\n    PriorityOpTree[PriorityOpTree[\"Rollup\"] = 1] = \"Rollup\";\n})(PriorityOpTree = exports.PriorityOpTree || (exports.PriorityOpTree = {}));\nvar TransactionStatus;\n(function (TransactionStatus) {\n    TransactionStatus[\"NotFound\"] = \"not-found\";\n    TransactionStatus[\"Processing\"] = \"processing\";\n    TransactionStatus[\"Committed\"] = \"committed\";\n    TransactionStatus[\"Finalized\"] = \"finalized\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\nvar AccountAbstractionVersion;\n(function (AccountAbstractionVersion) {\n    AccountAbstractionVersion[AccountAbstractionVersion[\"None\"] = 0] = \"None\";\n    AccountAbstractionVersion[AccountAbstractionVersion[\"Version1\"] = 1] = \"Version1\";\n})(AccountAbstractionVersion = exports.AccountAbstractionVersion || (exports.AccountAbstractionVersion = {}));\nvar AccountNonceOrdering;\n(function (AccountNonceOrdering) {\n    AccountNonceOrdering[AccountNonceOrdering[\"Sequential\"] = 0] = \"Sequential\";\n    AccountNonceOrdering[AccountNonceOrdering[\"Arbitrary\"] = 1] = \"Arbitrary\";\n})(AccountNonceOrdering = exports.AccountNonceOrdering || (exports.AccountNonceOrdering = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.estimateDefaultBridgeDepositL2Gas = exports.isTypedDataSignatureCorrect = exports.isMessageSignatureCorrect = exports.getERC20BridgeCalldata = exports.undoL1ToL2Alias = exports.applyL1ToL2Alias = exports.getL2HashFromPriorityOp = exports.parseTransaction = exports.hashBytecode = exports.serialize = exports.checkBaseCost = exports.createAddress = exports.create2Address = exports.getDeployedContracts = exports.getHashedL2ToL1Msg = exports.layer1TxDefaults = exports.sleep = exports.isETH = exports.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT = exports.DEFAULT_GAS_PER_PUBDATA_LIMIT = exports.MAX_BYTECODE_LEN_BYTES = exports.PRIORITY_OPERATION_L2_TX_TYPE = exports.EIP712_TX_TYPE = exports.EIP1271_MAGIC_VALUE = exports.L1_TO_L2_ALIAS_OFFSET = exports.L2_ETH_TOKEN_ADDRESS = exports.L1_MESSENGER_ADDRESS = exports.CONTRACT_DEPLOYER_ADDRESS = exports.BOOTLOADER_FORMAL_ADDRESS = exports.L2_BRIDGE_ABI = exports.L1_BRIDGE_ABI = exports.IERC1271 = exports.IERC20 = exports.L1_MESSENGER = exports.CONTRACT_DEPLOYER = exports.ZKSYNC_MAIN_ABI = exports.ETH_ADDRESS = void 0;\nconst ethers_1 = require(\"ethers\");\nconst types_1 = require(\"./types\");\nconst signer_1 = require(\"./signer\");\nconst typechain_1 = require(\"../typechain\");\nconst utils_1 = require(\"ethers/lib/utils\");\n__exportStar(require(\"./paymaster-utils\"), exports);\nexports.ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexports.ZKSYNC_MAIN_ABI = new ethers_1.utils.Interface(require('../../abi/IZkSync.json').abi);\nexports.CONTRACT_DEPLOYER = new ethers_1.utils.Interface(require('../../abi/ContractDeployer.json').abi);\nexports.L1_MESSENGER = new ethers_1.utils.Interface(require('../../abi/IL1Messenger.json').abi);\nexports.IERC20 = new ethers_1.utils.Interface(require('../../abi/IERC20.json').abi);\nexports.IERC1271 = new ethers_1.utils.Interface(require('../../abi/IERC1271.json').abi);\nexports.L1_BRIDGE_ABI = new ethers_1.utils.Interface(require('../../abi/IL1Bridge.json').abi);\nexports.L2_BRIDGE_ABI = new ethers_1.utils.Interface(require('../../abi/IL2Bridge.json').abi);\nexports.BOOTLOADER_FORMAL_ADDRESS = '0x0000000000000000000000000000000000008001';\nexports.CONTRACT_DEPLOYER_ADDRESS = '0x0000000000000000000000000000000000008006';\nexports.L1_MESSENGER_ADDRESS = '0x0000000000000000000000000000000000008008';\nexports.L2_ETH_TOKEN_ADDRESS = '0x000000000000000000000000000000000000800a';\nexports.L1_TO_L2_ALIAS_OFFSET = '0x1111000000000000000000000000000000001111';\nexports.EIP1271_MAGIC_VALUE = '0x1626ba7e';\nexports.EIP712_TX_TYPE = 0x71;\nexports.PRIORITY_OPERATION_L2_TX_TYPE = 0xff;\nexports.MAX_BYTECODE_LEN_BYTES = ((1 << 16) - 1) * 32;\n// The large L2 gas per pubdata to sign. This gas is enough to ensure that\n// any reasonable limit will be accepted. Note, that the operator is NOT required to\n// use the honest value of gas per pubdata and it can use any value up to the one signed by the user.\n// In the future releases, we will provide a way to estimate the current gasPerPubdata.\nexports.DEFAULT_GAS_PER_PUBDATA_LIMIT = 50000;\n// It is possible to provide practically any gasPerPubdataByte for L1->L2 transactions, since\n// the cost per gas will be adjusted respectively. We will use 800 as an relatively optimal value for now.\nexports.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT = 800;\nfunction isETH(token) {\n    return token.toLowerCase() == exports.ETH_ADDRESS || token.toLowerCase() == exports.L2_ETH_TOKEN_ADDRESS;\n}\nexports.isETH = isETH;\nfunction sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n}\nexports.sleep = sleep;\nfunction layer1TxDefaults() {\n    return {\n        queueType: types_1.PriorityQueueType.Deque,\n        opTree: types_1.PriorityOpTree.Full\n    };\n}\nexports.layer1TxDefaults = layer1TxDefaults;\nfunction getHashedL2ToL1Msg(sender, msg, txNumberInBlock) {\n    const encodedMsg = new Uint8Array([\n        0,\n        1,\n        ...ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.hexlify(txNumberInBlock), 2),\n        ...ethers_1.ethers.utils.arrayify(exports.L1_MESSENGER_ADDRESS),\n        ...ethers_1.ethers.utils.zeroPad(sender, 32),\n        ...ethers_1.ethers.utils.arrayify(ethers_1.ethers.utils.keccak256(msg))\n    ]);\n    return ethers_1.ethers.utils.keccak256(encodedMsg);\n}\nexports.getHashedL2ToL1Msg = getHashedL2ToL1Msg;\nfunction getDeployedContracts(receipt) {\n    const addressBytesLen = 40;\n    const deployedContracts = receipt.logs\n        .filter((log) => log.topics[0] == ethers_1.utils.id('ContractDeployed(address,bytes32,address)') &&\n        log.address == exports.CONTRACT_DEPLOYER_ADDRESS)\n        // Take the last topic (deployed contract address as U256) and extract address from it (U160).\n        .map((log) => {\n        const sender = `0x${log.topics[1].slice(log.topics[1].length - addressBytesLen)}`;\n        const bytesCodehash = log.topics[2];\n        const address = `0x${log.topics[3].slice(log.topics[3].length - addressBytesLen)}`;\n        return {\n            sender: ethers_1.utils.getAddress(sender),\n            bytecodeHash: bytesCodehash,\n            deployedAddress: ethers_1.utils.getAddress(address)\n        };\n    });\n    return deployedContracts;\n}\nexports.getDeployedContracts = getDeployedContracts;\nfunction create2Address(sender, bytecodeHash, salt, input) {\n    const prefix = ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.toUtf8Bytes('zksyncCreate2'));\n    const inputHash = ethers_1.ethers.utils.keccak256(input);\n    const addressBytes = ethers_1.ethers.utils\n        .keccak256(ethers_1.ethers.utils.concat([prefix, ethers_1.ethers.utils.zeroPad(sender, 32), salt, bytecodeHash, inputHash]))\n        .slice(26);\n    return ethers_1.ethers.utils.getAddress(addressBytes);\n}\nexports.create2Address = create2Address;\nfunction createAddress(sender, senderNonce) {\n    const prefix = ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.toUtf8Bytes('zksyncCreate'));\n    const addressBytes = ethers_1.ethers.utils\n        .keccak256(ethers_1.ethers.utils.concat([\n        prefix,\n        ethers_1.ethers.utils.zeroPad(sender, 32),\n        ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.hexlify(senderNonce), 32)\n    ]))\n        .slice(26);\n    return ethers_1.ethers.utils.getAddress(addressBytes);\n}\nexports.createAddress = createAddress;\nasync function checkBaseCost(baseCost, value) {\n    if (baseCost.gt(await value)) {\n        throw new Error(`The base cost of performing the priority operation is higher than the provided value parameter ` +\n            `for the transaction: baseCost: ${baseCost}, provided value: ${value}`);\n    }\n}\nexports.checkBaseCost = checkBaseCost;\nfunction serialize(transaction, signature) {\n    var _a;\n    if (transaction.customData == null && transaction.type != exports.EIP712_TX_TYPE) {\n        return ethers_1.utils.serializeTransaction(transaction, signature);\n    }\n    if (!transaction.chainId) {\n        throw Error(\"Transaction chainId isn't set\");\n    }\n    function formatNumber(value, name) {\n        const result = ethers_1.utils.stripZeros(ethers_1.BigNumber.from(value).toHexString());\n        if (result.length > 32) {\n            throw new Error('invalid length for ' + name);\n        }\n        return result;\n    }\n    if (!transaction.from) {\n        throw new Error('Explicitly providing `from` field is reqiured for EIP712 transactions');\n    }\n    const from = transaction.from;\n    const meta = transaction.customData;\n    let maxFeePerGas = transaction.maxFeePerGas || transaction.gasPrice || 0;\n    let maxPriorityFeePerGas = transaction.maxPriorityFeePerGas || maxFeePerGas;\n    const fields = [\n        formatNumber(transaction.nonce || 0, 'nonce'),\n        formatNumber(maxPriorityFeePerGas, 'maxPriorityFeePerGas'),\n        formatNumber(maxFeePerGas, 'maxFeePerGas'),\n        formatNumber(transaction.gasLimit || 0, 'gasLimit'),\n        transaction.to != null ? ethers_1.utils.getAddress(transaction.to) : '0x',\n        formatNumber(transaction.value || 0, 'value'),\n        transaction.data || '0x'\n    ];\n    if (signature) {\n        const sig = ethers_1.utils.splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, 'recoveryParam'));\n        fields.push(ethers_1.utils.stripZeros(sig.r));\n        fields.push(ethers_1.utils.stripZeros(sig.s));\n    }\n    else {\n        fields.push(formatNumber(transaction.chainId, 'chainId'));\n        fields.push('0x');\n        fields.push('0x');\n    }\n    fields.push(formatNumber(transaction.chainId, 'chainId'));\n    fields.push(ethers_1.utils.getAddress(from));\n    // Add meta\n    fields.push(formatNumber(meta.gasPerPubdata || exports.DEFAULT_GAS_PER_PUBDATA_LIMIT, 'gasPerPubdata'));\n    fields.push(((_a = meta.factoryDeps) !== null && _a !== void 0 ? _a : []).map((dep) => ethers_1.utils.hexlify(dep)));\n    if (meta.customSignature && ethers_1.ethers.utils.arrayify(meta.customSignature).length == 0) {\n        throw new Error('Empty signatures are not supported');\n    }\n    fields.push(meta.customSignature || '0x');\n    if (meta.paymasterParams) {\n        fields.push([meta.paymasterParams.paymaster, ethers_1.ethers.utils.hexlify(meta.paymasterParams.paymasterInput)]);\n    }\n    else {\n        fields.push([]);\n    }\n    return ethers_1.utils.hexConcat([[exports.EIP712_TX_TYPE], ethers_1.utils.RLP.encode(fields)]);\n}\nexports.serialize = serialize;\nfunction hashBytecode(bytecode) {\n    // For getting the consistent length we first convert the bytecode to UInt8Array\n    const bytecodeAsArray = ethers_1.ethers.utils.arrayify(bytecode);\n    if (bytecodeAsArray.length % 32 != 0) {\n        throw new Error('The bytecode length in bytes must be divisible by 32');\n    }\n    if (bytecodeAsArray.length > exports.MAX_BYTECODE_LEN_BYTES) {\n        throw new Error(`Bytecode can not be longer than ${exports.MAX_BYTECODE_LEN_BYTES} bytes`);\n    }\n    const hashStr = ethers_1.ethers.utils.sha256(bytecodeAsArray);\n    const hash = ethers_1.ethers.utils.arrayify(hashStr);\n    // Note that the length of the bytecode\n    // should be provided in 32-byte words.\n    const bytecodeLengthInWords = bytecodeAsArray.length / 32;\n    if (bytecodeLengthInWords % 2 == 0) {\n        throw new Error('Bytecode length in 32-byte words must be odd');\n    }\n    const bytecodeLength = ethers_1.ethers.utils.arrayify(bytecodeLengthInWords);\n    // The bytecode should always take the first 2 bytes of the bytecode hash,\n    // so we pad it from the left in case the length is smaller than 2 bytes.\n    const bytecodeLengthPadded = ethers_1.ethers.utils.zeroPad(bytecodeLength, 2);\n    const codeHashVersion = new Uint8Array([1, 0]);\n    hash.set(codeHashVersion, 0);\n    hash.set(bytecodeLengthPadded, 2);\n    return hash;\n}\nexports.hashBytecode = hashBytecode;\nfunction parseTransaction(payload) {\n    function handleAddress(value) {\n        if (value === '0x') {\n            return null;\n        }\n        return ethers_1.utils.getAddress(value);\n    }\n    function handleNumber(value) {\n        if (value === '0x') {\n            return ethers_1.BigNumber.from(0);\n        }\n        return ethers_1.BigNumber.from(value);\n    }\n    function arrayToPaymasterParams(arr) {\n        if (arr.length == 0) {\n            return undefined;\n        }\n        if (arr.length != 2) {\n            throw new Error(`Invalid paymaster parameters, expected to have length of 2, found ${arr.length}`);\n        }\n        return {\n            paymaster: ethers_1.utils.getAddress(arr[0]),\n            paymasterInput: ethers_1.utils.arrayify(arr[1])\n        };\n    }\n    const bytes = ethers_1.utils.arrayify(payload);\n    if (bytes[0] != exports.EIP712_TX_TYPE) {\n        return ethers_1.utils.parseTransaction(bytes);\n    }\n    const raw = ethers_1.utils.RLP.decode(bytes.slice(1));\n    const transaction = {\n        type: exports.EIP712_TX_TYPE,\n        nonce: handleNumber(raw[0]).toNumber(),\n        maxPriorityFeePerGas: handleNumber(raw[1]),\n        maxFeePerGas: handleNumber(raw[2]),\n        gasLimit: handleNumber(raw[3]),\n        to: handleAddress(raw[4]),\n        value: handleNumber(raw[5]),\n        data: raw[6],\n        chainId: handleNumber(raw[10]),\n        from: handleAddress(raw[11]),\n        customData: {\n            gasPerPubdata: handleNumber(raw[12]),\n            factoryDeps: raw[13],\n            customSignature: raw[14],\n            paymasterParams: arrayToPaymasterParams(raw[15])\n        }\n    };\n    const ethSignature = {\n        v: handleNumber(raw[7]).toNumber(),\n        r: raw[8],\n        s: raw[9]\n    };\n    if ((ethers_1.utils.hexlify(ethSignature.r) == '0x' || ethers_1.utils.hexlify(ethSignature.s) == '0x') &&\n        !transaction.customData.customSignature) {\n        return transaction;\n    }\n    if (ethSignature.v !== 0 && ethSignature.v !== 1 && !transaction.customData.customSignature) {\n        throw new Error('Failed to parse signature');\n    }\n    if (!transaction.customData.customSignature) {\n        transaction.v = ethSignature.v;\n        transaction.s = ethSignature.s;\n        transaction.r = ethSignature.r;\n    }\n    transaction.hash = eip712TxHash(transaction, ethSignature);\n    return transaction;\n}\nexports.parseTransaction = parseTransaction;\nfunction getSignature(transaction, ethSignature) {\n    var _a;\n    if (((_a = transaction === null || transaction === void 0 ? void 0 : transaction.customData) === null || _a === void 0 ? void 0 : _a.customSignature) && transaction.customData.customSignature.length) {\n        return ethers_1.ethers.utils.arrayify(transaction.customData.customSignature);\n    }\n    if (!ethSignature) {\n        throw new Error('No signature provided');\n    }\n    const r = ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.arrayify(ethSignature.r), 32);\n    const s = ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.arrayify(ethSignature.s), 32);\n    const v = ethSignature.v;\n    return new Uint8Array([...r, ...s, v]);\n}\nfunction eip712TxHash(transaction, ethSignature) {\n    const signedDigest = signer_1.EIP712Signer.getSignedDigest(transaction);\n    const hashedSignature = ethers_1.ethers.utils.keccak256(getSignature(transaction, ethSignature));\n    return ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.hexConcat([signedDigest, hashedSignature]));\n}\nfunction getL2HashFromPriorityOp(txReceipt, zkSyncAddress) {\n    let txHash = null;\n    for (const log of txReceipt.logs) {\n        if (log.address.toLowerCase() != zkSyncAddress.toLowerCase()) {\n            continue;\n        }\n        try {\n            const priorityQueueLog = exports.ZKSYNC_MAIN_ABI.parseLog(log);\n            if (priorityQueueLog && priorityQueueLog.args.txHash != null) {\n                txHash = priorityQueueLog.args.txHash;\n            }\n        }\n        catch { }\n    }\n    if (!txHash) {\n        throw new Error('Failed to parse tx logs');\n    }\n    return txHash;\n}\nexports.getL2HashFromPriorityOp = getL2HashFromPriorityOp;\nconst ADDRESS_MODULO = ethers_1.BigNumber.from(2).pow(160);\nfunction applyL1ToL2Alias(address) {\n    return ethers_1.ethers.utils.hexlify(ethers_1.ethers.BigNumber.from(address).add(exports.L1_TO_L2_ALIAS_OFFSET).mod(ADDRESS_MODULO));\n}\nexports.applyL1ToL2Alias = applyL1ToL2Alias;\nfunction undoL1ToL2Alias(address) {\n    let result = ethers_1.ethers.BigNumber.from(address).sub(exports.L1_TO_L2_ALIAS_OFFSET);\n    if (result.lt(ethers_1.BigNumber.from(0))) {\n        result = result.add(ADDRESS_MODULO);\n    }\n    return ethers_1.ethers.utils.hexlify(result);\n}\nexports.undoL1ToL2Alias = undoL1ToL2Alias;\n/// Getters data used to correctly initialize the L1 token counterpart on L2\nasync function getERC20GettersData(l1TokenAddress, provider) {\n    const token = typechain_1.IERC20MetadataFactory.connect(l1TokenAddress, provider);\n    const name = await token.name();\n    const symbol = await token.symbol();\n    const decimals = await token.decimals();\n    const coder = new utils_1.AbiCoder();\n    const nameBytes = coder.encode(['string'], [name]);\n    const symbolBytes = coder.encode(['string'], [symbol]);\n    const decimalsBytes = coder.encode(['uint256'], [decimals]);\n    return coder.encode(['bytes', 'bytes', 'bytes'], [nameBytes, symbolBytes, decimalsBytes]);\n}\n/// The method that returns the calldata that will be sent by an L1 ERC20 bridge to its L2 counterpart\n/// during bridging of a token.\nasync function getERC20BridgeCalldata(l1TokenAddress, l1Sender, l2Receiver, amount, provider) {\n    const gettersData = await getERC20GettersData(l1TokenAddress, provider);\n    return exports.L2_BRIDGE_ABI.encodeFunctionData('finalizeDeposit', [\n        l1Sender,\n        l2Receiver,\n        l1TokenAddress,\n        amount,\n        gettersData\n    ]);\n}\nexports.getERC20BridgeCalldata = getERC20BridgeCalldata;\n// The method with similar functionality is already available in ethers.js,\n// the only difference is that we provide additional `try { } catch { }`\n// for error-resilience.\n//\n// It will also pave the road for allowing future EIP-1271 signature verification, by\n// letting our SDK have functionality to verify signatures.\nfunction isECDSASignatureCorrect(address, msgHash, signature) {\n    try {\n        return address == ethers_1.ethers.utils.recoverAddress(msgHash, signature);\n    }\n    catch {\n        // In case ECDSA signature verification has thrown an error,\n        // we simply consider the signature as incorrect.\n        return false;\n    }\n}\nasync function isEIP1271SignatureCorrect(provider, address, msgHash, signature) {\n    const accountContract = new ethers_1.ethers.Contract(address, exports.IERC1271, provider);\n    // This line may throw an exception if the contract does not implement the EIP1271 correctly.\n    // But it may also throw an exception in case the internet connection is lost.\n    // It is the caller's responsibility to handle the exception.\n    const result = await accountContract.isValidSignature(msgHash, signature);\n    return result == exports.EIP1271_MAGIC_VALUE;\n}\nasync function isSignatureCorrect(provider, address, msgHash, signature) {\n    let isContractAccount = false;\n    const code = await provider.getCode(address);\n    isContractAccount = ethers_1.ethers.utils.arrayify(code).length != 0;\n    if (!isContractAccount) {\n        return isECDSASignatureCorrect(address, msgHash, signature);\n    }\n    else {\n        return await isEIP1271SignatureCorrect(provider, address, msgHash, signature);\n    }\n}\n// Returns `true` or `false` depending on whether or not the account abstraction's\n// signature is correct. Note, that while currently it does not do any `async` actions.\n// in the future it will. That's why the `Promise<boolean>` is returned.\nasync function isMessageSignatureCorrect(provider, address, message, signature) {\n    const msgHash = ethers_1.ethers.utils.hashMessage(message);\n    return await isSignatureCorrect(provider, address, msgHash, signature);\n}\nexports.isMessageSignatureCorrect = isMessageSignatureCorrect;\n// Returns `true` or `false` depending on whether or not the account abstraction's\n// EIP712 signature is correct. Note, that while currently it does not do any `async` actions.\n// in the future it will. That's why the `Promise<boolean>` is returned.\nasync function isTypedDataSignatureCorrect(provider, address, domain, types, value, signature) {\n    const msgHash = ethers_1.ethers.utils._TypedDataEncoder.hash(domain, types, value);\n    return await isSignatureCorrect(provider, address, msgHash, signature);\n}\nexports.isTypedDataSignatureCorrect = isTypedDataSignatureCorrect;\nasync function estimateDefaultBridgeDepositL2Gas(providerL1, providerL2, token, amount, to, from, gasPerPubdataByte) {\n    // If the `from` address is not provided, we use a random address, because\n    // due to storage slot aggregation, the gas estimation will depend on the address\n    // and so estimation for the zero address may be smaller than for the sender.\n    from !== null && from !== void 0 ? from : (from = ethers_1.ethers.Wallet.createRandom().address);\n    if (token == exports.ETH_ADDRESS) {\n        return await providerL2.estimateL1ToL2Execute({\n            contractAddress: to,\n            gasPerPubdataByte: gasPerPubdataByte,\n            caller: from,\n            calldata: '0x',\n            l2Value: amount\n        });\n    }\n    else {\n        const l1ERC20BridgeAddresses = (await providerL2.getDefaultBridgeAddresses()).erc20L1;\n        const erc20BridgeAddress = (await providerL2.getDefaultBridgeAddresses()).erc20L2;\n        const calldata = await getERC20BridgeCalldata(token, from, to, amount, providerL1);\n        return await providerL2.estimateL1ToL2Execute({\n            caller: applyL1ToL2Alias(l1ERC20BridgeAddresses),\n            contractAddress: erc20BridgeAddress,\n            gasPerPubdataByte: gasPerPubdataByte,\n            calldata: calldata\n        });\n    }\n}\nexports.estimateDefaultBridgeDepositL2Gas = estimateDefaultBridgeDepositL2Gas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wallet = void 0;\nconst signer_1 = require(\"./signer\");\nconst utils_1 = require(\"./utils\");\nconst ethers_1 = require(\"ethers\");\nconst adapters_1 = require(\"./adapters\");\nclass Wallet extends (0, adapters_1.AdapterL2)((0, adapters_1.AdapterL1)(ethers_1.ethers.Wallet)) {\n    _providerL1() {\n        if (this.providerL1 == null) {\n            throw new Error('L1 provider missing: use `connectToL1` to specify');\n        }\n        return this.providerL1;\n    }\n    _providerL2() {\n        return this.provider;\n    }\n    _signerL1() {\n        return this.ethWallet();\n    }\n    _signerL2() {\n        return this;\n    }\n    ethWallet() {\n        return new ethers_1.ethers.Wallet(this._signingKey(), this._providerL1());\n    }\n    // an alias with a better name\n    async getNonce(blockTag) {\n        return await this.getTransactionCount(blockTag);\n    }\n    connect(provider) {\n        return new Wallet(this._signingKey(), provider, this.providerL1);\n    }\n    connectToL1(provider) {\n        return new Wallet(this._signingKey(), this.provider, provider);\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        const wallet = super.fromMnemonic(mnemonic, path, wordlist);\n        return new Wallet(wallet._signingKey());\n    }\n    static async fromEncryptedJson(json, password, callback) {\n        const wallet = await super.fromEncryptedJson(json, password, callback);\n        return new Wallet(wallet._signingKey());\n    }\n    static fromEncryptedJsonSync(json, password) {\n        const wallet = super.fromEncryptedJsonSync(json, password);\n        return new Wallet(wallet._signingKey());\n    }\n    static createRandom(options) {\n        const wallet = super.createRandom(options);\n        return new Wallet(wallet._signingKey());\n    }\n    constructor(privateKey, providerL2, providerL1) {\n        super(privateKey, providerL2);\n        if (this.provider != null) {\n            const chainId = this.getChainId();\n            // @ts-ignore\n            this.eip712 = new signer_1.EIP712Signer(this, chainId);\n        }\n        this.providerL1 = providerL1;\n    }\n    async populateTransaction(transaction) {\n        var _a, _b;\n        if (transaction.type == null && transaction.customData == null) {\n            // use legacy txs by default\n            transaction.type = 0;\n        }\n        transaction = await super.populateTransaction(transaction);\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            return transaction;\n        }\n        transaction.type = utils_1.EIP712_TX_TYPE;\n        (_a = transaction.value) !== null && _a !== void 0 ? _a : (transaction.value = 0);\n        (_b = transaction.data) !== null && _b !== void 0 ? _b : (transaction.data = '0x');\n        transaction.customData = this._fillCustomData(transaction.customData);\n        transaction.gasPrice = await this.provider.getGasPrice();\n        return transaction;\n    }\n    async signTransaction(transaction) {\n        var _a;\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            if (transaction.type == 2 && transaction.maxFeePerGas == null) {\n                transaction.maxFeePerGas = await this.provider.getGasPrice();\n            }\n            return await super.signTransaction(transaction);\n        }\n        else {\n            (_a = transaction.from) !== null && _a !== void 0 ? _a : (transaction.from = this.address);\n            if (transaction.from.toLowerCase() != this.address.toLowerCase()) {\n                throw new Error('Transaction `from` address mismatch');\n            }\n            transaction.customData.customSignature = await this.eip712.sign(transaction);\n            return (0, utils_1.serialize)(transaction);\n        }\n    }\n    async sendTransaction(transaction) {\n        // Typescript isn't smart enough to recognise that wallet.sendTransaction\n        // calls provider.sendTransaction which returns our extended type and not ethers' one.\n        return (await super.sendTransaction(transaction));\n    }\n}\nexports.Wallet = Wallet;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IAllowListFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IAllowListFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IAllowListFactory = IAllowListFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"target\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"previousMode\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"newMode\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"UpdateAccessMode\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"caller\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"target\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes4\",\n                name: \"functionSig\",\n                type: \"bytes4\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"status\",\n                type: \"bool\",\n            },\n        ],\n        name: \"UpdateCallPermission\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"canCall\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n        ],\n        name: \"getAccessMode\",\n        outputs: [\n            {\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"getTokenDepositLimitData\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bool\",\n                        name: \"depositLimitation\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"depositCap\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct IAllowList.Deposit\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"hasSpecialAccessToCall\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"_accessMode\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"setAccessMode\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address[]\",\n                name: \"_targets\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"enum IAllowList.AccessMode[]\",\n                name: \"_accessMode\",\n                type: \"uint8[]\",\n            },\n        ],\n        name: \"setBatchAccessMode\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address[]\",\n                name: \"_callers\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"address[]\",\n                name: \"_targets\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"bytes4[]\",\n                name: \"_functionSigs\",\n                type: \"bytes4[]\",\n            },\n            {\n                internalType: \"bool[]\",\n                name: \"_enables\",\n                type: \"bool[]\",\n            },\n        ],\n        name: \"setBatchPermissionToCall\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_depositLimitation\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_depositCap\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setDepositLimit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_enable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setPermissionToCall\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IERC20MetadataFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IERC20MetadataFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IERC20MetadataFactory = IERC20MetadataFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEthTokenFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IEthTokenFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IEthTokenFactory = IEthTokenFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Mint\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Withdrawal\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_account\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFromTo\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n        ],\n        name: \"withdraw\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IL1BridgeFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IL1BridgeFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IL1BridgeFactory = IL1BridgeFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"ClaimedFailedDeposit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"DepositInitiated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"WithdrawalFinalized\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_depositSender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TxHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"claimFailedDeposit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l2Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2TxGasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2TxGasPerPubdataByte\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"deposit\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"txHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_message\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"finalizeWithdrawal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"isWithdrawalFinalized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l2TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IL2BridgeFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IL2BridgeFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IL2BridgeFactory = IL2BridgeFactory;\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Sender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l2Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"finalizeDeposit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Bridge\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TokenProxyBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_governor\",\n                type: \"address\",\n            },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"l1Bridge\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l2Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l1TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l2TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l2Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"withdraw\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IZkSyncFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IZkSyncFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IZkSyncFactory = IZkSyncFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"blockHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"commitment\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"BlockCommit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"blockHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"commitment\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"BlockExecution\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksCommitted\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksVerified\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksExecuted\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BlocksRevert\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"previousLastVerifiedBlock\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"currentLastVerifiedBlock\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BlocksVerification\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"CancelUpgradeProposal\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"EthWithdrawalFinalized\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ExecuteUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"Freeze\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"isPorterAvailable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"IsPorterAvailableStatusUpdate\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldGovernor\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewGovernor\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"previousBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"newBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"NewL2BootloaderBytecodeHash\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"previousBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"newBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"NewL2DefaultAccountBytecodeHash\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldPendingGovernor\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newPendingGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewPendingGovernor\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"txId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"txHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint64\",\n                name: \"expirationTimestamp\",\n                type: \"uint64\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"txType\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"from\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"to\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasPerPubdataByteLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"paymaster\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"value\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256[4]\",\n                        name: \"reserved\",\n                        type: \"uint256[4]\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"factoryDeps\",\n                        type: \"uint256[]\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterInput\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"reservedDynamic\",\n                        type: \"bytes\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct IMailbox.L2CanonicalTransaction\",\n                name: \"transaction\",\n                type: \"tuple\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes[]\",\n                name: \"factoryDeps\",\n                type: \"bytes[]\",\n            },\n        ],\n        name: \"NewPriorityRequest\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"oldPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"newPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"NewPriorityTxMaxGasLimit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldVerifier\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newVerifier\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewVerifier\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct VerifierParams\",\n                name: \"oldVerifierParams\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct VerifierParams\",\n                name: \"newVerifierParams\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"NewVerifierParams\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ProposeShadowUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ProposeTransparentUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"SecurityCouncilUpgradeApprove\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"Unfreeze\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"validatorAddress\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"isActive\",\n                type: \"bool\",\n            },\n        ],\n        name: \"ValidatorStatusUpdate\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"acceptGovernor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_proposedUpgradeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"cancelUpgradeProposal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo\",\n                name: \"_lastCommittedBlockData\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"timestamp\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"newStateRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initialStorageChanges\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"repeatedStorageChanges\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"l2Logs\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"l2ArbitraryLengthMessages\",\n                        type: \"bytes[]\",\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"factoryDeps\",\n                        type: \"bytes[]\",\n                    },\n                ],\n                internalType: \"struct IExecutor.CommitBlockInfo[]\",\n                name: \"_newBlocksData\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"commitBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo[]\",\n                name: \"_blocksData\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"executeBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"executeUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"_selector\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"facetAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"facet\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"facetAddresses\",\n        outputs: [\n            {\n                internalType: \"address[]\",\n                name: \"facets\",\n                type: \"address[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_facet\",\n                type: \"address\",\n            },\n        ],\n        name: \"facetFunctionSelectors\",\n        outputs: [\n            {\n                internalType: \"bytes4[]\",\n                name: \"\",\n                type: \"bytes4[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"facets\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"addr\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes4[]\",\n                        name: \"selectors\",\n                        type: \"bytes4[]\",\n                    },\n                ],\n                internalType: \"struct IGetters.Facet[]\",\n                name: \"\",\n                type: \"tuple[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_message\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"finalizeEthWithdrawal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"freezeDiamond\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getCurrentProposalId\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getFirstUnprocessedPriorityTx\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getGovernor\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getL2BootloaderBytecodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getL2DefaultAccountBytecodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPendingGovernor\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPriorityQueueSize\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getProposedUpgradeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getProposedUpgradeTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getSecurityCouncil\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksCommitted\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksExecuted\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksVerified\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalPriorityTxs\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getUpgradeProposalState\",\n        outputs: [\n            {\n                internalType: \"enum UpgradeState\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getVerifier\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getVerifierParams\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct VerifierParams\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getpriorityTxMaxGasLimit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"isApprovedBySecurityCouncil\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"isDiamondStorageFrozen\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"isEthWithdrawalFinalized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_facet\",\n                type: \"address\",\n            },\n        ],\n        name: \"isFacetFreezable\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"isFreezable\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"_selector\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"isFunctionFreezable\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_address\",\n                type: \"address\",\n            },\n        ],\n        name: \"isValidator\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"l2LogsRootHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_gasPrice\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasPerPubdataByteLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"l2TransactionBaseCost\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"priorityQueueFrontOperation\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"canonicalTxHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"expirationTimestamp\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint192\",\n                        name: \"layer2Tip\",\n                        type: \"uint192\",\n                    },\n                ],\n                internalType: \"struct PriorityOperation\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_proposalHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint40\",\n                name: \"_proposalId\",\n                type: \"uint40\",\n            },\n        ],\n        name: \"proposeShadowUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"uint40\",\n                name: \"_proposalId\",\n                type: \"uint40\",\n            },\n        ],\n        name: \"proposeTransparentUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo\",\n                name: \"_prevBlock\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo[]\",\n                name: \"_committedBlocks\",\n                type: \"tuple[]\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"recursiveAggregationInput\",\n                        type: \"uint256[]\",\n                    },\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"serializedProof\",\n                        type: \"uint256[]\",\n                    },\n                ],\n                internalType: \"struct IExecutor.ProofInput\",\n                name: \"_proof\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"proveBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TxHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n            {\n                internalType: \"enum TxStatus\",\n                name: \"_status\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"proveL1ToL2TransactionStatus\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_index\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"l2ShardId\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"isService\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"txNumberInBlock\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"key\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"value\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct L2Log\",\n                name: \"_log\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_proof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"proveL2LogInclusion\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_index\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint16\",\n                        name: \"txNumberInBlock\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct L2Message\",\n                name: \"_message\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_proof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"proveL2MessageInclusion\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_contractL2\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2Value\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_calldata\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasPerPubdataByteLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes[]\",\n                name: \"_factoryDeps\",\n                type: \"bytes[]\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_refundRecipient\",\n                type: \"address\",\n            },\n        ],\n        name: \"requestL2Transaction\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"canonicalTxHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_newLastBlock\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"revertBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_upgradeProposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"securityCouncilUpgradeApprove\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2BootloaderBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"setL2BootloaderBytecodeHash\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2DefaultAccountBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"setL2DefaultAccountBytecodeHash\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_newPendingGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"setPendingGovernor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bool\",\n                name: \"_zkPorterIsAvailable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setPorterAvailability\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_newPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setPriorityTxMaxGasLimit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_validator\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_active\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setValidator\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract Verifier\",\n                name: \"_newVerifier\",\n                type: \"address\",\n            },\n        ],\n        name: \"setVerifier\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct VerifierParams\",\n                name: \"_newVerifierParams\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"setVerifierParams\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"storedBlockHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"unfreezeDiamond\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_proposalId\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_salt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"upgradeProposalHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEthTokenFactory = exports.IAllowListFactory = exports.IL2BridgeFactory = exports.IL1BridgeFactory = exports.IERC20MetadataFactory = exports.IZkSyncFactory = void 0;\nvar IZkSyncFactory_1 = require(\"./IZkSyncFactory\");\nObject.defineProperty(exports, \"IZkSyncFactory\", { enumerable: true, get: function () { return IZkSyncFactory_1.IZkSyncFactory; } });\nvar IERC20MetadataFactory_1 = require(\"./IERC20MetadataFactory\");\nObject.defineProperty(exports, \"IERC20MetadataFactory\", { enumerable: true, get: function () { return IERC20MetadataFactory_1.IERC20MetadataFactory; } });\nvar IL1BridgeFactory_1 = require(\"./IL1BridgeFactory\");\nObject.defineProperty(exports, \"IL1BridgeFactory\", { enumerable: true, get: function () { return IL1BridgeFactory_1.IL1BridgeFactory; } });\nvar IL2BridgeFactory_1 = require(\"./IL2BridgeFactory\");\nObject.defineProperty(exports, \"IL2BridgeFactory\", { enumerable: true, get: function () { return IL2BridgeFactory_1.IL2BridgeFactory; } });\nvar IAllowListFactory_1 = require(\"./IAllowListFactory\");\nObject.defineProperty(exports, \"IAllowListFactory\", { enumerable: true, get: function () { return IAllowListFactory_1.IAllowListFactory; } });\nvar IEthTokenFactory_1 = require(\"./IEthTokenFactory\");\nObject.defineProperty(exports, \"IEthTokenFactory\", { enumerable: true, get: function () { return IEthTokenFactory_1.IEthTokenFactory; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSimulateTxAccessorDeployment = void 0;\nconst simulate_tx_accessor_json_1 = __importDefault(require(\"./assets/v1.3.0/simulate_tx_accessor.json\"));\nconst simulate_tx_accessor_json_2 = __importDefault(require(\"./assets/v1.4.1/simulate_tx_accessor.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (newest to oldest)\nconst accessorDeployments = [\n    simulate_tx_accessor_json_2.default, simulate_tx_accessor_json_1.default\n];\nconst getSimulateTxAccessorDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, accessorDeployments);\n};\nexports.getSimulateTxAccessorDeployment = getSimulateTxAccessorDeployment;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxyFactoryDeployment = void 0;\nconst proxy_factory_json_1 = __importDefault(require(\"./assets/v1.0.0/proxy_factory.json\"));\nconst proxy_factory_json_2 = __importDefault(require(\"./assets/v1.1.1/proxy_factory.json\"));\nconst proxy_factory_json_3 = __importDefault(require(\"./assets/v1.3.0/proxy_factory.json\"));\nconst safe_proxy_factory_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_proxy_factory.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (newest to oldest)\nconst factoryDeployments = [\n    safe_proxy_factory_json_1.default, proxy_factory_json_3.default, proxy_factory_json_2.default, proxy_factory_json_1.default\n];\nconst getProxyFactoryDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, factoryDeployments);\n};\nexports.getProxyFactoryDeployment = getProxyFactoryDeployment;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFallbackHandlerDeployment = exports.getCompatibilityFallbackHandlerDeployment = exports.getDefaultCallbackHandlerDeployment = void 0;\nconst default_callback_handler_json_1 = __importDefault(require(\"./assets/v1.1.1/default_callback_handler.json\"));\nconst compatibility_fallback_handler_json_1 = __importDefault(require(\"./assets/v1.3.0/compatibility_fallback_handler.json\"));\nconst compatibility_fallback_handler_json_2 = __importDefault(require(\"./assets/v1.4.1/compatibility_fallback_handler.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (by preference)\nconst defaultCallbackHandlerDeployments = [\n    default_callback_handler_json_1.default\n];\nconst getDefaultCallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, defaultCallbackHandlerDeployments);\n};\nexports.getDefaultCallbackHandlerDeployment = getDefaultCallbackHandlerDeployment;\n// This is a sorted array (by preference)\nconst compatFallbackHandlerDeployments = [\n    compatibility_fallback_handler_json_2.default, compatibility_fallback_handler_json_1.default\n];\nconst getCompatibilityFallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, compatFallbackHandlerDeployments);\n};\nexports.getCompatibilityFallbackHandlerDeployment = getCompatibilityFallbackHandlerDeployment;\n// This is a sorted array (by preference)\nconst fallbackHandlerDeployments = [\n    compatibility_fallback_handler_json_2.default, compatibility_fallback_handler_json_1.default, default_callback_handler_json_1.default\n];\nconst getFallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, fallbackHandlerDeployments);\n};\nexports.getFallbackHandlerDeployment = getFallbackHandlerDeployment;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./safes\"), exports);\n__exportStar(require(\"./factories\"), exports);\n__exportStar(require(\"./libs\"), exports);\n__exportStar(require(\"./handler\"), exports);\n__exportStar(require(\"./accessors\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSignMessageLibDeployment = exports.getCreateCallDeployment = exports.getMultiSendCallOnlyDeployment = exports.getMultiSendDeployment = void 0;\nconst create_call_json_1 = __importDefault(require(\"./assets/v1.3.0/create_call.json\"));\nconst create_call_json_2 = __importDefault(require(\"./assets/v1.4.1/create_call.json\"));\nconst multi_send_json_1 = __importDefault(require(\"./assets/v1.1.1/multi_send.json\"));\nconst multi_send_json_2 = __importDefault(require(\"./assets/v1.3.0/multi_send.json\"));\nconst multi_send_json_3 = __importDefault(require(\"./assets/v1.4.1/multi_send.json\"));\nconst multi_send_call_only_json_1 = __importDefault(require(\"./assets/v1.3.0/multi_send_call_only.json\"));\nconst multi_send_call_only_json_2 = __importDefault(require(\"./assets/v1.4.1/multi_send_call_only.json\"));\nconst sign_message_lib_json_1 = __importDefault(require(\"./assets/v1.3.0/sign_message_lib.json\"));\nconst sign_message_lib_json_2 = __importDefault(require(\"./assets/v1.4.1/sign_message_lib.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (by preference, currently we use 111 in most cases)\nconst multiSendDeployments = [\n    multi_send_json_3.default, multi_send_json_2.default, multi_send_json_1.default\n];\nconst getMultiSendDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, multiSendDeployments);\n};\nexports.getMultiSendDeployment = getMultiSendDeployment;\n// This is a sorted array (by preference)\nconst multiSendCallOnlyDeployments = [\n    multi_send_call_only_json_2.default, multi_send_call_only_json_1.default\n];\nconst getMultiSendCallOnlyDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, multiSendCallOnlyDeployments);\n};\nexports.getMultiSendCallOnlyDeployment = getMultiSendCallOnlyDeployment;\n// This is a sorted array (by preference)\nconst createCallDeployments = [\n    create_call_json_2.default, create_call_json_1.default\n];\nconst getCreateCallDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, createCallDeployments);\n};\nexports.getCreateCallDeployment = getCreateCallDeployment;\nconst signMessageLibDeployments = [\n    sign_message_lib_json_2.default, sign_message_lib_json_1.default\n];\nconst getSignMessageLibDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, signMessageLibDeployments);\n};\nexports.getSignMessageLibDeployment = getSignMessageLibDeployment;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSafeL2SingletonDeployment = exports._safeL2Deployments = exports.getSafeSingletonDeployment = exports._safeDeployments = void 0;\nconst safe_l2_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_l2.json\"));\nconst safe_json_1 = __importDefault(require(\"./assets/v1.4.1/safe.json\"));\nconst gnosis_safe_l2_json_1 = __importDefault(require(\"./assets/v1.3.0/gnosis_safe_l2.json\"));\nconst gnosis_safe_json_1 = __importDefault(require(\"./assets/v1.3.0/gnosis_safe.json\"));\nconst gnosis_safe_json_2 = __importDefault(require(\"./assets/v1.2.0/gnosis_safe.json\"));\nconst gnosis_safe_json_3 = __importDefault(require(\"./assets/v1.1.1/gnosis_safe.json\"));\nconst gnosis_safe_json_4 = __importDefault(require(\"./assets/v1.0.0/gnosis_safe.json\"));\nconst utils_1 = require(\"./utils\");\n// This is a sorted array (newest to oldest), exported for tests\nexports._safeDeployments = [\n    safe_json_1.default, gnosis_safe_json_1.default, gnosis_safe_json_2.default, gnosis_safe_json_3.default, gnosis_safe_json_4.default\n];\nconst getSafeSingletonDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, exports._safeDeployments);\n};\nexports.getSafeSingletonDeployment = getSafeSingletonDeployment;\n// This is a sorted array (newest to oldest), exported for tests\nexports._safeL2Deployments = [\n    safe_l2_json_1.default, gnosis_safe_l2_json_1.default\n];\nconst getSafeL2SingletonDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, exports._safeL2Deployments);\n};\nexports.getSafeL2SingletonDeployment = getSafeL2SingletonDeployment;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findDeployment = void 0;\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\nconst DEFAULT_FILTER = { released: true };\nconst findDeployment = (criteria = DEFAULT_FILTER, deployments) => {\n    const criteriaWithDefaults = Object.assign(Object.assign({}, DEFAULT_FILTER), criteria);\n    return deployments.find((deployment) => {\n        if (typeof criteriaWithDefaults.version !== 'undefined' && !(0, satisfies_1.default)(deployment.version, criteriaWithDefaults.version))\n            return false;\n        if (typeof criteriaWithDefaults.released === 'boolean' && deployment.released != criteriaWithDefaults.released)\n            return false;\n        if (criteriaWithDefaults.network && !deployment.networkAddresses[criteriaWithDefaults.network])\n            return false;\n        return true;\n    });\n};\nexports.findDeployment = findDeployment;\n",null,null,null,"module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\n/**\n * Returns true if the bloom is a valid bloom\n * @param bloom The bloom\n */\nfunction isBloom(bloom) {\n    if (typeof bloom !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    }\n    if (/^(0x)?[0-9a-f]{512}$/.test(bloom) ||\n        /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n}\nexports.isBloom = isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param value The value\n */\nfunction isInBloom(bloom, value) {\n    if (typeof value === 'object' && value.constructor === Uint8Array) {\n        value = utils_1.bytesToHex(value);\n    }\n    const hash = utils_1.keccak256(value).replace('0x', '');\n    for (let i = 0; i < 12; i += 4) {\n        // calculate bit position in bloom filter that must be active\n        const bitpos = ((parseInt(hash.substr(i, 2), 16) << 8) +\n            parseInt(hash.substr(i + 2, 2), 16)) &\n            2047;\n        // test if bitpos in bloom is active\n        const code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\n        const offset = 1 << bitpos % 4;\n        if ((code & offset) !== offset) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isInBloom = isInBloom;\n/**\n * Code points to int\n * @param codePoint The code point\n */\nfunction codePointToInt(codePoint) {\n    if (codePoint >= 48 && codePoint <= 57) {\n        /* ['0'..'9'] -> [0..9] */\n        return codePoint - 48;\n    }\n    if (codePoint >= 65 && codePoint <= 70) {\n        /* ['A'..'F'] -> [10..15] */\n        return codePoint - 55;\n    }\n    if (codePoint >= 97 && codePoint <= 102) {\n        /* ['a'..'f'] -> [10..15] */\n        return codePoint - 87;\n    }\n    throw new Error('invalid bloom');\n}\n/**\n * Returns true if the ethereum users address is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param address the address to test\n */\nfunction isUserEthereumAddressInBloom(bloom, ethereumAddress) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isAddress(ethereumAddress)) {\n        throw new Error(`Invalid ethereum address given: \"${ethereumAddress}\"`);\n    }\n    // you have to pad the ethereum address to 32 bytes\n    // else the bloom filter does not work\n    // this is only if your matching the USERS\n    // ethereum address. Contract address do not need this\n    // hence why we have 2 methods\n    // (0x is not in the 2nd parameter of padleft so 64 chars is fine)\n    const address = utils_1.padLeft(ethereumAddress, 64);\n    return isInBloom(bloom, address);\n}\nexports.isUserEthereumAddressInBloom = isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param contractAddress the contract address to test\n */\nfunction isContractAddressInBloom(bloom, contractAddress) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isAddress(contractAddress)) {\n        throw new Error(`Invalid contract address given: \"${contractAddress}\"`);\n    }\n    return isInBloom(bloom, contractAddress);\n}\nexports.isContractAddressInBloom = isContractAddressInBloom;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param topic the topic encoded hex\n */\nfunction isTopicInBloom(bloom, topic) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isTopic(topic)) {\n        throw new Error('Invalid topic');\n    }\n    return isInBloom(bloom, topic);\n}\nexports.isTopicInBloom = isTopicInBloom;\n/**\n * Checks if its a valid topic\n * @param topic encoded hex topic\n */\nfunction isTopic(topic) {\n    if (typeof topic !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{64}$/.test(topic) ||\n        /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n}\nexports.isTopic = isTopic;\n/**\n * Is valid address\n * @param address The address\n */\nfunction isAddress(address) {\n    if (typeof address !== 'string') {\n        return false;\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        return true;\n    }\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        return true;\n    }\n    return false;\n}\nexports.isAddress = isAddress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha3_1 = require(\"@noble/hashes/sha3\");\n/**\n * Keccak256 hash\n * @param data The data\n */\nfunction keccak256(data) {\n    return bytesToHex(sha3_1.keccak_256(toByteArray(data)));\n}\nexports.keccak256 = keccak256;\n/**\n * Adding padding to string on the left\n * @param value The value\n * @param chars The chars\n */\nexports.padLeft = (value, chars) => {\n    const hasPrefix = /^0x/i.test(value) || typeof value === 'number';\n    value = value.toString().replace(/^0x/i, '');\n    const padding = chars - value.length + 1 >= 0 ? chars - value.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join('0') + value;\n};\n/**\n * Convert bytes to hex\n * @param bytes The bytes\n */\nfunction bytesToHex(bytes) {\n    const hex = [];\n    for (let i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xf).toString(16));\n    }\n    return `0x${hex.join('').replace(/^0+/, '')}`;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * To byte array\n * @param value The value\n */\nfunction toByteArray(value) {\n    if (value == null) {\n        throw new Error('cannot convert null value to array');\n    }\n    if (typeof value === 'string') {\n        const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            throw new Error('invalid hexidecimal string');\n        }\n        if (match[1] !== '0x') {\n            throw new Error('hex string must have 0x prefix');\n        }\n        value = value.substring(2);\n        if (value.length % 2) {\n            value = '0' + value;\n        }\n        const result = [];\n        for (let i = 0; i < value.length; i += 2) {\n            result.push(parseInt(value.substr(i, 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isByteArray(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    throw new Error('invalid arrayify value');\n}\nexports.toByteArray = toByteArray;\n/**\n * Is byte array\n * @param value The value\n */\nfunction isByteArray(value) {\n    if (!value ||\n        // tslint:disable-next-line: radix\n        parseInt(String(value.length)) != value.length ||\n        typeof value === 'string') {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        // tslint:disable-next-line: radix\n        if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Add slice to array\n * @param array The array\n */\nfunction addSlice(array) {\n    if (array.slice !== undefined) {\n        return array;\n    }\n    array.slice = () => {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\n","import { Hash } from \"crypto\";\n\nexport function createHashFunction(\n  hashConstructor: () => Hash\n): (msg: Buffer) => Buffer {\n  return msg => {\n    const hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n","import { createHashFunction } from \"./hash-utils\";\n\nconst createKeccakHash = require(\"keccak\");\n\nexport const keccak224 = createHashFunction(() =>\n  createKeccakHash(\"keccak224\")\n);\n\nexport const keccak256 = createHashFunction(() =>\n  createKeccakHash(\"keccak256\")\n);\n\nexport const keccak384 = createHashFunction(() =>\n  createKeccakHash(\"keccak384\")\n);\n\nexport const keccak512 = createHashFunction(() =>\n  createKeccakHash(\"keccak512\")\n);\n","const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n","import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Emitter = require('emitter');\n\nfunction Stream() {\n  Emitter.call(this);\n}\nStream.prototype = new Emitter();\nmodule.exports = Stream;\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (!this.hasListeners('error')) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.off('data', ondata);\n    dest.off('drain', ondrain);\n\n    source.off('end', onend);\n    source.off('close', onclose);\n\n    source.off('error', onerror);\n    dest.off('error', onerror);\n\n    source.off('end', cleanup);\n    source.off('close', cleanup);\n\n    dest.off('end', cleanup);\n    dest.off('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('end', cleanup);\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n}\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (typeof error === 'string') {\n        error = new Error(error);\n    }\n    if (typeof callback === 'function') {\n        callback(error, optionalData);\n    }\n    if (typeof reject === 'function') {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (typeof emitter.listeners === 'function' &&\n                emitter.listeners('error').length) || typeof callback === 'function') {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && typeof emitter.emit === 'function') {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (Array.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.slice(i, i + 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n * Block tag `safe` and `block number` combination param is not supported\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    // Increasing order: (genesis = earliest), safe, (finalized ~ latest), pending\n    // safe vs block-num cant be compared as block number provided can be on left or right side of safe tag, until safe tag block number is extracted and compared\n    if (a === b) {\n        return 0;\n    }\n    else if ((\"genesis\" === a || \"earliest\" === a || 0 === a) && (\"genesis\" === b || \"earliest\" === b || 0 === b)) {\n        return 0;\n    }\n    else if (\"genesis\" === a || \"earliest\" === a || a === 0) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" === b || \"earliest\" === b || b === 0) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a === \"latest\" || a === \"finalized\") {\n        if (b === \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\" || b === \"finalized\") {\n        if (a === \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a === \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b === \"pending\") {\n        return -1;\n    }\n    else if (a === \"safe\" || b === \"safe\") {\n        // either a or b is \"safe\" and the other one did not fall into any of the conditions above, so the other one is a number\n        return undefined;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers,\n    toNumber: utils.toNumber\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (!!arg && typeof arg === 'object' && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (Array.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (Array.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar ethereumjsUtil = require('@ethereumjs/util');\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\nvar { keccak256 } = require('ethereum-cryptography/keccak.js');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.slice(i, i + 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation.\n * However, if the value is larger than the maximum safe integer, returns the value as a string.\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @param {Boolean} bigIntOnOverflow - if true, return the hex value in case of overflow\n * @return {Number|String}\n */\nvar hexToNumber = function (value, bigIntOnOverflow = false) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    const n = toBN(value);\n    if (bigIntOnOverflow && (n > Number.MAX_SAFE_INTEGER || n < Number.MIN_SAFE_INTEGER)) {\n        return BigInt(n);\n    }\n    return n.toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if ((value === null || value === undefined)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.slice(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.slice(c, c + 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (typeof value === 'boolean') {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (typeof value === 'object' && !!value && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (typeof value === 'string') {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = ethereumjsUtil.toBuffer(value);\n    }\n    else if (typeof value === 'string') {\n        // Assume value is an arbitrary string\n        value = Buffer.from(value, 'utf-8');\n    }\n    var returnValue = ethereumjsUtil.bufferToHex(keccak256(value));\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = keccak256;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\n/**\n * Auto converts any given value into it's hex representation,\n * then converts hex to number.\n *\n * @method toNumber\n * @param {String|Number|BN} value\n * @param {Boolean} bigIntOnOverflow - if true, return the hex value in case of overflow\n * @return {Number|String}\n */\nvar toNumber = function (value, bigIntOnOverflow = false) {\n    return typeof value === 'number' ? value : hexToNumber(toHex(value), bigIntOnOverflow);\n};\n// 1.x currently accepts 0x... strings, bn.js after update doesn't. it would be a breaking change\nvar BNwrapped = function (value) {\n    // check negative\n    if (typeof value == \"string\" && value.includes(\"0x\")) {\n        const [negative, hexValue] = value.toLocaleLowerCase().startsWith('-') ? [\"-\", value.slice(3)] : [\"\", value.slice(2)];\n        return new BN(negative + hexValue, 16);\n    }\n    else {\n        return new BN(value);\n    }\n};\nObject.setPrototypeOf(BNwrapped, BN);\nObject.setPrototypeOf(BNwrapped.prototype, BN.prototype);\nmodule.exports = {\n    BN: BNwrapped,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw,\n    toNumber: toNumber\n};\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}\nmodule.exports = _objectDestructuringEmpty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["rlp_1","require","keccak_1","secp256k1_1","utils_1","bytes_1","constants_1","helpers_1","internal_1","_0n","BigInt","Account","nonce","arguments","length","undefined","balance","storageRoot","KECCAK256_RLP","codeHash","KECCAK256_NULL","_classCallCheck","this","_validate","_createClass","key","value","Error","bigIntToUnpaddedBuffer","Buffer","from","RLP","encode","bufArrToArr","raw","equals","accountData","bufferToBigInt","toBuffer","serialized","values","arrToBufArr","decode","Uint8Array","Array","isArray","fromValuesArray","_values","_slicedToArray","exports","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","toString","buf","hash","bytesToHex","keccak256","ret","i","parseInt","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","slice","salt","initCode","concat","privateKey","secp256k1","utils","isValidPrivateKey","publicKey","sanitize","ProjectivePoint","fromHex","pubKey","toRawBytes","pubToAddress","fromPrivateKey","publicToAddress","privateToPublic","addr","zeros","bufferToHex","accountBodyFromSlim","body","_body","zeroAddress","emptyUint8Arr","_body2","accountBody","account_1","Address","zero","rangeMin","rangeMax","str","isBuffer","privateToAddress","generateAddress","bigIntToBuffer","generateAddress2","_regeneratorRuntime","_get","_getPrototypeOf","_inherits","_createSuper","_asyncToGenerator","_asyncIterator","_runInSeries","mark","_callee","context","tasks","data","error","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_loop","_iterator","_step","wrap","_context2","prev","next","task","_context","call","Promise","resolve","reject","t0","stop","sent","done","delegateYield","t1","return","finish","apply","AsyncEventEmitter","_events_1$EventEmitte","_super","event","_self$_events$event","_len","args","_key","callback","self","listeners","_events","fn","_x","_x2","_x3","runInSeries","then","catch","listenerCount","listener","g","TypeError","removeListener","on","_this$_events$event","unshift","target","beforeOrAfter","_this$_events$event2","index","add","splice","prototype","maxListeners","EventEmitter","Number","isSafeInteger","hex","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","a","first","assertIsArray","v","isHexString","intToBuffer","n","toArray","num","res","asIntN","asUintN","isHexPrefixed","buffer","maxLength","bufferStr","replace","ba","array","push","baToJSON","_i","_Object$entries","Object","entries","_Object$entries$_i","k","arr","map","unpadBuffer","buffer_1","CURVE","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_S","nibbles","bi","ni","terminator","hasTerminator","subarray","nibblesToBytes","l","b","compact","base","bytesToNibbles","chop","input","__exportStar","enumerable","get","arrayContainsArray","fromAscii","fromUtf8","getBinarySize","getKeys","toAscii","byteLength","superset","subset","some","indexOf","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","allowEmpty","result","match","Lock","permits","promiseResolverQueue","_acquire","_this","abrupt","resolver","console","warn","nextResolver","shift","micro_ftch_1","fetchFromProvider","_ref","url","default","headers","type","method","jsonrpc","id","provider","_provider$connection","connection","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sig","sign","toCompactRawBytes","r","s","signature","setLengthLeft","senderPubKey","Signature","fromCompact","addRecoveryBit","recoverPublicKey","ss","bufferToInt","homesteadOrLater","rBigInt","sBigInt","SECP256K1_ORDER","SECP256K1_ORDER_DIV_2","message","TypeOutput","outputType","output","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","address_1","types_1","Withdrawal","validatorIndex","amount","toBufferArray","bigIntToHex","withdrawalData","indexData","validatorIndexData","addressData","amountData","toType","withdrawalArray","_withdrawalArray","fromWithdrawalData","withdrawal","alloc","hmac_1","weierstrass_js_1","getHash","hmac","msgs","concatBytes","randomBytes","curveDef","defHash","create","weierstrass","_objectSpread","freeze","modular_js_1","utils_js_1","_1n","c","bits","constTimeNegate","condition","item","neg","negate","opts","W","windows","Math","ceil","windowSize","pow","unsafeLadder","elm","p","ZERO","d","double","precomputeWindow","_opts","points","window","wNAF","precomputes","_opts2","f","BASE","mask","maxNumber","shiftBy","offset","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","set","curve","validateField","Fp","validateObject","h","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","os2ip","bytesToNumberBE","i2osp","strxor","abytes","isBytes","isNum","expand_message_xmd","DST","lenInBytes","H","utf8ToBytes","b_in_bytes","outputLen","r_in_bytes","blockLen","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xof","dkLen","update","digest","hash_to_field","count","options","m","expand","_DST","prb","dst","validateDST","log2p","L","len_in_bytes","u","j","elm_offset","tv","mod","field","COEFF","reverse","x","y","_COEFF$map","val","reduce","acc","mul","_COEFF$map2","xNum","xDen","yNum","yDen","div","Point","mapToCurve","def","hashToCurve","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","_2n","_3n","_4n","_5n","_8n","power","modulo","invert","number","q","tonelliShanks","Q","S","Z","legendreC","p1div4","root","eql","sqr","Q1div2","ONE","t2","ge","FpSqrt","c1","n2","nv","sub","FIELD_FIELDS","FpPow","FpInvertBatch","nums","tmp","lastMultiplied","is0","inverted","inv","reduceRight","_nBitLength","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","MASK","BYTES","BITS","lhs","rhs","legendreConst","bitLen","isLE","redef","_nLength","sqrtP","bitMask","isValid","isOdd","sqrN","addN","subN","mulN","sqrt","invertBatch","lst","cmov","toBytes","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","groupOrder","hashLen","ensureBytes","minLen","len","fieldLen","reduced","constructor","name","hexes","_","padStart","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","hi","n1","sum","pad","title","expectedLength","diff","TextEncoder","pos","u8n","u8fr","qByteLen","hmacFn","reset","reseed","seed","gen","out","sl","pred","validatorFns","bigint","function","boolean","string","stringOrUint8Array","object","validators","optValidators","checkField","fieldName","isOptional","checkVal","_i2","_i3","_Object$entries2","_Object$entries2$_i","ut","curve_js_1","b2n","h2b","Err","_Error","DERErr","_wrapNativeSuper","_parseInt","E","DER","toSig","_exports$DER$_parseIn","sBytes","_exports$DER$_parseIn2","hexFromSig","shl","rhl","rl","weierstrassPoints","validateBasic","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","includes","pointPrecomputes","Map","assertPrjPoint","other","px","py","pz","delete","_this$toAffine","left","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t3","t4","t5","wnaf","toInv","I","_endo$splitScalar","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","_endo$splitScalar2","_this$wNAF","f1p","_this$wNAF2","f2p","_this$wNAF3","normalizeZ","G","multiply","multiplyUnsafe","iz","z","ax","ay","zz","cofactor","isCompressed","_bits","SWUFpSqrtRatio","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","sqrtRatio","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","y2","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","_weierstrassPoints","cat","hasEvenY","head","numToNByteStr","isBiggerThanHalfOrder","slcNum","to","rec","radj","R","ir","u2","multiplyAndAddUnsafe","hasHighS","toDERHex","toCompactHex","_exports$DER$toSig","randomPrivateKey","mapHashToField","precompute","_setWindowSize","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","prehash","ent","extraEntropy","h1int","seedArgs","k2sig","kBytes","ik","normS","normalizeS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","privKey","_prepSig","C","createHmacDrbg","drbg","verify","_Point$BASE$multiplyA","sg","_sig","fromDER","derError","_sig2","is","A","B","tv6","_sqrtRatio","sha256_1","hash_to_curve_js_1","_shortw_utils_js_1","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","Field","createCurve","a1","b1","a2","POW_2_128","sha256","fe","TAGGED_HASH_PREFIXES","taggedHash","tag","tagP","tagH","messages","pointToBytes","numTo32b","modP","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","_len2","_key2","schnorrGetPublicKey","schnorrSign","auxRand","_schnorrGetExtPubKey","t","rand","k_","_schnorrGetExtPubKey2","rx","schnorrVerify","pub","isoMap","isogenyMap","mapSWU","mapToCurveSimpleSWU","htf","createHasher","scalars","_mapSWU","bool","exists","instance","checkFinished","destroyed","finished","min","assert","_assert_js_1","SHA2","_utils_js_1$Hash","padOffset","view","createView","take","process","dataView","roundClean","byteOffset","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","state","digestInto","destroy","_to","_toConsumableArray","Hash","U32_MASK64","fromBig","split","le","Ah","Uint32Array","Al","_fromBig","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","globalThis","crypto","HMAC","iHash","oHash","getPrototypeOf","_cloneInto","_sha2_js_1","Maj","SHA256_K","IV","SHA256_W","SHA256","_sha2_js_1$SHA","D","F","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","_SHA","_super2","_this2","wrapConstructor","_u64_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","_ref3","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","u32","keccak","bufferOut","writeInto","xofInto","genShake","wrapXOFConstructorWithOpts","crypto_1","floor","DataView","word","nextTick","_asyncLoop","_callee2","iters","tick","cb","ts","Date","now","toStr","defaults","assign","hashCons","hashC","bytesLength","getRandomValues","defineProperty","keccak512","keccak384","keccak224","sha3_1","wrapHash","keccak_224","keccak_256","keccak_384","keccak_512","__importDefault","__esModule","equalsBytes","bytesToUtf8","toHex","assertBytes","assertBool","_assert_1","utils_2","TextDecoder","sliced","startsWith","webCrypto","nodeRequire","module","bind","node","web","byteSwap32","byteSwap","OperationType","shortName","TEST_NETWORK","networks","web3_utils_1","config_1","parseEip3770Address","fullAddress","parts","getEip3770NetworkPrefixFromChainId","network","find","isValidEip3770NetworkPrefix","validateEip3770NetworkPrefix","currentChainId","isCurrentNetworkPrefix","validateEthereumAddress","isHexStrict","isAddress","_parseEip3770Address","satisfies_1","EQ_OR_GT_1_3_0","getEip712MessageTypes","safeVersion","EIP712Domain","EIP712_DOMAIN","EIP712_DOMAIN_BEFORE_V130","SafeTx","safeAddress","safeTransactionData","eip712WithChainId","typedData","types","domain","verifyingContract","primaryType","safeTxGas","baseGas","gasPrice","SAFE_FEATURES","SAFE_FEATURES_BY_VERSION","_defineProperty","_SAFE_FEATURES_BY_VER","SAFE_TX_GAS_OPTIONAL","SAFE_TX_GUARDS","SAFE_FALLBACK_HANDLER","ETH_SIGN","feature","version","bignumber_1","safe_core_sdk_types_1","safe_core_sdk_utils_1","contractManager_1","fallbackHandlerManager_1","guardManager_1","moduleManager_1","ownerManager_1","signatures_1","SafeSignature_1","SafeTransaction_1","Safe","_Safe_ethAdapter","_Safe_contractManager","_Safe_ownerManager","_Safe_moduleManager","_Safe_guardManager","_Safe_fallbackHandlerManager","_init","ethAdapter","isL1SafeMasterCopy","contractNetworks","__classPrivateFieldSet","__classPrivateFieldGet","safeContract","_connect","_ref2","getAddress","multiSendContract","multiSendCallOnlyContract","_getContractVersion","_callee3","_context3","getVersion","_getOwners","_callee4","_context4","getOwners","_getNonce","_callee5","_context5","getNonce","_getThreshold","_callee6","_context6","getThreshold","_getChainId","_callee7","_context7","getChainId","_getBalance","_callee8","_context8","getBalance","getFallbackHandler","_getGuard","_callee9","_context9","getGuard","_getModules","_callee10","_context10","getModules","_isModuleEnabled","_callee11","moduleAddress","_context11","isModuleEnabled","_isOwner","_callee12","ownerAddress","_context12","isOwner","_x4","_createTransaction","_callee13","_ref3$onlyCalls","onlyCalls","newTransaction","multiSendData","multiSendTransaction","standardizedTransaction","_context13","isMetaTransactionArray","encodeMultiSendData","standardizeMetaTransactionData","operation","DelegateCall","standardizeSafeTransactionData","_x5","_createRejectionTransaction","_callee14","_context14","createTransaction","_x6","_copyTransaction","_callee15","safeTransaction","signedSafeTransaction","_context15","signatures","forEach","addSignature","_x7","_getTransactionHash","_callee16","txHash","_context16","getTransactionHash","_x8","_signTransactionHash","_callee17","_context17","generateSignature","_x9","_signTypedData","_callee18","methodVersion","safeTransactionEIP712Args","_context18","getContractVersion","getEthAdapter","generateEIP712Signature","_x10","_x11","_signTransaction","_callee19","signingMethod","transaction","owners","signerAddress","_args19","_context19","isSafeMultisigTransactionResponse","toSafeTransactionType","getSignerAddress","owner","sameString","signTypedData","hasSafeFeature","signTransactionHash","_x12","_approveTransactionHash","_callee20","_context20","gas","gasLimit","approveHash","_x13","_x14","_getOwnersWhoApprovedTx","_callee21","ownersWhoApproved","_context21","_createForOfIteratorHelper","approvedHashes","gt","_x15","_createEnableFallbackHandlerTx","_callee22","fallbackHandlerAddress","_context22","encodeEnableFallbackHandlerData","_x16","_x17","_createDisableFallbackHandlerTx","_callee23","_context23","encodeDisableFallbackHandlerData","_x18","_createEnableGuardTx","_callee24","guardAddress","_context24","encodeEnableGuardData","_x19","_x20","_createDisableGuardTx","_callee25","_context25","encodeDisableGuardData","_x21","_createEnableModuleTx","_callee26","_context26","encodeEnableModuleData","_x22","_x23","_createDisableModuleTx","_callee27","_context27","encodeDisableModuleData","_x24","_x25","_createAddOwnerTx","_callee28","_ref4","threshold","_context28","encodeAddOwnerWithThresholdData","_x26","_x27","_createRemoveOwnerTx","_callee29","_ref5","_context29","encodeRemoveOwnerData","_x28","_x29","_createSwapOwnerTx","_callee30","_ref6","oldOwnerAddress","newOwnerAddress","_context30","encodeSwapOwnerData","_x30","_x31","_createChangeThresholdTx","_callee31","_context31","encodeChangeThresholdData","_x32","_x33","_toSafeTransactionType","_callee32","serviceTransactionResponse","_context32","gasToken","refundReceiver","confirmations","confirmation","_x34","_isValidTransaction","_callee33","ownersWhoApprovedTx","_iterator2","_step2","isTxValid","_context33","copyTransaction","getOwnersWhoApprovedTx","generatePreValidatedSignature","err","isValidTransaction","_x35","_x36","_executeTransaction","_callee34","_iterator3","_step3","signaturesMissing","txResponse","_context34","size","BigNumber","isZero","execTransaction","_x37","_x38","_create","_callee35","_ref7","safeSdk","_context35","init","_x39","safeMasterCopyVersion","safeMasterCopyL2Version","safeProxyFactoryVersion","compatibilityFallbackHandler","multiSendVersion","multiSendCallOnlyVersion","signMessageLibVersion","createCallVersion","safe_deployments_1","getSafeContractDeployment","filters","safeDeploymentsVersions","released","safeDeploymentsL1ChainIds","getSafeSingletonDeployment","getSafeL2SingletonDeployment","getCompatibilityFallbackHandlerContractDeployment","getCompatibilityFallbackHandlerDeployment","getMultiSendCallOnlyContractDeployment","getMultiSendCallOnlyDeployment","getMultiSendContractDeployment","getMultiSendDeployment","getSafeProxyFactoryContractDeployment","getProxyFactoryDeployment","getSignMessageLibContractDeployment","getSignMessageLibDeployment","getCreateCallContractDeployment","getCreateCallDeployment","_getSafeContract","customSafeAddress","customContracts","singletonDeployment","gnosisSafeContract","getSafeContract","customContractAddress","safeMasterCopyAddress","customContractAbi","safeMasterCopyAbi","isContractDeployed","_getProxyFactoryContract","proxyFactoryDeployment","safeProxyFactoryContract","getSafeProxyFactoryContract","safeProxyFactoryAddress","safeProxyFactoryAbi","_getCompatibilityFallbackHandlerContract","fallbackHandlerDeployment","fallbackHandlerContract","getCompatibilityFallbackHandlerContract","fallbackHandlerAbi","_getMultiSendContract","multiSendDeployment","getMultiSendContract","multiSendAddress","multiSendAbi","_getMultiSendCallOnlyContract","multiSendCallOnlyDeployment","getMultiSendCallOnlyContract","multiSendCallOnlyAddress","multiSendCallOnlyAbi","_getSignMessageLibContract","signMessageLibDeployment","signMessageLibContract","getSignMessageLibContract","signMessageLibAddress","signMessageLibAbi","_getCreateCallContract","createCallDeployment","createCallContract","getCreateCallContract","createCallAddress","createCallAbi","Safe_1","safeFactory_1","safeDeploymentContracts_1","ContractManager","_ContractManager_contractNetworks","_ContractManager_isL1SafeMasterCopy","_ContractManager_safeContract","_ContractManager_multiSendContract","_ContractManager_multiSendCallOnlyContract","temporarySafeContract","SAFE_LAST_VERSION","t6","t7","t8","t9","t10","t11","contractManager","FallbackHandlerManager","_FallbackHandlerManager_ethAdapter","_FallbackHandlerManager_safeContract","_FallbackHandlerManager_slot","isZeroAddress","currentFallbackHandler","newFallbackHandlerAddress","_getFallbackHandler","getStorageAt","_encodeEnableFallbackHandlerData","validateFallbackHandlerAddress","validateFallbackHandlerIsNotEnabled","_encodeDisableFallbackHandlerData","validateFallbackHandlerIsEnabled","ZERO_ADDRESS","GuardManager","_GuardManager_ethAdapter","_GuardManager_safeContract","_GuardManager_slot","currentGuard","newGuardAddress","_encodeEnableGuardData","validateGuardAddress","validateGuardIsNotEnabled","_encodeDisableGuardData","validateGuardIsEnabled","ModuleManager","_ModuleManager_ethAdapter","_ModuleManager_safeContract","isRestrictedAddress","modules","findIndex","moduleIndex","_encodeEnableModuleData","validateModuleAddress","validateModuleIsNotEnabled","_encodeDisableModuleData","prevModuleAddress","validateModuleIsEnabled","SENTINEL_ADDRESS","OwnerManager","_OwnerManager_ethAdapter","_OwnerManager_safeContract","errorMessage","numOwners","ownerIndex","_encodeAddOwnerWithThresholdData","newThreshold","validateOwnerAddress","validateAddressIsNotOwner","validateThreshold","_encodeRemoveOwnerData","prevOwnerAddress","validateAddressIsOwner","_encodeSwapOwnerData","oldOwnerIndex","_encodeChangeThresholdData","ethereumjs_util_1","zksync_web3_1","ZKSYNC_MAINNET","ZKSYNC_TESTNET","ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE","deployedBytecodeHash","SafeFactory","_SafeFactory_contractNetworks","_SafeFactory_isL1SafeMasterCopy","_SafeFactory_safeVersion","_SafeFactory_ethAdapter","_SafeFactory_safeProxyFactoryContract","_SafeFactory_gnosisSafeContract","getProxyFactoryContract","_encodeSetupCallData","_ref2$to","_ref2$data","fallbackHandler","_ref2$paymentToken","paymentToken","_ref2$payment","payment","_ref2$paymentReceiver","paymentReceiver","EMPTY_DATA","_predictSafeAddress","safeAccountConfig","safeDeploymentConfig","initializer","saltNonce","encodedNonce","proxyCreationCode","bytecodeHash","constructorData","proxyAddress","validateSafeAccountConfig","validateSafeDeploymentConfig","encodeSetupCallData","encodeParameters","create2Address","getChecksummedAddress","_deploySafe","safe","random","createProxy","_ref5$safeVersion","_ref5$isL1SafeMasterC","safeFactorySdk","lt","repeat","str1","str2","isSentinelAddress","safeTransactions","isExecuted","EthSignSignature","signer","isTxHashSignedWithPrefix","hasPrefix","rsvSig","recoveredData","ecrecover","recoveredAddress","_generateSignature","signMessage","adjustVInSignature","_generateEIP712Signature","safeTxHash","signatureV","EthSafeTransaction","signers","keys","sort","staticParts","dynamicParts","staticPart","dynamicPart","estimateDataGasCosts","accumulator","currentValue","_estimateTxGas","valueInWei","txGasEstimation","estimateData","estimateResponse","dataGasEstimation","additionalGas","estimateGas","toNumber","solidity_1","gas_1","_standardizeSafeTransactionData","tx","_b","_d","standardizedTxs","Call","estimateTxGas","txs","arrayify","pack","encodeMetaTransaction","join","_objectDestructuringEmpty","AdapterL2","AdapterL1","ethers_1","typechain_1","insertGasPrice","_insertGasPrice","l1Provider","overrides","l1FeeData","baseFee","maxFeePerGas","getFeeData","lastBaseFeePerGas","maxPriorityFeePerGas","Base","_Base","Adapter","_getMainContract","_providerL2","getMainContractAddress","IZkSyncFactory","connect","_signerL1","_getL1BridgeContracts","addresses","getDefaultBridgeAddresses","erc20","IL1BridgeFactory","erc20L1","_getBalanceL","token","blockTag","erc20contract","ETH_ADDRESS","isETH","_providerL1","IERC20MetadataFactory","balanceOf","_l2TokenAddress","erc20Bridge","getL1BridgeContracts","l2TokenAddress","_approveERC","bridgeAddress","approve","_getBaseCost","zksyncContract","parameters","getMainContract","layer1TxDefaults","getGasPrice","gasPerPubdataByte","REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT","l2TransactionBaseCost","_deposit","depositTx","bridgeContracts","approveTx","getDepositTx","requestExecute","approveERC20","approveOverrides","wait","sendTransaction","getPriorityOpResponse","_estimateGasDeposit","estimateGasRequestExecute","_getDepositTx","_e","_g","operatorTip","gasPriceForEstimation","baseCost","_bridgeContracts$erc","attach","l2GasLimit","estimateDefaultBridgeDepositL2Gas","contractAddress","calldata","l2Value","checkBaseCost","populateTransaction","deposit","_getWithdrawalLog2","withdrawalHash","receipt","log","_args10","ethers","hexlify","getTransactionReceipt","logs","filter","L1_MESSENGER_ADDRESS","topics","l1BatchTxId","l1BatchTxIndex","_getWithdrawalL2ToL1Log2","_messages$index","l2ToL1LogIndex","l2ToL1Log","_args11","l2ToL1Logs","sender","_finalizeWithdrawalParams","_yield$this$_getWithd","_yield$this$_getWithd2","proof","_args12","_getWithdrawalLog","_getWithdrawalL2ToL1Log","hexDataSlice","getLogProof","defaultAbiCoder","l1BatchNumber","l2MessageIndex","l2TxNumberInBlock","_finalizeWithdrawal","_yield$this$finalizeW","zksync","l2Bridge","l1Bridge","_args13","finalizeWithdrawalParams","finalizeEthWithdrawal","IL2BridgeFactory","finalizeWithdrawal","_isWithdrawalFinalized","_yield$this$_getWithd3","_yield$this$_getWithd4","_args14","isEthWithdrawalFinalized","isWithdrawalFinalized","_claimFailedDeposit","depositHash","successL2ToL1LogIndex","l1BridgeAddress","l2BridgeAddress","l2ToL1log","BOOTLOADER_FORMAL_ADDRESS","constants","HashZero","getTransaction","undoL1ToL2Alias","interface","decodeFunctionData","claimFailedDeposit","_requestExecute","requestExecuteTx","getRequestExecuteTx","_estimateGasRequestExecute","_getRequestExecuteTx","factoryDeps","refundRecipient","estimateL1ToL2Execute","getBaseCost","requestL2Transaction","_Base2","_getAllBalances","getAllAccountBalances","_getL2BridgeContracts","erc20L2","_signerL2","customData","gasPerPubdata","DEFAULT_GAS_PER_PUBDATA_LIMIT","_withdraw","withdrawTx","getWithdrawTx","_wrapTransaction","_transfer","transferTx","getTransferTx","ContractFactory","Contract","ethers_2","_ethers_1$ethers$Cont","abi","bytecode","deploymentType","constructorCalldata","CONTRACT_DEPLOYER","encodeFunctionData","AccountAbstractionVersion","Version1","_get2","txRequest","deploy","inputs","pop","hashBytecode","encodeDeploy","deployCalldata","encodeCalldata","EIP712_TX_TYPE","CONTRACT_DEPLOYER_ADDRESS","_deploy","_get3","contract","deployTxReceipt","deployedAddresses","contractWithCorrectAddress","_args","deployTransaction","getDeployedContracts","info","deployedAddress","defineReadOnly","__createBinding","desc","getOwnPropertyDescriptor","writable","configurable","__setModuleDefault","__importStar","hasOwnProperty","Provider","Web3Provider","Wallet","L1Signer","Signer","EIP712Signer","signer_1","wallet_1","provider_1","contract_1","getPaymasterParams","getGeneralPaymasterInput","getApprovalBasedPaymasterInput","IPaymasterFlow","paymasterInput","minimalAllowance","innerInput","Interface","paymasterAddress","paymaster","Formatter","providers","web_1","defaultFormatter","_ethers_1$ethers$prov","pollingInterval","formatter","contractAddresses","parseTransaction","_getTransactionReceipt","transactionHash","getNetwork","poll","blockNumber","perform","_emitted","status","blockHash","_getInternalBlockNumber","oncePoll","_getBlock","blockHashOrBlockTag","_getBlockWithTransactions","tokenAddress","erc20BridgeAddress","_l1TokenAddress","l1TokenAddress","_estimateGas","resolveProperties","_getTransactionRequest","_estimateGasL","send","hexlifyTransaction","_getGasPrice","price","_getMessageProof","messageHash","logIndex","_getLogProof","_getL1BatchBlockRange","range","_getMainContractAddress","mainContract","_getTestnetPaymasterAddress","_getDefaultBridgeAddresses","erc20BridgeL1","l1Erc20DefaultBridge","erc20BridgeL2","l2Erc20DefaultBridge","_getConfirmedTokens","start","limit","tokens","_args17","l2Address","_getTokenPrice","_getAllAccountBalances","balances","_l1ChainId","_getL1BatchNumber","_getL1BatchDetails","_getBlockDetails","_getTransactionDetails","_getWithdrawTx","ethL2Token","bridges","bridge","eq","IEthTokenFactory","L2_ETH_TOKEN_ADDRESS","withdraw","_estimateGasWithdraw","_getTransferTx","transfer","_estimateGasTransfer","_newFilter","_prepareFilter","_newBlockFilter","_newPendingTransactionsFilter","_getFilterChanges","idx","toHexString","_parseLogs","_getLogs","_args33","arrayOf","filterLog","fromBlock","toBlock","_this3","response","waitFinalize","block","getBlock","sleep","_getTransactionStatus","verifiedBlock","TransactionStatus","NotFound","Processing","Finalized","Committed","_getTransaction","_callee36","_context36","_sendTransaction","_callee37","_context37","_getL2TransactionFromPriorityOp","_callee38","l1TxResponse","l2Hash","_context38","getL2HashFromPriorityOp","getTransactionStatus","_getPriorityOpResponse","_callee41","l2Response","_this4","_context41","waitL1Commit","_callee39","l2Tx","_context39","getL2TransactionFromPriorityOp","_callee40","_context40","_getContractAccountInfo","_callee42","deployerContract","_context42","getAccountInfo","supportedAAVersion","nonceOrdering","_estimateL1ToL2Execute","_callee43","fee","_context43","caller","createRandom","estimateGasL1","formats","receiptLog","allowNull","l2Tol1Log","transactionIndex","shardId","isService","check","l1BatchTimestamp","blockWithTransactions","allowExtra","JsonRpcProvider","eip712Meta","hexValue","dep","paymasterParams","ZKSYNC_WEB3_API_URL","_Provider","_this5","request","path","host","isMetaMask","_send","_callee44","_context44","isStatus","addressOrIndex","_estimateGas2","_callee45","metamaskMinimum","isEIP712","_context45","eip712Types","hash_1","adapters_1","Transaction","ethSigner","eip712Domain","_sign","getSignInput","gasPerPubdataByteLimit","txType","AddressZero","_TypedDataEncoder","getTransactionCount","txBytes","_fillCustomData","eip712","customSignature","serialize","newSigner","setPrototypeOf","JsonRpcSigner","providerL2","zksyncProvider","AccountNonceOrdering","PriorityOpTree","PriorityQueueType","Network","isTypedDataSignatureCorrect","isMessageSignatureCorrect","getERC20BridgeCalldata","applyL1ToL2Alias","createAddress","getHashedL2ToL1Msg","MAX_BYTECODE_LEN_BYTES","PRIORITY_OPERATION_L2_TX_TYPE","EIP1271_MAGIC_VALUE","L1_TO_L2_ALIAS_OFFSET","L2_BRIDGE_ABI","L1_BRIDGE_ABI","IERC1271","IERC20","L1_MESSENGER","ZKSYNC_MAIN_ABI","_checkBaseCost","millis","setTimeout","queueType","Deque","opTree","Full","txNumberInBlock","encodedMsg","zeroPad","bytesCodehash","toUtf8Bytes","inputHash","addressBytes","senderNonce","serializeTransaction","formatNumber","meta","fields","splitSignature","recoveryParam","hexConcat","bytecodeAsArray","hashStr","bytecodeLengthInWords","bytecodeLength","bytecodeLengthPadded","codeHashVersion","payload","handleAddress","handleNumber","arrayToPaymasterParams","ethSignature","signedDigest","getSignedDigest","hashedSignature","getSignature","eip712TxHash","txReceipt","zkSyncAddress","priorityQueueLog","parseLog","_unused","ADDRESS_MODULO","getERC20GettersData","_getERC20GettersData","symbol","decimals","coder","nameBytes","symbolBytes","decimalsBytes","AbiCoder","_getERC20BridgeCalldata","l1Sender","l2Receiver","gettersData","isECDSASignatureCorrect","recoverAddress","_unused2","isEIP1271SignatureCorrect","_isEIP1271SignatureCorrect","accountContract","isValidSignature","isSignatureCorrect","_isSignatureCorrect","getCode","_isMessageSignatureCorrect","hashMessage","_isTypedDataSignatureCorrect","_estimateDefaultBridgeDepositL2Gas","providerL1","l1ERC20BridgeAddresses","_assertThisInitialized","ethWallet","_signingKey","_populateTransaction","mnemonic","wordlist","_fromEncryptedJson","json","password","wallet","IAllowListFactory","signerOrProvider","_abi","anonymous","indexed","internalType","outputs","stateMutability","components","IZkSyncFactory_1","IERC20MetadataFactory_1","IL1BridgeFactory_1","IL2BridgeFactory_1","IAllowListFactory_1","IEthTokenFactory_1","getSimulateTxAccessorDeployment","simulate_tx_accessor_json_1","simulate_tx_accessor_json_2","accessorDeployments","findDeployment","proxy_factory_json_1","proxy_factory_json_2","proxy_factory_json_3","safe_proxy_factory_json_1","factoryDeployments","getFallbackHandlerDeployment","getDefaultCallbackHandlerDeployment","default_callback_handler_json_1","compatibility_fallback_handler_json_1","compatibility_fallback_handler_json_2","defaultCallbackHandlerDeployments","compatFallbackHandlerDeployments","fallbackHandlerDeployments","create_call_json_1","create_call_json_2","multi_send_json_1","multi_send_json_2","multi_send_json_3","multi_send_call_only_json_1","multi_send_call_only_json_2","sign_message_lib_json_1","sign_message_lib_json_2","multiSendDeployments","multiSendCallOnlyDeployments","createCallDeployments","signMessageLibDeployments","_safeL2Deployments","_safeDeployments","safe_l2_json_1","safe_json_1","gnosis_safe_l2_json_1","gnosis_safe_json_1","gnosis_safe_json_2","gnosis_safe_json_3","gnosis_safe_json_4","DEFAULT_FILTER","criteria","deployments","criteriaWithDefaults","deployment","networkAddresses","axios_1","SafeService","serviceUrl","_estimateSafeTx","safeTx","resp","post","_getSafeTxDetails","_proposeTx","contractTransactionHash","abstract_signer_1","duration","SafeEthersSigner","_abstract_signer_1$Vo","service","_buildTransactionResponse","connectedSafe","connectedService","_wait","txDetails","getSafeTxDetails","_checkProvider","waitForTransaction","mapReceipt","pollingDelay","baseTx","createLibAddress","createLibInterface","estimateSafeTx","proposeTx","buildTransactionResponse","VoidSigner","abi_1","createLibDeployment","defaultAddress","mapStatus","creationLog","mapContractAddress","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","onCanceled","requestData","requestHeaders","responseType","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","XMLHttpRequest","auth","username","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","Axios","mergeConfig","axios","createInstance","defaultConfig","extend","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","resolvePromise","promise","_listeners","onfulfilled","_resolve","reason","throwIfRequested","source","ERR_CANCELED","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","interceptors","configOrUrl","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","toJSON","description","fileName","lineNumber","columnNumber","stack","descriptors","defineProperties","customProps","axiosError","toFlatObject","obj","handlers","use","eject","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","isPlainObject","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","validateStatus","ERR_BAD_RESPONSE","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","getDefaultAdapter","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","serializedParams","isDate","toISOString","hashmarkIndex","relativeURL","write","expires","secure","cookie","isNumber","toGMTString","document","RegExp","decodeURIComponent","remove","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","search","hostname","port","pathname","charAt","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","line","exec","formData","convertValue","isTypedArray","Blob","build","parentKey","fullKey","endsWith","el","append","thing","deprecatedWarnings","formatMessage","opt","ERR_DEPRECATED","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","cache","kindOf","kindOfTest","isFunction","TypedArray","pattern","ArrayBuffer","isView","pipe","product","assignValue","stripBOM","content","superConstructor","props","sourceObj","destObj","merged","getOwnPropertyNames","searchString","position","lastIndex","contractInstancesEthers_1","EthersAdapter","_EthersAdapter_ethers","_EthersAdapter_signer","_EthersAdapter_provider","_getEip3770Address","validateEip3770Address","getSafeContractInstance","getSafeProxyFactoryContractInstance","getMultiSendContractInstance","getMultiSendCallOnlyContractInstance","getCompatibilityFallbackHandlerContractInstance","getSignMessageLibContractInstance","_ref8","getCreateCallContractInstance","_getContractCode","_isContractDeployed","contractCode","_getStorageAt","decodedContent","decodeParameters","_getSignerAddress","messageArray","isTypedDataSigner","generateTypedData","CompatibilityFallbackHandlerEthersContract","methodName","CompatibilityFallbackHandler_V1_3_0_Ethers","_CompatibilityFallbac","CreateCallEthersContract","_performCreate","deploymentData","performCreate2","toTxResult","_performCreate2","performCreate","_this$contract$estima","CreateCallContract_V1_3_0_Ethers","_CreateCallEthersCont","GnosisSafeContractEthers","_getVersion","_approvedHashes","_approveHash","encodedSignatures","callStatic","_execTransaction","GnosisSafeContract_V1_0_0_Ethers","_GnosisSafeContractEt","_setup","setupConfig","_setupConfig$to","_setupConfig$data","_setupConfig$paymentT","_setupConfig$payment","_setupConfig$paymentR","setup","enabledModuleAddress","GnosisSafeContract_V1_1_1_Ethers","_setupConfig$fallback","GnosisSafeContract_V1_2_0_Ethers","GnosisSafeContract_V1_3_0_Ethers","_yield$this$contract$","getModulesPaginated","GnosisSafeProxyFactoryEthersContract","_proxyCreationCode","_createProxy","createProxyWithNonce","proxyCreationEvent","events","GnosisSafeProxyFactoryContract_V1_0_0_Ethers","_GnosisSafeProxyFacto","GnosisSafeProxyFactoryContract_V1_1_1_Ethers","GnosisSafeProxyFactoryContract_V1_3_0_Ethers","MultiSendEthersContract","MultiSendContract_V1_1_1_Ethers","_MultiSendEthersContr","MultiSendContract_V1_3_0_Ethers","MultiSendCallOnlyEthersContract","MultiSendCallOnlyContract_V1_3_0_Ethers","_MultiSendCallOnlyEth","SignMessageLibEthersContract","_signMessage","_getMessageHash","getMessageHash","SignMessageLibContract_V1_3_0_Ethers","_SignMessageLibEthers","Gnosis_safe__factory_1","Proxy_factory__factory_1","Gnosis_safe__factory_2","Multi_send__factory_1","Proxy_factory__factory_2","Gnosis_safe__factory_3","Compatibility_fallback_handler__factory_1","Gnosis_safe__factory_4","Multi_send_call_only__factory_1","Multi_send__factory_2","Proxy_factory__factory_3","Sign_message_lib__factory_1","Create_call__factory_1","CompatibilityFallbackHandler_V1_3_0_Ethers_1","CreateCallEthersContract_V1_3_0_Ethers_1","GnosisSafeContract_V1_0_0_Ethers_1","GnosisSafeContract_V1_1_1_Ethers_1","GnosisSafeContract_V1_2_0_Ethers_1","GnosisSafeContract_V1_3_0_Ethers_1","GnosisSafeProxyFactoryContract_V1_0_0_Ethers_1","GnosisSafeProxyFactoryContract_V1_1_1_Ethers_1","GnosisSafeProxyFactoryContract_V1_3_0_Ethers_1","MultiSendContract_V1_1_1_Ethers_1","MultiSendContract_V1_3_0_Ethers_1","MultiSendCallOnlyContract_V1_3_0_Ethers_1","SignMessageLibContract_V1_3_0_Ethers_1","Gnosis_safe__factory","compatibilityFallbackHandlerContract","Compatibility_fallback_handler__factory","Multi_send__factory","Multi_send_call_only__factory","gnosisSafeProxyFactoryContract","Proxy_factory__factory","Sign_message_lib__factory","Create_call__factory","EthersAdapter_1","transactionResponse","constant","payable","chars","InvalidCharacterError","charCode","atob","bs","bc","Rand","generate","_rand","getBytes","getByte","msCrypto","Transform","StringDecoder","CipherBase","hashMode","_finalOrDigest","final","_final","__final","_decoder","_encoding","inputEnc","outputEnc","outData","_update","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","_transform","_flush","enc","fin","end","MD5","RIPEMD160","sha","_hash","alg","elliptic","curves","ec","eddsa","BN","getNAF","getJSF","BaseCurve","conf","red","prime","mont","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","cmpn","redN","_maxwellTrick","BasePoint","precomputed","validate","_fixedNafMul","doubles","_getDoubles","naf","step","nafW","repr","jpoint","mixedAdd","toP","_wnafMul","w","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","max","comb","cmp","toJ","redNeg","jsf","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","getX","getY","isEven","_getBeta","_hasDoubles","dbl","EdwardsCurve","twisted","mOneA","extended","umod","redSqr","dd","redAdd","fromRed","oneC","zOne","redMul","redInvm","_mulA","_mulC","odd","redSub","redSqrt","pointFromY","isInfinity","normalize","fromJSON","inspect","_extDbl","redIAdd","redISub","nx","ny","nt","nz","_projDbl","_extAdd","_projAdd","mulAdd","jmulAdd","zi","eqXToP","xc","clone","iadd","short","edwards","MontCurve","i4","a24","aa","bb","diffAdd","da","iushrn","andln","jumlAdd","ShortCurve","tinv","zeroA","threeA","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","forceRed","JPoint","modn","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","a0","b0","prevR","aprxSqrt","ushrn","x1","len1","negative","_endoSplit","v1","v2","divRound","p1","p2","q1","q2","_endoWnafMulAdd","npoints","ncoeffs","ineg","pre","endoMul","obj2point","ys1","dyinv","_precompute","zinv","zinv2","pz2","z2","s2","h2","h3","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","mm","ee","yyu4","kbase","z3","pz3","zs","PresetCurve","defineCurve","sha384","sha512","HmacDRBG","KeyPair","EC","nh","keyPair","keyFromPrivate","fromPrivate","keyFromPublic","fromPublic","genKeyPair","pers","persEnc","entropy","hmacStrength","entropyEnc","ns2","iaddn","_truncateToN","truncOnly","bkey","getPrivate","ns1","iter","kp","kpX","invm","canonical","sinv","getPublic","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Qprime","_importPrivate","privEnc","_importPublic","pubEnc","derive","_importDER","Position","place","getLength","initial","octetLen","off","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","parseBytes","EDDSA","pointClass","encodingLength","secret","keyFromSecret","hashInt","messagePrefix","Rencoded","encodePoint","s_","pubBytes","makeSignature","SG","intFromLE","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","cachedProperty","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_S","_Rencoded","_Sencoded","Sencoded","minAssert","minUtils","zero2","ws","isubn","m8","d1","d2","m14","m24","computer","ctor","superCtor","super_","TempCtor","endian","isBN","words","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","_initNumber","_initArray","_parseHex","_parseBase","strip","limbLen","limbPow","total","imuln","_iaddn","dest","_expand","_normSign","groupSizes","groupBases","smallMulTo","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","idivn","toArrayLike","ArrayType","reqLength","littleEndian","clz32","_countBits","_zeroBits","zeroBits","toTwos","width","inotn","fromTwos","testn","notn","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","guessLen13b","conjugate","normalize13b","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","maskedWords","ishrn","shln","ushln","shrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","divmod","positive","divn","dm","half","r2","egcd","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","eqn","Red","ctx","convertTo","_forceRed","convertFrom","redShl","_verify2","redIMul","_verify1","redISqr","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","_strip","mod3","nOne","lpow","current","currentLen","Emitter","mixin","_callbacks","once","removeAllListeners","callbacks","emit","hasListeners","isBloom","bloom","isInBloom","bitpos","codePointToInt","codePoint","isTopic","topic","isUserEthereumAddressInBloom","ethereumAddress","padLeft","isContractAddressInBloom","isTopicInBloom","toByteArray","addSlice","isByteArray","_arguments","hashConstructor","hash_utils_1","createKeccakHash","createHashFunction","randombytes","random_1","getRandomBytes","pk","privateKeyVerify","getRandomBytesSync","__export","assert_1","externals_1","stateRoot","fromAccountData","fromRlpSerializedAccount","rlp","__read","bnToUnpaddedBuffer","isContract","isEmpty","keccakFromString","nonceBN","rlphash","publicKeyVerify","publicKeyConvert","publicKeyCreate","fromString","fromPublicKey","generate2","isPrecompileOrSystemAddress","addressBN","__values","bn_js_1","createHash","_sha256","_ripemd160","padded","_fields","label","obj_1","getter","setter","allowZero","allowLess","alias","keys_1","vBN","chainIdBN","ecdsaSign","recid","ecdsaRecover","vn","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","bn","numberToBN","negative1","unitMap","getValueOfUnit","unitInput","unit","unitValue","numberToString","arg","dividedToIntegerBy","toPrecision","fromWei","weiInput","optionsInput","wei","baseLength","fraction","whole","commify","toWei","etherInput","ether","comps","parseHex","HashBase","blockSize","_block","_blockSize","_blockOffset","_length","_finalized","chunk","encoding","throwIfNotStringOrBuffer","_digest","predResist","outSize","minEntropy","_reseed","reseedInterval","K","V","nonceEnc","_hmac","kmac","addEnc","temp","http","Request","scheme","req","xhrHttp","Agent","defaultMaxSockets","ActiveXObject","axs","ax_","STATUS_CODES","Stream","Response","Base64","xhr","uri","_headers","objectKeys","isSafeRequestHeader","setHeader","__aborted","handle","getHeader","removeHeader","isXHR2Compatible","unsafeHeaders","headerName","xs","util","readable","capable","streaming","status2","lines","getResponse","respType","responseBlob","statusCode","_emitData","respBody","https","validateParams","ARRAY16","rotl","fnF","fnG","fnH","fnI","M","readInt32LE","writeUInt32LE","writeInt32LE","InvalidStatusCodeError","InvalidCertError","DEFAULT_OPT","redirect","expectStatusCode","full","keepAlive","cors","referrer","sslAllowSelfSigned","_redirectCount","fingerprint256","_Error2","detectType","text","fatal","agents","fetchNode","_options","zlib","promisify","urlResolve","isSecure","compactFP","_options$sslPinnedCer","agentKey","sslPinnedCertificates","agent","keepAliveMsecs","maxFreeSockets","maxCachedSessions","rejectUnauthorized","handleRes","resume","brotliDecompress","unzip","_options$sslPinnedCer2","handleError","pinned","mfetchSecureConnect","socket","_socket$getPeerCertif","fp256","getPeerCertificate","isSessionReused","setNoDelay","SAFE_HEADERS","Set","FORBIDDEN_HEADERS","fetchBrowser","_fetchBrowser","Headers","URL","has","referrerPolicy","fetch","arrayBuffer","fromEntries","IS_NODE","versions","v8","multiplier","formattedString","stringArg","MAX_BYTES","MAX_UINT32","global","RangeError","generated","zl","zr","sr","hr","fn1","fn2","fn3","fn4","fn5","bl","cl","dl","ar","br","cr","dr","er","tl","tr","ecparams","loadPublicKey","pubkey","xbuf","loadCompressedPublicKey","ybuf","loadUncompressedPublicKey","savePublicKey","contextRandomize","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","tweaked","privateKeyTweakMul","pair","publicKeyNegate","publicKeyCombine","pubkeys","pairs","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","signatureExport","sigR","sigS","lenR","posR","lenS","posS","outputlen","signatureImport","noncefn","_noncefn","counter","ecdsaVerify","msg32","sigObj","sigr","sigs","ecdh","hashfn","errors","cond","isUint8Array","numbers","toTypeString","getAssertedOutput","compressed","ondata","pause","ondrain","_isStdio","onend","onclose","didOnEnd","cleanup","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","checkScalarValue","createByte","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","codePoints","byteString","ucs2encode","ethjsUnit","soliditySha3","_flattenTypes","includeTuple","puts","param","arrayBracket","hexToAscii","asciiToHex","getUnitValue","_fireError","emitter","optionalData","_jsonInterfaceMethodToString","randomHex","isBigNumber","isHex","sha3","sha3Raw","soliditySha3Raw","encodePacked","checkAddressChecksum","addressHash","checksumAddress","toBN","hexToNumberString","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","utf8ToHex","stringToHex","leftPad","padRight","rightPad","toTwosComplement","compareBlockNumbers","bnA","bnB","_parseNumber","_solidityPack","arraySize","typesize","_parseTypeN","_processSolidityEncodePackedArgs","_parseTypeNArray","hexArgs","utf8","ethereumjsUtil","ethereumBloomFilters","bigIntOnOverflow","MIN_SAFE_INTEGER","isFinite","returnType","SHA3_NULL_S","returnValue","_Hash","BNwrapped","toLocaleLowerCase","Zstream","zlib_deflate","zlib_inflate","NONE","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","Zlib","dictionary","flush","init_done","level","memLevel","strategy","windowBits","write_in_progress","pending_close","gzip_id_bytes_read","close","deflateEnd","strm","inflateEnd","in_off","in_len","out_off","out_len","_write","writeSync","async","equal","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","_after","next_expected_header_byte","deflate","inflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","Z_BUF_ERROR","_error","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_setDictionary","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","binding","kMaxLength","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Infinity","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","codes","Z_ERRNO","Z_STREAM_ERROR","Z_MEM_ERROR","Z_VERSION_ERROR","ckeys","ck","ckey","zlibBuffer","engine","buffers","nread","flow","onEnd","zlibBufferSync","flushFlag","_finishFlushFlag","_processChunk","Deflate","Inflate","Gzip","Gunzip","DeflateRaw","InflateRaw","Unzip","isValidFlushFlag","flag","_chunkSize","chunkSize","finishFlush","_flushFlag","_handle","_hadError","errno","_close","_buffer","_offset","_level","_strategy","emitCloseNT","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzipSync","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","kind","_writableState","ended","ending","needDrain","last","availInBefore","availOutBefore","inOff","availInAfter","availOutAfter","have","newReq","TYPED_OK","Uint16Array","Int32Array","_has","sources","shrinkBuf","fnTyped","arraySet","src","src_offs","dest_offs","flattenChunks","chunks","fnUntyped","setTyped","Buf8","Buf16","Buf32","adler","Z_TREES","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","Z_UNKNOWN","crcTable","table","makeTable","crc","configuration_table","trees","adler32","crc32","MAX_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","errorCode","rank","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","insert","ins_h","hash_shift","hash_mask","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","max_block_size","max_start","deflateInit","deflateSetHeader","old_flush","beg","hcrc","comment","time","os","header","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","inflate_fast","inflate_table","LENS","DISTS","HEAD","TYPE","BAD","ENOUGH_LENS","ENOUGH_DISTS","zswap32","InflateState","havedict","flags","ncode","nlen","ndist","lens","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateGetHeader","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","table_index","incr","curr","drop","used","huff","base_index","offs","extra_index","STORED_BLOCK","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","Symbol","asyncIterator","iterator"],"sourceRoot":""}