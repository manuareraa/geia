{"version":3,"file":"static/js/4263.98d09d0b.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9f6736cb.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nclass FrameConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options: suppliedOptions,\n      connectorStorage\n    } = _ref;\n    const options = {\n      shimDisconnect: true,\n      ...suppliedOptions\n    };\n    super({\n      chains,\n      options\n    });\n    _defineProperty(this, \"id\", \"frame\");\n    _defineProperty(this, \"name\", \"Frame\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n      // Remove shim signalling wallet is disconnected\n      if (this.options.shimDisconnect) {\n        this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    this.connectorStorage = connectorStorage;\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (config?.chainId && id !== config?.chainId) {\n        const chain = await this.switchChain(config?.chainId);\n        id = chain.chainId;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      // Add shim to storage signalling wallet is connected\n      if (this.options.shimDisconnect) {\n        this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      return {\n        account,\n        provider,\n        chain: {\n          id,\n          unsupported\n        }\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (!this.isInjected()) {\n      provider.close();\n    }\n\n    // Remove shim signalling wallet is disconnected\n    if (this.options.shimDisconnect) {\n      this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  async getProvider() {\n    this._provider = this.isInjected() ? this.injectedProvider() : await this.createProvider();\n    return this._provider;\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !this.connectorStorage.getItem(this.shimDisconnectKey)) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      await Promise.all([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      }), new Promise(res => this.on(\"change\", _ref2 => {\n        let {\n          chain\n        } = _ref2;\n        if (chain?.id === chainId) {\n          res();\n        }\n      }))]);\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (switchChainError) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (switchChainError.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          const currentChainId = await this.getChainId();\n          if (currentChainId !== chainId) {\n            throw new UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\n          }\n          return chain;\n        } catch (addChainError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addChainError)) {\n            throw new UserRejectedRequestError(addChainError);\n          }\n\n          // else other error\n          throw new AddChainError(addChainError.message);\n        }\n      }\n\n      // if user rejects request to switch chain\n      if (this.isUserRejectedRequestError(switchChainError)) {\n        throw new UserRejectedRequestError(switchChainError);\n      }\n\n      // else other error\n      throw new SwitchChainError(switchChainError);\n    }\n  }\n  async watchAsset(_ref3) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref3;\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n  injectedProvider() {\n    return window?.ethereum;\n  }\n  isInjected() {\n    return !!this.injectedProvider()?.isFrame;\n  }\n  async createProvider() {\n    const ethProvider = (await import('eth-provider')).default;\n    return ethProvider(\"frame\");\n  }\n}\n\nexport { FrameConnector };\n"],"names":["FrameConnector","_WagmiConnector","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","chains","suppliedOptions","options","connectorStorage","_objectSpread","shimDisconnect","call","_defineProperty","_assertThisInitialized","concat","id","accounts","length","emit","account","utils","chainId","normalizeChainId","unsupported","isChainUnsupported","chain","removeItem","shimDisconnectKey","_createClass","key","value","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","provider","wrap","_context","prev","next","this","getProvider","sent","ConnectorNotFoundError","setupListeners","type","request","method","getChainId","switchChain","setItem","abrupt","t0","isUserRejectedRequestError","UserRejectedRequestError","code","ResourceUnavailableError","stop","_x","apply","arguments","_disconnect","_callee2","_context2","removeListener","onAccountsChanged","onChainChanged","onDisconnect","isInjected","close","_getAccount","_callee3","_context3","_getChainId","_callee4","_context4","_getProvider","_callee5","_context5","injectedProvider","createProvider","_provider","_getSigner","_callee6","_yield$Promise$all","_yield$Promise$all2","_args6","_context6","undefined","Promise","all","getAccount","_slicedToArray","providers","getSigner","_isAuthorized","_callee7","_context7","getItem","_switchChain","_callee8","chainIdHex","_this$chains$find","_this2","_context8","params","res","on","_ref2","find","x","name","slug","nativeCurrency","decimals","symbol","rpc","shortName","testnet","ChainNotConfiguredError","connectorId","chainName","rpcUrls","getValidPublicRPCUrl","blockExplorerUrls","getBlockExplorerUrls","Error","t1","AddChainError","message","SwitchChainError","_x2","_watchAsset","_callee9","_ref3","address","_ref3$decimals","image","_context9","_x3","_setupListeners","_callee10","_context10","error","_window","window","ethereum","_this$injectedProvide","isFrame","_createProvider","_callee11","ethProvider","_context11","default","WagmiConnector"],"sourceRoot":""}