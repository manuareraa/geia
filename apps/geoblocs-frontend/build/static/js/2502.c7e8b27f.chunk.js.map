{"version":3,"file":"static/js/2502.c7e8b27f.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/embedded-wallet-9c935e47.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js","../node_modules/@paperxyz/sdk-common-utilities/src/constants/blockchain.ts","../node_modules/@paperxyz/sdk-common-utilities/src/constants/settings.ts"],"sourcesContent":["/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\nimport { ChainToPublicRpc } from '@paperxyz/sdk-common-utilities';\nimport { Signer, getDefaultProvider } from 'ethers';\nimport { defineReadOnly } from 'ethers/lib/utils';\nimport { getDefaultGasOverrides } from '@thirdweb-dev/sdk';\n\n/**\n * @internal\n */\nconst EMBEDDED_WALLET_PATH = \"/sdk/2022-08-12/embedded-wallet\";\n/**\n * @internal\n */\nconst GET_IFRAME_BASE_URL = () => {\n  if (!!(localStorage.getItem(\"IS_THIRDWEB_DEV\") === \"true\")) {\n    return window.localStorage.getItem(\"THIRDWEB_DEV_URL\") ?? \"http://localhost:3000\";\n  }\n  return `https://embedded-wallet.thirdweb.com`;\n};\n/**\n * @internal\n */\nconst WALLET_USER_DETAILS_LOCAL_STORAGE_NAME = clientId => `thirdwebEwsWalletUserDetails-${clientId}`;\n\n/**\n * @internal\n */\nconst WALLET_USER_ID_LOCAL_STORAGE_NAME = clientId => `thirdwebEwsWalletUserId-${clientId}`;\n\n/**\n * @internal\n */\nconst AUTH_TOKEN_LOCAL_STORAGE_PREFIX = \"walletToken\";\n\n/**\n * @internal\n */\nconst AUTH_TOKEN_LOCAL_STORAGE_NAME = clientId => {\n  return `${AUTH_TOKEN_LOCAL_STORAGE_PREFIX}-${clientId}`;\n};\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_PREFIX = \"a\";\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_NAME = (clientId, userId) => `${DEVICE_SHARE_LOCAL_STORAGE_PREFIX}-${clientId}-${userId}`;\n\n/**\n * @internal\n */\nconst DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED = clientId => `${DEVICE_SHARE_LOCAL_STORAGE_PREFIX}-${clientId}`;\n\nlet RecoveryShareManagement = /*#__PURE__*/function (RecoveryShareManagement) {\n  RecoveryShareManagement[\"USER_MANAGED\"] = \"USER_MANAGED\";\n  RecoveryShareManagement[\"CLOUD_MANAGED\"] = \"AWS_MANAGED\";\n  return RecoveryShareManagement;\n}({});\nlet AuthProvider = /*#__PURE__*/function (AuthProvider) {\n  AuthProvider[\"COGNITO\"] = \"Cognito\";\n  AuthProvider[\"GOOGLE\"] = \"Google\";\n  AuthProvider[\"EMAIL_OTP\"] = \"EmailOtp\";\n  AuthProvider[\"CUSTOM_JWT\"] = \"CustomJWT\";\n  AuthProvider[\"CUSTOM_AUTH_ENDPOINT\"] = \"CustomAuthEndpoint\";\n  AuthProvider[\"FACEBOOK\"] = \"Facebook\";\n  AuthProvider[\"APPLE\"] = \"Apple\";\n  return AuthProvider;\n}({});\n\n/**\n * @internal\n */\n\n// TODO: Clean up tech debt of random type Objects\n// E.g. StoredTokenType is really not used anywhere but it exists as this object for legacy reason\n\n// Class constructor types\n// types for class constructors still a little messy right now.\n// Open to PRs from whoever sees this and knows of a cleaner way to handle things\n\n// Auth Types\n\n// Embedded Wallet Types\nlet UserWalletStatus = /*#__PURE__*/function (UserWalletStatus) {\n  UserWalletStatus[\"LOGGED_OUT\"] = \"Logged Out\";\n  UserWalletStatus[\"LOGGED_IN_WALLET_UNINITIALIZED\"] = \"Logged In, Wallet Uninitialized\";\n  UserWalletStatus[\"LOGGED_IN_NEW_DEVICE\"] = \"Logged In, New Device\";\n  UserWalletStatus[\"LOGGED_IN_WALLET_INITIALIZED\"] = \"Logged In, Wallet Initialized\";\n  return UserWalletStatus;\n}({});\n\n/**\n * @internal\n */\n\n// ! Types seem repetitive, but the name should identify which goes where\n// this is the return type from the EmbeddedWallet Class getUserWalletStatus method iframe call\n\n// this is the return type from the EmbeddedWallet Class getUserWalletStatus method\n\nconst data = new Map();\nclass LocalStorage {\n  constructor(_ref) {\n    let {\n      clientId\n    } = _ref;\n    this.isSupported = !!window.localStorage;\n    this.clientId = clientId;\n  }\n  async getItem(key) {\n    if (this.isSupported) {\n      return window.localStorage.getItem(key);\n    } else {\n      return data.get(key) ?? null;\n    }\n  }\n  async setItem(key, value) {\n    if (this.isSupported) {\n      return window.localStorage.setItem(key, value);\n    } else {\n      data.set(key, value);\n    }\n  }\n  async removeItem(key) {\n    const item = await this.getItem(key);\n    if (this.isSupported && item) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  async saveAuthCookie(cookie) {\n    await this.setItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId), cookie);\n  }\n  async getAuthCookie() {\n    return this.getItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async removeAuthCookie() {\n    return this.removeItem(AUTH_TOKEN_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async saveDeviceShare(share, userId) {\n    await this.saveWalletUserId(userId);\n    await this.setItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId), share);\n  }\n  async getDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.getItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId));\n    }\n    return null;\n  }\n  async removeDeviceShare() {\n    const userId = await this.getWalletUserId();\n    if (userId) {\n      return this.removeItem(DEVICE_SHARE_LOCAL_STORAGE_NAME(this.clientId, userId));\n    }\n    return false;\n  }\n  async getWalletUserId() {\n    return this.getItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId));\n  }\n  async saveWalletUserId(userId) {\n    await this.setItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId), userId);\n  }\n  async removeWalletUserId() {\n    return this.removeItem(WALLET_USER_ID_LOCAL_STORAGE_NAME(this.clientId));\n  }\n}\n\nfunction sleep(seconds) {\n  return new Promise(resolve => {\n    setTimeout(resolve, seconds * 1000);\n  });\n}\nconst iframeBaseStyle = {\n  height: \"100%\",\n  width: \"100%\",\n  border: \"none\",\n  backgroundColor: \"transparent\",\n  colorScheme: \"light\",\n  position: \"fixed\",\n  top: \"0px\",\n  right: \"0px\",\n  zIndex: \"2147483646\",\n  display: \"none\"\n};\n\n// Global var to help track iframe state\nconst isIframeLoaded = new Map();\nclass IframeCommunicator {\n  constructor(_ref) {\n    let {\n      link,\n      iframeId,\n      container = document.body,\n      iframeStyles,\n      onIframeInitialize\n    } = _ref;\n    _defineProperty(this, \"POLLING_INTERVAL_SECONDS\", 1.4);\n    this.iframeBaseUrl = GET_IFRAME_BASE_URL();\n\n    // Creating the IFrame element for communication\n    let iframe = document.getElementById(iframeId);\n    const hrefLink = new URL(link);\n    const sdkVersion = \"2.5.15\";\n    hrefLink.searchParams.set(\"sdkVersion\", sdkVersion);\n    if (!iframe || iframe.src !== hrefLink.href) {\n      // ! Do not update the hrefLink here or it'll cause multiple re-renders\n      if (!iframe) {\n        iframe = document.createElement(\"iframe\");\n        const mergedIframeStyles = {\n          ...iframeBaseStyle,\n          ...iframeStyles\n        };\n        Object.assign(iframe.style, mergedIframeStyles);\n        iframe.setAttribute(\"id\", iframeId);\n        iframe.setAttribute(\"fetchpriority\", \"high\");\n        container.appendChild(iframe);\n      }\n      iframe.src = hrefLink.href;\n      iframe.setAttribute(\"data-version\", sdkVersion);\n      const onIframeLoaded = event => {\n        if (event.data.eventType === \"ewsIframeLoaded\") {\n          window.removeEventListener(\"message\", onIframeLoaded);\n          if (!iframe) {\n            console.warn(\"thirdweb Iframe not found\");\n            return;\n          }\n          this.onIframeLoadHandler(iframe, onIframeInitialize)();\n        }\n      };\n      window.addEventListener(\"message\", onIframeLoaded);\n    }\n    this.iframe = iframe;\n  }\n  async onIframeLoadedInitVariables() {\n    return {};\n  }\n  onIframeLoadHandler(iframe, onIframeInitialize) {\n    return async () => {\n      const promise = new Promise(async (res, rej) => {\n        const channel = new MessageChannel();\n        channel.port1.onmessage = event => {\n          const {\n            data\n          } = event;\n          channel.port1.close();\n          if (!data.success) {\n            return rej(new Error(data.error));\n          }\n          isIframeLoaded.set(iframe.src, true);\n          if (onIframeInitialize) {\n            onIframeInitialize();\n          }\n          return res(true);\n        };\n        const INIT_IFRAME_EVENT = \"initIframe\";\n        iframe?.contentWindow?.postMessage(\n        // ? We initialise the iframe with a bunch\n        // of useful information so that we don't have to pass it\n        // through in each of the future call. This would be where we do it.\n        {\n          eventType: INIT_IFRAME_EVENT,\n          data: await this.onIframeLoadedInitVariables()\n        }, this.iframeBaseUrl, [channel.port2]);\n      });\n      await promise;\n    };\n  }\n  async call(_ref2) {\n    let {\n      procedureName,\n      params,\n      showIframe = false\n    } = _ref2;\n    while (!isIframeLoaded.get(this.iframe.src)) {\n      await sleep(this.POLLING_INTERVAL_SECONDS);\n    }\n    if (showIframe) {\n      this.iframe.style.display = \"block\";\n      // magic number to let the display render before performing the animation of the modal in\n      await sleep(0.005);\n    }\n    const promise = new Promise((res, rej) => {\n      const channel = new MessageChannel();\n      channel.port1.onmessage = async event => {\n        const {\n          data\n        } = event;\n        channel.port1.close();\n        if (showIframe) {\n          // magic number to let modal fade out before hiding it\n          await sleep(0.1);\n          this.iframe.style.display = \"none\";\n        }\n        if (!data.success) {\n          rej(new Error(data.error));\n        } else {\n          res(data.data);\n        }\n      };\n      this.iframe.contentWindow?.postMessage({\n        eventType: procedureName,\n        data: params\n      }, this.iframeBaseUrl, [channel.port2]);\n    });\n    return promise;\n  }\n\n  /**\n   * This has to be called by any iframe that will be removed from the DOM.\n   * Use to make sure that we reset the global loaded state of the particular iframe.src\n   */\n  destroy() {\n    isIframeLoaded.delete(this.iframe.src);\n  }\n}\n\nclass EmbeddedWalletIframeCommunicator extends IframeCommunicator {\n  constructor(_ref) {\n    let {\n      clientId,\n      customizationOptions\n    } = _ref;\n    super({\n      iframeId: EMBEDDED_WALLET_IFRAME_ID,\n      link: createEmbeddedWalletIframeLink({\n        clientId,\n        path: EMBEDDED_WALLET_PATH,\n        queryParams: customizationOptions\n      }).href,\n      container: document.body\n    });\n    this.clientId = clientId;\n  }\n  async onIframeLoadedInitVariables() {\n    const localStorage = new LocalStorage({\n      clientId: this.clientId\n    });\n    return {\n      authCookie: await localStorage.getAuthCookie(),\n      deviceShareStored: await localStorage.getDeviceShare(),\n      walletUserId: await localStorage.getWalletUserId(),\n      clientId: this.clientId\n    };\n  }\n}\n\n// This is the URL and ID tag of the iFrame that we communicate with\nfunction createEmbeddedWalletIframeLink(_ref2) {\n  let {\n    clientId,\n    path,\n    queryParams\n  } = _ref2;\n  const embeddedWalletUrl = new URL(`${path}`, GET_IFRAME_BASE_URL());\n  if (queryParams) {\n    for (const queryKey of Object.keys(queryParams)) {\n      embeddedWalletUrl.searchParams.set(queryKey, queryParams[queryKey]?.toString() || \"\");\n    }\n  }\n  embeddedWalletUrl.searchParams.set(\"clientId\", clientId);\n  return embeddedWalletUrl;\n}\nconst EMBEDDED_WALLET_IFRAME_ID = \"thirdweb-embedded-wallet-iframe\";\n\nclass AbstractLogin {\n  /**\n   * Used to manage the user's auth states. This should not be instantiated directly.\n   * Call {@link EmbeddedWalletSdk.auth} instead.\n   *\n   */\n  constructor(_ref) {\n    let {\n      querier,\n      preLogin,\n      postLogin,\n      clientId\n    } = _ref;\n    this.LoginQuerier = querier;\n    this.preLogin = preLogin;\n    this.postLogin = postLogin;\n    this.clientId = clientId;\n  }\n  async sendEmailLoginOtp(_ref2) {\n    let {\n      email\n    } = _ref2;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"sendThirdwebEmailLoginOtp\",\n      params: {\n        email\n      }\n    });\n    return result;\n  }\n  async sendSmsLoginOtp(_ref3) {\n    let {\n      phoneNumber\n    } = _ref3;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"sendThirdwebSmsLoginOtp\",\n      params: {\n        phoneNumber\n      }\n    });\n    return result;\n  }\n}\n\nclass BaseLogin extends AbstractLogin {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"closeWindow\", _ref => {\n      let {\n        isWindowOpenedByFn,\n        win,\n        closeOpenedWindow\n      } = _ref;\n      if (isWindowOpenedByFn) {\n        win?.close();\n      } else {\n        if (win && closeOpenedWindow) {\n          closeOpenedWindow(win);\n        } else if (win) {\n          win.close();\n        }\n      }\n    });\n  }\n  async getOauthLoginUrl(authProvider) {\n    const result = await this.LoginQuerier.call({\n      procedureName: \"getHeadlessOauthLoginLink\",\n      params: {\n        authProvider\n      }\n    });\n    return result;\n  }\n  async loginWithModal() {\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithThirdwebModal\",\n      params: undefined,\n      showIframe: true\n    });\n    return this.postLogin(result);\n  }\n  async loginWithEmailOtp(_ref2) {\n    let {\n      email\n    } = _ref2;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithThirdwebModal\",\n      params: {\n        email\n      },\n      showIframe: true\n    });\n    return this.postLogin(result);\n  }\n  getOauthPopUpSizing(authProvider) {\n    switch (authProvider) {\n      case AuthProvider.FACEBOOK:\n        return \"width=715, height=555\";\n      default:\n        return \"width=350, height=500\";\n    }\n  }\n  async loginWithOauth(args) {\n    let win = args?.openedWindow;\n    let isWindowOpenedByFn = false;\n    if (!win) {\n      win = window.open(\"\", \"Login\", this.getOauthPopUpSizing(args.oauthProvider));\n      isWindowOpenedByFn = true;\n    }\n    if (!win) {\n      throw new Error(\"Something went wrong opening pop-up\");\n    }\n    // logout the user\n    // fetch the url to open the login window from iframe\n    const [{\n      loginLink\n    }] = await Promise.all([this.getOauthLoginUrl(args.oauthProvider), this.preLogin()]);\n    win.location.href = loginLink;\n    // listen to result from the login window\n    const result = await new Promise((resolve, reject) => {\n      // detect when the user closes the login window\n      const pollTimer = window.setInterval(async () => {\n        if (!win) {\n          return;\n        }\n        if (win.closed) {\n          clearInterval(pollTimer);\n          window.removeEventListener(\"message\", messageListener);\n          reject(new Error(\"User closed login window\"));\n        }\n      }, 1000);\n      const messageListener = async event => {\n        if (event.origin !== GET_IFRAME_BASE_URL()) {\n          return;\n        }\n        if (typeof event.data !== \"object\") {\n          reject(new Error(\"Invalid event data\"));\n          return;\n        }\n        switch (event.data.eventType) {\n          case \"userLoginSuccess\":\n            {\n              window.removeEventListener(\"message\", messageListener);\n              clearInterval(pollTimer);\n              this.closeWindow({\n                isWindowOpenedByFn,\n                win,\n                closeOpenedWindow: args?.closeOpenedWindow\n              });\n              if (event.data.authResult) {\n                resolve(event.data.authResult);\n              }\n              break;\n            }\n          case \"userLoginFailed\":\n            {\n              window.removeEventListener(\"message\", messageListener);\n              clearInterval(pollTimer);\n              this.closeWindow({\n                isWindowOpenedByFn,\n                win,\n                closeOpenedWindow: args?.closeOpenedWindow\n              });\n              reject(new Error(event.data.error));\n              break;\n            }\n          case \"injectDeveloperClientId\":\n            {\n              win?.postMessage({\n                eventType: \"injectDeveloperClientIdResult\",\n                developerClientId: this.clientId,\n                authOption: args.oauthProvider\n              }, GET_IFRAME_BASE_URL());\n              break;\n            }\n        }\n      };\n      window.addEventListener(\"message\", messageListener);\n    });\n    return this.postLogin({\n      storedToken: {\n        ...result.storedToken,\n        shouldStoreCookieString: true\n      },\n      walletDetails: {\n        ...result.walletDetails,\n        isIframeStorageEnabled: false\n      }\n    });\n  }\n  async loginWithCustomJwt(_ref3) {\n    let {\n      encryptionKey,\n      jwt\n    } = _ref3;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithCustomJwt\",\n      params: {\n        encryptionKey,\n        jwt\n      }\n    });\n    return this.postLogin(result);\n  }\n  async loginWithCustomAuthEndpoint(_ref4) {\n    let {\n      encryptionKey,\n      payload\n    } = _ref4;\n    await this.preLogin();\n    const result = await this.LoginQuerier.call({\n      procedureName: \"loginWithCustomAuthEndpoint\",\n      params: {\n        encryptionKey,\n        payload\n      }\n    });\n    return this.postLogin(result);\n  }\n  async verifyEmailLoginOtp(_ref5) {\n    let {\n      email,\n      otp,\n      recoveryCode\n    } = _ref5;\n    const result = await this.LoginQuerier.call({\n      procedureName: \"verifyThirdwebEmailLoginOtp\",\n      params: {\n        email,\n        otp,\n        recoveryCode\n      }\n    });\n    return this.postLogin(result);\n  }\n  async verifySmsLoginOtp(_ref6) {\n    let {\n      phoneNumber,\n      otp,\n      recoveryCode\n    } = _ref6;\n    const result = await this.LoginQuerier.call({\n      procedureName: \"verifyThirdwebSmsLoginOtp\",\n      params: {\n        phoneNumber,\n        otp,\n        recoveryCode\n      }\n    });\n    return this.postLogin(result);\n  }\n}\n\nclass Auth {\n  /**\n   * Used to manage the user's auth states. This should not be instantiated directly.\n   * Call {@link EmbeddedWalletSdk.auth} instead.\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      querier,\n      onAuthSuccess\n    } = _ref;\n    this.clientId = clientId;\n    this.AuthQuerier = querier;\n    this.localStorage = new LocalStorage({\n      clientId\n    });\n    this.onAuthSuccess = onAuthSuccess;\n    this.BaseLogin = new BaseLogin({\n      postLogin: async result => {\n        return this.postLogin(result);\n      },\n      preLogin: async () => {\n        await this.preLogin();\n      },\n      querier: querier,\n      clientId\n    });\n  }\n  async preLogin() {\n    await this.logout();\n  }\n  async postLogin(_ref2) {\n    let {\n      storedToken,\n      walletDetails\n    } = _ref2;\n    if (storedToken.shouldStoreCookieString) {\n      await this.localStorage.saveAuthCookie(storedToken.cookieString);\n    }\n    const initializedUser = await this.onAuthSuccess({\n      storedToken,\n      walletDetails\n    });\n    return initializedUser;\n  }\n\n  /**\n   * Used to log the user into their thirdweb wallet on your platform via a myriad of auth providers\n   *\n   * @example\n   * ```typescript\n   * const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"YOUR_CLIENT_ID\", chain: \"Polygon\"})\n   * try {\n   *   const user = await thirdwebEmbeddedWallet.auth.loginWithModal();\n   *   // user is now logged in\n   * } catch (e) {\n   *   // User closed modal or something else went wrong during the authentication process\n   *   console.error(e)\n   * }\n   * ```\n   *\n   * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link EmbeddedWalletSdk.getUser} for more\n   */\n  async loginWithModal() {\n    return this.BaseLogin.loginWithModal();\n  }\n\n  /**\n   * Used to log the user into their thirdweb wallet using email OTP\n   *\n   * @example\n   * ```typescript\n   *  // Basic Flow\n   *  const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   *  try {\n   *    // prompts user to enter the code they received\n   *    const user = await thirdwebEmbeddedWallet.auth.loginWithThirdwebEmailOtp({ email : \"you@example.com\" });\n   *    // user is now logged in\n   *  } catch (e) {\n   *    // User closed the OTP modal or something else went wrong during the authentication process\n   *    console.error(e)\n   *  }\n   * ```\n   *\n   * @param args - args.email: We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link EmbeddedWalletSdk.getUser} for more\n   */\n  async loginWithEmailOtp(args) {\n    return this.BaseLogin.loginWithEmailOtp(args);\n  }\n  async loginWithCustomJwt(args) {\n    return this.BaseLogin.loginWithCustomJwt(args);\n  }\n  async loginWithCustomAuthEndpoint(args) {\n    return this.BaseLogin.loginWithCustomAuthEndpoint(args);\n  }\n  async loginWithOauth(args) {\n    return this.BaseLogin.loginWithOauth(args);\n  }\n\n  /**\n   * A headless way to send the users at the passed email an OTP code.\n   * You need to then call {@link Auth.verifyEmailLoginOtp} in order to complete the login process\n   *\n   * @example\n   * ```typescript\n   *  const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   *  // sends user an OTP code\n   * try {\n   *    await thirdwebEmbeddedWallet.auth.sendEmailLoginOtp({ email : \"you@example.com\" });\n   * } catch(e) {\n   *    // Error Sending user's email an OTP code\n   *    console.error(e);\n   * }\n   *\n   * // Then when your user is ready to verify their OTP\n   * try {\n   *    const user = await thirdwebEmbeddedWallet.auth.verifyEmailLoginOtp({ email: \"you@example.com\", otp: \"6-DIGIT_CODE_HERE\" });\n   * } catch(e) {\n   *    // Error verifying the OTP code\n   *    console.error(e)\n   * }\n   * ```\n   *\n   * @param param0 - param0.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * @returns `{{ isNewUser: boolean }}` IsNewUser indicates if the user is a new user to your platform\n   */\n  async sendEmailLoginOtp(_ref3) {\n    let {\n      email\n    } = _ref3;\n    return this.BaseLogin.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendSmsLoginOtp(_ref4) {\n    let {\n      phoneNumber\n    } = _ref4;\n    return this.BaseLogin.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n\n  /**\n   * Used to verify the otp that the user receives from thirdweb\n   *\n   * See {@link Auth.sendEmailLoginOtp} for how the headless call flow looks like. Simply swap out the calls to `loginWithThirdwebEmailOtp` with `verifyThirdwebEmailLoginOtp`\n   *\n   * @param args - props.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n   * props.otp The code that the user received in their email\n   * @returns `{{user: InitializedUser}}` An InitializedUser object containing the user's status, wallet, authDetails, and more\n   */\n  async verifyEmailLoginOtp(args) {\n    return this.BaseLogin.verifyEmailLoginOtp(args);\n  }\n  async verifySmsLoginOtp(args) {\n    return this.BaseLogin.verifySmsLoginOtp(args);\n  }\n\n  /**\n   * Logs any existing user out of their wallet.\n   * @returns `{{success: boolean}}` true if a user is successfully logged out. false if there's no user currently logged in.\n   */\n  async logout() {\n    const {\n      success\n    } = await this.AuthQuerier.call({\n      procedureName: \"logout\",\n      params: undefined\n    });\n    const isRemoveAuthCookie = await this.localStorage.removeAuthCookie();\n    const isRemoveUserId = await this.localStorage.removeWalletUserId();\n    return {\n      success: success || isRemoveAuthCookie || isRemoveUserId\n    };\n  }\n}\n\nclass EthersSigner extends Signer {\n  constructor(_ref) {\n    let {\n      provider,\n      clientId,\n      querier\n    } = _ref;\n    super();\n    _defineProperty(this, \"DEFAULT_ETHEREUM_CHAIN_ID\", 5);\n    this.clientId = clientId;\n    this.querier = querier;\n    // we try to extract a url if possible\n    this.endpoint = provider.connection?.url;\n    defineReadOnly(this, \"provider\", provider);\n  }\n  async getAddress() {\n    const {\n      address\n    } = await this.querier.call({\n      procedureName: \"getAddress\",\n      params: undefined\n    });\n    return address;\n  }\n  async signMessage(message) {\n    const {\n      signedMessage\n    } = await this.querier.call({\n      procedureName: \"signMessage\",\n      params: {\n        message,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedMessage;\n  }\n  async signTransaction(transaction) {\n    const {\n      signedTransaction\n    } = await this.querier.call({\n      procedureName: \"signTransaction\",\n      params: {\n        transaction,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedTransaction;\n  }\n  async sendTransaction(transaction) {\n    if (!this.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    const gas = await getDefaultGasOverrides(this.provider);\n    const txWithGas = {\n      ...gas,\n      ...transaction\n    };\n    return super.sendTransaction(txWithGas);\n  }\n  async _signTypedData(domain, types, message) {\n    const {\n      signedTypedData\n    } = await this.querier.call({\n      procedureName: \"signTypedDataV4\",\n      params: {\n        domain,\n        types,\n        message,\n        chainId: (await this.provider?.getNetwork())?.chainId ?? this.DEFAULT_ETHEREUM_CHAIN_ID,\n        rpcEndpoint: this.endpoint\n      }\n    });\n    return signedTypedData;\n  }\n  connect(provider) {\n    return new EthersSigner({\n      clientId: this.clientId,\n      provider,\n      querier: this.querier\n    });\n  }\n}\n\nclass EmbeddedWallet {\n  /**\n   * Not meant to be initialized directly. Call {@link initializeUser} to get an instance\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      chain,\n      querier\n    } = _ref;\n    this.clientId = clientId;\n    this.chain = chain;\n    this.walletManagerQuerier = querier;\n    this.localStorage = new LocalStorage({\n      clientId\n    });\n  }\n\n  /**\n   * @internal\n   * Used to set-up the user device in the case that they are using incognito\n   * @returns `{walletAddress : string }` The user's wallet details\n   */\n  async postWalletSetUp(_ref2) {\n    let {\n      deviceShareStored,\n      walletAddress,\n      isIframeStorageEnabled,\n      walletUserId\n    } = _ref2;\n    if (!isIframeStorageEnabled) {\n      await this.localStorage.saveDeviceShare(deviceShareStored, walletUserId);\n    }\n    return {\n      walletAddress\n    };\n  }\n\n  /**\n   * @internal\n   * Gets the various status states of the user\n   * @example\n   * ```typescript\n   *  const userStatus = await Paper.getUserWalletStatus();\n   *  switch (userStatus.status) {\n   *  case UserWalletStatus.LOGGED_OUT: {\n   *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED: {\n   *    // User is logged in, but does not have a wallet associated with it\n   *    // you also have access to the user's details\n   *    userStatus.user.authDetails;\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_NEW_DEVICE: {\n   *    // User is logged in and created a wallet already, but is missing the device shard\n   *    // You have access to:\n   *    userStatus.user.authDetails;\n   *    userStatus.user.walletAddress;\n   *    break;\n   *  }\n   *  case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n   *    // user is logged in and wallet is all set up.\n   *    // You have access to:\n   *    userStatus.user.authDetails;\n   *    userStatus.user.walletAddress;\n   *    userStatus.user.wallet;\n   *    break;\n   *  }\n   *}\n   *```\n   * @returns `{GetUserWalletStatusFnReturnType}` an object to containing various information on the user statuses\n   */\n  async getUserWalletStatus() {\n    const userStatus = await this.walletManagerQuerier.call({\n      procedureName: \"getUserStatus\",\n      params: undefined\n    });\n    if (userStatus.status === UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n        ...userStatus.user,\n        wallet: this\n      };\n    } else if (userStatus.status === UserWalletStatus.LOGGED_IN_NEW_DEVICE) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n        ...userStatus.user\n      };\n    } else if (userStatus.status === UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED) {\n      return {\n        status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n        ...userStatus.user\n      };\n    } else {\n      // Logged out\n      return {\n        status: userStatus.status\n      };\n    }\n  }\n\n  /**\n   * Switches the chain that the user wallet is currently on.\n   *\n   * @example\n   * ```typescript\n   * // user wallet will be set to Polygon\n   * const Paper = new ThirdwebEmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   * const user = await Paper.initializeUser();\n   * // Switch the user wallet to Mumbai\n   * await user.wallet.setChain({ chain: \"Mumbai\" });\n   * ```\n   * @param param0 - The chain that we are changing the user wallet too\n   */\n  async setChain(_ref3) {\n    let {\n      chain\n    } = _ref3;\n    this.chain = chain;\n  }\n\n  /**\n   * Returns an Ethers.Js compatible signer that you can use in conjunction with the rest of dApp\n   * @example\n   * ```typescript\n   * const Paper = new ThirdwebEmbeddedWalletSdk({clientId: \"\", chain: \"Polygon\"});\n   * const user = await Paper.getUser();\n   * if (user.status === UserStatus.LOGGED_IN_WALLET_INITIALIZED) {\n   *    // returns a signer on the Polygon mainnet\n   *    const signer = await user.getEthersJsSigner();\n   *    // returns a signer on the specified RPC endpoints\n   *    const signer = await user.getEthersJsSigner({rpcEndpoint: \"https://eth-rpc.gateway.pokt.network\"});\n   * }\n   * ```\n   * @param network - object with the rpc url where calls will be routed through\n   * @throws If attempting to call the function without the user wallet initialize on their current device. This should never happen if call {@link ThirdwebEmbeddedWalletSdk.initializeUser} before accessing this function\n   * @returns A signer that is compatible with Ether.js. Defaults to the public rpc on the chain specified when initializing the {@link ThirdwebEmbeddedWalletSdk} instance\n   */\n  async getEthersJsSigner(network) {\n    const signer = new EthersSigner({\n      clientId: this.clientId,\n      provider: getDefaultProvider(network?.rpcEndpoint ?? ChainToPublicRpc[this.chain]),\n      querier: this.walletManagerQuerier\n    });\n    return signer;\n  }\n}\n\nclass EmbeddedWalletSdk {\n  /**\n   * Used to manage the Auth state of the user.\n   */\n\n  isClientIdLegacyPaper(clientId) {\n    if (clientId.indexOf(\"-\") > 0 && clientId.length === 36) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @example\n   * `const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({ clientId: \"\", chain: \"Goerli\" });`\n   * @param param0 - EmbeddedWalletConstructorType\n   */\n  constructor(_ref) {\n    let {\n      clientId,\n      chain,\n      styles,\n      onAuthSuccess\n    } = _ref;\n    if (this.isClientIdLegacyPaper(clientId)) {\n      throw new Error(\"You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page\");\n    }\n    this.clientId = clientId;\n    this.querier = new EmbeddedWalletIframeCommunicator({\n      clientId,\n      customizationOptions: styles\n    });\n    this.wallet = new EmbeddedWallet({\n      clientId,\n      chain,\n      querier: this.querier\n    });\n    this.auth = new Auth({\n      clientId,\n      querier: this.querier,\n      onAuthSuccess: async authResult => {\n        onAuthSuccess?.(authResult);\n        await this.wallet.postWalletSetUp({\n          ...authResult.walletDetails,\n          walletUserId: authResult.storedToken.authDetails.userWalletId\n        });\n        await this.querier.call({\n          procedureName: \"initIframe\",\n          params: {\n            deviceShareStored: authResult.walletDetails.deviceShareStored,\n            clientId: this.clientId,\n            walletUserId: authResult.storedToken.authDetails.userWalletId,\n            authCookie: authResult.storedToken.cookieString\n          }\n        });\n        return {\n          user: {\n            status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n            authDetails: authResult.storedToken.authDetails,\n            wallet: this.wallet,\n            walletAddress: authResult.walletDetails.walletAddress\n          }\n        };\n      }\n    });\n  }\n\n  /**\n   * Gets the usr if they are logged in\n   * @example\n   * ```js\n   *  const user = await thirdwebEmbeddedWallet.getUser();\n   *  switch (user.status) {\n   *     case UserWalletStatus.LOGGED_OUT: {\n   *       // User is logged out, call one of the auth methods on thirdwebEmbeddedWallet.auth to authenticate the user\n   *       break;\n   *     }\n   *     case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n   *       // user is logged in and wallet is all set up.\n   *       // You have access to:\n   *       user.status;\n   *       user.authDetails;\n   *       user.walletAddress;\n   *       user.wallet;\n   *       break;\n   *     }\n   * }\n   * ```\n   * @returns GetUser - an object to containing various information on the user statuses\n   */\n  async getUser() {\n    return this.wallet.getUserWalletStatus();\n  }\n}\n\nexport { AUTH_TOKEN_LOCAL_STORAGE_NAME as A, DEVICE_SHARE_LOCAL_STORAGE_NAME as D, EmbeddedWalletSdk as E, RecoveryShareManagement as R, UserWalletStatus as U, WALLET_USER_DETAILS_LOCAL_STORAGE_NAME as W, DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED as a, WALLET_USER_ID_LOCAL_STORAGE_NAME as b, AuthProvider as c };\n","import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { utils } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { E as EmbeddedWalletSdk, U as UserWalletStatus, c as AuthProvider } from '../../../../dist/embedded-wallet-9c935e47.browser.esm.js';\nimport 'eventemitter3';\nimport '@paperxyz/sdk-common-utilities';\nimport 'ethers/lib/utils';\nimport '@thirdweb-dev/sdk';\n\nclass EmbeddedWalletConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", walletIds.paper);\n    _defineProperty(this, \"name\", \"Embedded Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"user\", null);\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getEmbeddedWalletSDK() {\n    if (!this._embeddedWalletSdk) {\n      this._embeddedWalletSdk = new EmbeddedWalletSdk({\n        clientId: this.options.clientId,\n        chain: \"Ethereum\",\n        onAuthSuccess: this.options.onAuthSuccess\n      });\n    }\n    return this._embeddedWalletSdk;\n  }\n  async connect(args) {\n    // backwards compatibility - options should really be required here\n    if (!args) {\n      // default to iframe flow\n      const result = await this.authenticate({\n        strategy: \"iframe\"\n      });\n      if (!result.user) {\n        throw new Error(\"Error connecting User\");\n      }\n      this.user = result.user;\n    } else {\n      if (!args.authResult) {\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\n      }\n      if (!args.authResult.user) {\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\n      }\n      this.user = args.authResult.user;\n    }\n    if (args?.chainId) {\n      this.switchChain(args.chainId);\n    }\n    return this.getAddress();\n  }\n  async disconnect() {\n    const paper = this._embeddedWalletSdk;\n    await paper?.auth.logout();\n    this._signer = undefined;\n    this._embeddedWalletSdk = undefined;\n    this.user = null;\n  }\n  async getAddress() {\n    if (!this.user) {\n      throw new Error(\"Embedded Wallet is not connected\");\n    }\n    return await this.getSigner().then(signer => signer.getAddress());\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (this._signer) {\n      return this._signer;\n    }\n    const user = await this.getUser();\n    const signer = await user.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n    });\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    this._signer = signer;\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n    try {\n      // update chain in wallet\n      await this.user?.wallet.setChain({\n        chain: \"Ethereum\"\n      }); // just pass Ethereum no matter what chain we are going to connect\n      // update signer\n      this._signer = await this.user?.wallet.getEthersJsSigner({\n        rpcEndpoint: chain.rpc[0] || \"\"\n      });\n      this.emit(\"change\", {\n        chain: {\n          id: chainId,\n          unsupported: false\n        }\n      });\n    } catch (e) {\n      console.warn(\"Failed to switch chain\", e);\n    }\n  }\n  async setupListeners() {\n    return Promise.resolve();\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  async getUser() {\n    if (!this.user || !this.user.wallet || !this.user.wallet.getEthersJsSigner // when serializing, functions are lost, need to rehydrate\n    ) {\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\n      const user = await embeddedWalletSdk.getUser();\n      switch (user.status) {\n        case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n        default:\n          {\n            // if logged out or unitialized, we can't get a signer, so throw an error\n            throw new Error(\"Embedded Wallet is not authenticated, please authenticate first\");\n          }\n      }\n    }\n    return this.user;\n  }\n  async getEmail() {\n    const user = await this.getUser();\n    return user.authDetails.email;\n  }\n  async getPhoneNumber() {\n    const user = await this.getUser();\n    return user.authDetails.phoneNumber;\n  }\n  async getRecoveryInformation() {\n    const user = await this.getUser();\n    return user.authDetails;\n  }\n  async sendVerificationEmail(_ref) {\n    let {\n      email\n    } = _ref;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendVerificationSms(_ref2) {\n    let {\n      phoneNumber\n    } = _ref2;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n  async authenticate(params) {\n    const ewSDK = this.getEmbeddedWalletSDK();\n    const strategy = params.strategy;\n    switch (strategy) {\n      case \"email_verification\":\n        {\n          return await ewSDK.auth.verifyEmailLoginOtp({\n            email: params.email,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"phone_number_verification\":\n        {\n          return await ewSDK.auth.verifySmsLoginOtp({\n            phoneNumber: params.phoneNumber,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"apple\":\n      case \"facebook\":\n      case \"google\":\n        {\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\n          return ewSDK.auth.loginWithOauth({\n            oauthProvider,\n            closeOpenedWindow: params.closeOpenedWindow,\n            openedWindow: params.openedWindow\n          });\n        }\n      case \"jwt\":\n        {\n          return ewSDK.auth.loginWithCustomJwt({\n            jwt: params.jwt,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"auth_endpoint\":\n        {\n          return ewSDK.auth.loginWithCustomAuthEndpoint({\n            payload: params.payload,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"iframe_email_verification\":\n        {\n          return ewSDK.auth.loginWithEmailOtp({\n            email: params.email\n          });\n        }\n      case \"iframe\":\n        {\n          return ewSDK.auth.loginWithModal();\n        }\n      default:\n        assertUnreachable(strategy);\n    }\n  }\n}\nfunction assertUnreachable(x) {\n  throw new Error(\"Invalid param: \" + x);\n}\nconst oauthStrategyToAuthProvider = {\n  google: AuthProvider.GOOGLE,\n  facebook: AuthProvider.FACEBOOK,\n  apple: AuthProvider.APPLE\n};\n\nexport { EmbeddedWalletConnector };\n","export const ChainToPublicRpc: Record<Chain, string> = {\n  Ethereum: \"https://ethereum.rpc.thirdweb.com\",\n  Goerli: \"https://goerli.rpc.thirdweb.com\",\n  Mumbai: \"https://mumbai.rpc.thirdweb.com\",\n  Polygon: \"https://polygon.rpc.thirdweb.com\",\n  Avalanche: \"https://avalanche.rpc.thirdweb.com\",\n  Optimism: \"https://optimism.rpc.thirdweb.com\",\n  OptimismGoerli: \"https://optimism-goerli.rpc.thirdweb.com\",\n  BSC: \"https://binance.rpc.thirdweb.com\",\n  BSCTestnet: \"https://binance-testnet.rpc.thirdweb.com\",\n  ArbitrumOne: \"https://arbitrum.rpc.thirdweb.com\",\n  ArbitrumGoerli: \"https://arbitrum-goerli.rpc.thirdweb.com\",\n  Fantom: \"https://fantom.rpc.thirdweb.com\",\n  FantomTestnet: \"https://fantom-testnet.rpc.thirdweb.com\",\n  Sepolia: \"https://sepolia.rpc.thirdweb.com\",\n  AvalancheFuji: \"https://avalanche-fuji.rpc.thirdweb.com\",\n};\n\nexport const ChainIdToChain: Record<number, Chain> = {\n  1: \"Ethereum\",\n  5: \"Goerli\",\n  80001: \"Mumbai\",\n  137: \"Polygon\",\n  43114: \"Avalanche\",\n  10: \"Optimism\",\n  420: \"OptimismGoerli\",\n  56: \"BSC\",\n  97: \"BSCTestnet\",\n  42161: \"ArbitrumOne\",\n  421613: \"ArbitrumGoerli\",\n  250: \"Fantom\",\n  4002: \"FantomTestnet\",\n  11155111: \"Sepolia\",\n  43113: \"AvalancheFuji\",\n};\n\n// General Embedded wallet types\nexport type Chain =\n  | \"Polygon\"\n  | \"Mumbai\"\n  | \"Goerli\"\n  | \"Ethereum\"\n  | \"Avalanche\"\n  | \"Optimism\"\n  | \"OptimismGoerli\"\n  | \"BSC\"\n  | \"BSCTestnet\"\n  | \"ArbitrumOne\"\n  | \"ArbitrumGoerli\"\n  | \"Fantom\"\n  | \"FantomTestnet\"\n  | \"Sepolia\"\n  | \"AvalancheFuji\";\n\nexport type SupportedChainName = Chain | \"Rinkeby\" | \"Solana\" | \"SolanaDevnet\";\n","const isDev = (): boolean => {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.localStorage.getItem(\"IS_PAPER_DEV\") === \"true\"\n  );\n};\n\nconst isOldPaperDomain = (): boolean =>\n  typeof window !== \"undefined\" && window.location.origin.includes(\"paper.xyz\");\n\nconst isThirdwebDomain = (): boolean =>\n  typeof window !== \"undefined\" &&\n  window.location.origin.includes(\"thirdweb.com\");\n\nexport const getPaperOriginUrl = (): string => {\n  if (isDev())\n    return (\n      window.localStorage.getItem(\"PAPER_DEV_URL\") ?? \"http://localhost:3000\"\n    );\n\n  if (isOldPaperDomain()) return window.location.origin;\n  if (isThirdwebDomain()) return window.location.origin;\n\n  return \"https://withpaper.com\";\n};\n"],"names":["normalizeChainId","chainId","Number","parseInt","trim","substring","GET_IFRAME_BASE_URL","_window$localStorage$","localStorage","getItem","window","WALLET_USER_ID_LOCAL_STORAGE_NAME","clientId","concat","AUTH_TOKEN_LOCAL_STORAGE_NAME","DEVICE_SHARE_LOCAL_STORAGE_NAME","userId","AuthProvider","UserWalletStatus","data","Map","LocalStorage","_ref","_classCallCheck","this","isSupported","_createClass","key","value","_getItem","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$get","wrap","_context","prev","next","abrupt","get","stop","_x","apply","arguments","_setItem","_callee2","_context2","setItem","set","_x2","_x3","_removeItem","_callee3","item","_context3","sent","removeItem","_x4","_saveAuthCookie","_callee4","cookie","_context4","_x5","_getAuthCookie","_callee5","_context5","_removeAuthCookie","_callee6","_context6","_saveDeviceShare","_callee7","share","_context7","saveWalletUserId","_x6","_x7","_getDeviceShare","_callee8","_context8","getWalletUserId","_removeDeviceShare","_callee9","_context9","_getWalletUserId","_callee10","_context10","_saveWalletUserId","_callee11","_context11","_x8","_removeWalletUserId","_callee12","_context12","sleep","seconds","Promise","resolve","setTimeout","iframeBaseStyle","height","width","border","backgroundColor","colorScheme","position","top","right","zIndex","display","isIframeLoaded","IframeCommunicator","_this","link","iframeId","_ref$container","container","document","body","iframeStyles","onIframeInitialize","_defineProperty","iframeBaseUrl","iframe","getElementById","hrefLink","URL","sdkVersion","searchParams","src","href","createElement","mergedIframeStyles","_objectSpread","Object","assign","style","setAttribute","appendChild","addEventListener","onIframeLoaded","event","eventType","removeEventListener","console","warn","onIframeLoadHandler","_onIframeLoadedInitVariables","_callee13","_context13","_this2","_callee15","promise","_context15","_ref8","_callee14","res","rej","_iframe$contentWindow","channel","INIT_IFRAME_EVENT","_context14","MessageChannel","port1","onmessage","close","success","Error","error","contentWindow","t0","t1","onIframeLoadedInitVariables","t2","t3","t4","t5","port2","postMessage","call","_x9","_x10","_call","_callee17","_ref2","procedureName","params","_ref2$showIframe","showIframe","_this3","_context17","POLLING_INTERVAL_SECONDS","_this3$iframe$content","_ref9","_callee16","_context16","_x12","_x11","delete","EmbeddedWalletIframeCommunicator","_IframeCommunicator","_inherits","_super","_createSuper","_this4","customizationOptions","EMBEDDED_WALLET_IFRAME_ID","createEmbeddedWalletIframeLink","path","queryParams","_onIframeLoadedInitVariables2","_callee18","_context18","getAuthCookie","getDeviceShare","authCookie","deviceShareStored","walletUserId","embeddedWalletUrl","_i","_Object$keys","keys","length","_queryParams$queryKey","queryKey","toString","AbstractLogin","querier","preLogin","postLogin","LoginQuerier","_sendEmailLoginOtp","_callee19","email","result","_context19","_x13","_sendSmsLoginOtp","_callee20","_ref3","phoneNumber","_context20","_x14","BaseLogin","_AbstractLogin","_super2","_this5","_assertThisInitialized","isWindowOpenedByFn","win","closeOpenedWindow","_getOauthLoginUrl","_callee21","authProvider","_context21","_x15","_loginWithModal","_callee22","_context22","undefined","_loginWithEmailOtp","_callee23","_context23","_x16","FACEBOOK","_loginWithOauth","_callee26","args","_yield$Promise$all","_yield$Promise$all2","loginLink","_this6","_context26","openedWindow","open","getOauthPopUpSizing","oauthProvider","all","getOauthLoginUrl","_slicedToArray","location","reject","pollTimer","setInterval","_callee24","_context24","closed","clearInterval","messageListener","_ref11","_callee25","_win","_context25","origin","closeWindow","authResult","developerClientId","authOption","_x18","storedToken","shouldStoreCookieString","walletDetails","isIframeStorageEnabled","_x17","_loginWithCustomJwt","_callee27","encryptionKey","jwt","_context27","_x19","_loginWithCustomAuthEndpoint","_callee28","_ref4","payload","_context28","_x20","_verifyEmailLoginOtp","_callee29","_ref5","otp","recoveryCode","_context29","_x21","_verifySmsLoginOtp","_callee30","_ref6","_context30","_x22","Auth","_this7","onAuthSuccess","AuthQuerier","_postLogin","_callee31","_context31","_x23","_preLogin","_callee32","_context32","_preLogin2","_callee33","_context33","logout","_postLogin2","_callee34","initializedUser","_context34","saveAuthCookie","cookieString","_x24","_loginWithModal2","_callee35","_context35","loginWithModal","_loginWithEmailOtp2","_callee36","_context36","loginWithEmailOtp","_x25","_loginWithCustomJwt2","_callee37","_context37","loginWithCustomJwt","_x26","_loginWithCustomAuthEndpoint2","_callee38","_context38","loginWithCustomAuthEndpoint","_x27","_loginWithOauth2","_callee39","_context39","loginWithOauth","_x28","_sendEmailLoginOtp2","_callee40","_context40","sendEmailLoginOtp","_x29","_sendSmsLoginOtp2","_callee41","_context41","sendSmsLoginOtp","_x30","_verifyEmailLoginOtp2","_callee42","_context42","verifyEmailLoginOtp","_x31","_verifySmsLoginOtp2","_callee43","_context43","verifySmsLoginOtp","_x32","_logout","_callee44","_yield$this$AuthQueri","isRemoveAuthCookie","isRemoveUserId","_context44","removeAuthCookie","removeWalletUserId","EthersSigner","_Signer","_super3","_provider$connection","_this8","provider","endpoint","connection","url","defineReadOnly","_getAddress","_callee45","_yield$this$querier$c","address","_context45","_signMessage","_callee46","message","_yield$this$provider$","_yield$this$provider$2","_this$provider","_yield$this$querier$c2","signedMessage","_context46","getNetwork","t6","t7","DEFAULT_ETHEREUM_CHAIN_ID","t8","t9","t10","rpcEndpoint","t11","_x33","_signTransaction","_callee47","transaction","_yield$this$provider$3","_yield$this$provider$4","_this$provider2","_yield$this$querier$c3","signedTransaction","_context47","_x34","_sendTransaction","_callee48","gas","txWithGas","_context48","getDefaultGasOverrides","_get","_getPrototypeOf","prototype","_x35","_signTypedData2","_callee49","domain","types","_yield$this$provider$5","_yield$this$provider$6","_this$provider3","_yield$this$querier$c4","signedTypedData","_context49","t12","t13","_x36","_x37","_x38","Signer","EmbeddedWallet","chain","walletManagerQuerier","_postWalletSetUp","_callee50","walletAddress","_context50","saveDeviceShare","_x39","_getUserWalletStatus","_callee51","userStatus","_context51","status","LOGGED_IN_WALLET_INITIALIZED","user","wallet","LOGGED_IN_NEW_DEVICE","LOGGED_IN_WALLET_UNINITIALIZED","_setChain","_callee52","_context52","_x40","_getEthersJsSigner","_callee53","network","_network$rpcEndpoint","signer","_context53","getDefaultProvider","ChainToPublicRpc","_x41","EmbeddedWalletSdk","_this9","styles","isClientIdLegacyPaper","auth","_onAuthSuccess2","_callee54","_context54","postWalletSetUp","authDetails","userWalletId","_x42","indexOf","_getUser","_callee55","_context55","getUserWalletStatus","EmbeddedWalletConnector","_Connector","options","walletIds","paper","accounts","onDisconnect","emit","account","utils","id","unsupported","chains","findIndex","c","_embeddedWalletSdk","_connect","authenticate","strategy","switchChain","getAddress","_disconnect","_signer","getSigner","then","_isConnected","addr","_getProvider","_getSigner","getUser","getEthersJsSigner","rpc","_isAuthorized","_switchChain","_this$user","_this$user2","find","setChain","_setupListeners","embeddedWalletSdk","getEmbeddedWalletSDK","_getEmail","_getPhoneNumber","_getRecoveryInformation","_sendVerificationEmail","ewSDK","_sendVerificationSms","_authenticate","verificationCode","oauthStrategyToAuthProvider","assertUnreachable","Connector","x","google","GOOGLE","facebook","apple","APPLE","o","Ethereum","Goerli","Mumbai","Polygon","Avalanche","Optimism","OptimismGoerli","BSC","BSCTestnet","ArbitrumOne","ArbitrumGoerli","Fantom","FantomTestnet","Sepolia","AvalancheFuji","n","t","includes"],"sourceRoot":""}