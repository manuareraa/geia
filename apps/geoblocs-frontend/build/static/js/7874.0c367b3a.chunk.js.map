{"version":3,"file":"static/js/7874.0c367b3a.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\nimport '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport '../../../../dist/url-a45219bd.browser.esm.js';\nimport 'ethers';\nimport '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\n\nclass TrustConnector extends InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"Trust\",\n      getProvider() {\n        function getReady(ethereum) {\n          const isTrust = !!ethereum?.isTrust;\n          if (!isTrust) {\n            return;\n          }\n          return ethereum;\n        }\n        if (assertWindowEthereum(globalThis.window)) {\n          if (globalThis.window.ethereum?.providers) {\n            return globalThis.window.ethereum.providers.find(getReady);\n          }\n          return getReady(globalThis.window.ethereum);\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n  }\n}\n\nexport { TrustConnector };\n"],"names":["WagmiConnector","_EventEmitter","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","_ref$chains","chains","defaultChains","options","call","_createClass","key","value","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","chainId","this","some","EventEmitter","RpcError","_Error","message","cause","code","data","Number","isInteger","Error","concat","JSON","stringify","_wrapNativeSuper","ProviderRpcError","_RpcError","_super2","AddChainError","_Error2","_super3","_this2","apply","arguments","_defineProperty","_assertThisInitialized","ChainNotConfiguredError","_Error3","_super4","_this3","connectorId","ConnectorNotFoundError","_Error4","_super5","_this4","ResourceUnavailableError","_RpcError2","_super6","_this5","SwitchChainError","_ProviderRpcError","_super7","_this6","UserRejectedRequestError","_ProviderRpcError2","_super8","_this7","normalizeChainId","parseInt","trim","substring","TrustConnector","_InjectedConnector","arg","defaultOptions","name","getProvider","getReady","ethereum","isTrust","_globalThis$window$et","assertWindowEthereum","globalThis","window","providers","find","_objectSpread","connectorStorage","InjectedConnector"],"sourceRoot":""}