{"version":3,"file":"static/js/759.4ce095a1.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9f6736cb.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-99db3206.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`Connected but failed to switch to desired chain ${chainId}`, e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!this._provider) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!this._provider) {\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      this._client = new CoinbaseWalletSDK(this.options);\n      const walletExtensionChainId = this._client.walletExtension?.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.chainId;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpc[0];\n      this._provider = this._client.makeWeb3Provider(jsonRpcUrl, chainId);\n    }\n    return this._provider;\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${id}`,\n        slug: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this._isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (this._isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  _isUserRejectedRequestError(error) {\n    return /(user rejected)/i.test(error.message);\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!this._client) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return this._client.getQrUrl();\n  }\n}\n\nexport { CoinbaseWalletConnector };\n"],"names":["CoinbaseWalletConnector","_WagmiConnector","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","chains","options","call","_objectSpread","reloadOnDisconnect","_defineProperty","_assertThisInitialized","walletIds","coinbase","accounts","length","emit","account","utils","chainId","id","normalizeChainId","unsupported","isChainUnsupported","chain","_createClass","key","value","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","_args","arguments","wrap","_context","prev","next","undefined","this","getProvider","sent","setupListeners","type","enable","getChainId","switchChain","t0","console","error","concat","abrupt","providers","t1","test","message","UserRejectedRequestError","stop","apply","_disconnect","_callee2","_context2","_provider","removeListener","onAccountsChanged","onChainChanged","onDisconnect","disconnect","close","_getAccount","_callee3","_context3","request","method","Error","_getChainId","_callee4","_context4","_getProvider","_callee5","_this$_client$walletE","CoinbaseWalletSDK","walletExtensionChainId","jsonRpcUrl","_this2","_context5","default","_client","walletExtension","find","chain_","rpc","makeWeb3Provider","_getSigner","_callee6","_yield$Promise$all","_yield$Promise$all2","_args6","_context6","Promise","all","getAccount","_slicedToArray","getSigner","_isAuthorized","_callee7","_context7","_switchChain","_callee8","_this$chains$find","_context8","params","x","name","slug","nativeCurrency","decimals","symbol","testnet","shortName","ChainNotConfiguredError","connectorId","code","chainName","rpcUrls","getValidPublicRPCUrl","blockExplorerUrls","getBlockExplorerUrls","_isUserRejectedRequestError","AddChainError","SwitchChainError","_x","_setupListeners","_callee9","_context9","on","_getQrUrl","_callee10","_context10","getQrUrl","WagmiConnector"],"sourceRoot":""}