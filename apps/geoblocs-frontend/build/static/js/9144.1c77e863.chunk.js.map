{"version":3,"file":"static/js/9144.1c77e863.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/sdk/dist/QueryParams-af68a67b.browser.esm.js","../node_modules/@thirdweb-dev/sdk/dist/assertEnabled-f866961a.browser.esm.js","../node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js","../node_modules/@thirdweb-dev/sdk/dist/marketplacev3-099a540f.browser.esm.js","../node_modules/@thirdweb-dev/sdk/dist/setErc20Allowance-96f7a033.browser.esm.js"],"sourcesContent":["import { a as CommonNFTOutput, C as CommonNFTInput } from './setErc20Allowance-96f7a033.browser.esm.js';\nimport { utils, BigNumber, Contract } from 'ethers';\nimport 'zod';\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst InterfaceId_IERC721 = /* @__PURE__ */(() => utils.arrayify(\"0x80ac58cd\"))();\n\n/**\n * @internal\n */\nconst InterfaceId_IERC1155 = /* @__PURE__ */(() => utils.arrayify(\"0xd9b67a26\"))();\n\nconst FALLBACK_METADATA = {\n  name: \"Failed to load NFT metadata\"\n};\n\n/**\n * fetches the token metadata\n * @param tokenId - the id (to get it back in the output)\n * @param tokenUri - the uri to fetch\n * @param storage - which storage to fetch from\n *\n * @internal\n */\nasync function fetchTokenMetadata(tokenId, tokenUri, storage) {\n  // check for base64 encoded JSON\n  if (tokenUri.startsWith(\"data:application/json;base64\") && typeof Buffer !== \"undefined\") {\n    const base64 = tokenUri.split(\",\")[1];\n    const jsonMetadata = JSON.parse(Buffer.from(base64, \"base64\").toString(\"utf-8\"));\n    return CommonNFTOutput.parse({\n      ...jsonMetadata,\n      id: BigNumber.from(tokenId).toString(),\n      uri: tokenUri\n    });\n  }\n  // handle dynamic id URIs (2 possible formats)\n  const parsedUri = tokenUri.replace(\"{id}\", utils.hexZeroPad(BigNumber.from(tokenId).toHexString(), 32).slice(2));\n  let jsonMetadata;\n  try {\n    jsonMetadata = await storage.downloadJSON(parsedUri);\n  } catch (err) {\n    const unparsedTokenIdUri = tokenUri.replace(\"{id}\", BigNumber.from(tokenId).toString());\n    try {\n      jsonMetadata = await storage.downloadJSON(unparsedTokenIdUri);\n    } catch (e) {\n      console.warn(`failed to get token metadata: ${JSON.stringify({\n        tokenId: tokenId.toString(),\n        tokenUri\n      })} -- falling back to default metadata`);\n      jsonMetadata = FALLBACK_METADATA;\n    }\n  }\n  return CommonNFTOutput.parse({\n    ...jsonMetadata,\n    id: BigNumber.from(tokenId).toString(),\n    uri: tokenUri\n  });\n}\n\n// Used for marketplace to fetch NFT metadata from contract address + tokenId\n/**\n * @internal\n * @param contractAddress - the contract address\n * @param provider - the provider to use\n * @param tokenId - the token id\n * @param storage - the storage to use\n */\nasync function fetchTokenMetadataForContract(contractAddress, provider, tokenId, storage) {\n  let uri;\n  const ERC165MetadataAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC165.json')).default;\n  const erc165 = new Contract(contractAddress, ERC165MetadataAbi, provider);\n  const [isERC721, isERC1155] = await Promise.all([erc165.supportsInterface(InterfaceId_IERC721), erc165.supportsInterface(InterfaceId_IERC1155)]);\n  if (isERC721) {\n    const ERC721MetadataAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json')).default;\n    const erc721 = new Contract(contractAddress, ERC721MetadataAbi, provider);\n    uri = await erc721.tokenURI(tokenId);\n  } else if (isERC1155) {\n    const ERC1155MetadataAbi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json')).default;\n    const erc1155 = new Contract(contractAddress, ERC1155MetadataAbi, provider);\n    uri = await erc1155.uri(tokenId);\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n  if (!uri) {\n    // no uri found, return fallback metadata\n    return CommonNFTOutput.parse({\n      ...FALLBACK_METADATA,\n      id: BigNumber.from(tokenId).toString(),\n      uri: \"\"\n    });\n  }\n  return fetchTokenMetadata(tokenId, uri, storage);\n}\n\n/**\n * @internal\n * @param metadata - the metadata to upload\n * @param storage - the storage to use\n */\nasync function uploadOrExtractURI(metadata, storage) {\n  if (typeof metadata === \"string\") {\n    return metadata;\n  } else {\n    return await storage.upload(CommonNFTInput.parse(metadata));\n  }\n}\n\n/**\n * @internal\n * @param metadatas - the metadata to upload\n * @param storage - the storage to use\n * @param startNumber - the number to start the file names at\n * @param contractAddress - the contract address\n * @param signerAddress - the signer address\n * @param options - options\n */\nasync function uploadOrExtractURIs(metadatas, storage, startNumber, options) {\n  if (isUriList(metadatas)) {\n    return metadatas;\n  } else if (isMetadataList(metadatas)) {\n    const uris = await storage.uploadBatch(metadatas.map(m => CommonNFTInput.parse(m)), {\n      rewriteFileNames: {\n        fileStartNumber: startNumber || 0\n      },\n      onProgress: options?.onProgress\n    });\n    return uris;\n  } else {\n    throw new Error(\"NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)\");\n  }\n}\nfunction getBaseUriFromBatch(uris) {\n  const baseUri = uris[0].substring(0, uris[0].lastIndexOf(\"/\"));\n  for (let i = 0; i < uris.length; i++) {\n    const uri = uris[i].substring(0, uris[i].lastIndexOf(\"/\"));\n    if (baseUri !== uri) {\n      throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${baseUri}' but got '${uri}'`);\n    }\n  }\n\n  // Ensure that baseUri ends with trailing slash\n  return baseUri.replace(/\\/$/, \"\") + \"/\";\n}\nfunction isUriList(metadatas) {\n  return metadatas.find(m => typeof m !== \"string\") === undefined;\n}\nfunction isMetadataList(metadatas) {\n  return metadatas.find(m => typeof m !== \"object\") === undefined;\n}\n\n/**\n * @internal\n */\nconst DEFAULT_QUERY_ALL_COUNT = 100;\n\n/**\n * Pagination Parameters\n * @public\n */\n\nexport { DEFAULT_QUERY_ALL_COUNT as D, FALLBACK_METADATA as F, InterfaceId_IERC721 as I, InterfaceId_IERC1155 as a, uploadOrExtractURI as b, fetchTokenMetadataForContract as c, fetchTokenMetadata as f, getBaseUriFromBatch as g, uploadOrExtractURIs as u };\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { x as ExtensionNotImplementedError } from './index-42be4209.browser.esm.js';\n\nconst RawDateSchema = /* @__PURE__ */(() => z.union([z.date().transform(i => {\n  return BigNumber.from(Math.floor(i.getTime() / 1000));\n}), z.number().transform(i => {\n  return BigNumber.from(i);\n})]))();\n\n/**\n * Default to now\n */\nconst StartDateSchema = /* @__PURE__ */(() => RawDateSchema.default(new Date(0)))();\n\n/**\n * Default to 10 years from now\n */\nconst EndDateSchema = /* @__PURE__ */(() => RawDateSchema.default(new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10)))();\n\n/**\n * Checks whether the given DetectableFeature is defined\n * @internal\n * @param namespace - The namespace to check\n * @param feature - The corresponding feature\n */\nfunction assertEnabled(namespace, feature) {\n  if (!namespace) {\n    throw new ExtensionNotImplementedError(feature);\n  }\n  return namespace;\n}\n\nexport { EndDateSchema as E, RawDateSchema as R, StartDateSchema as S, assertEnabled as a };\n","/**\n * Allows overriding transaction behavior for this contract\n * @internal\n */\nclass ContractInterceptor {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * The next transaction executed will add/replace any overrides passed via the passed in hook.\n   * @remarks Overridden values will be applied to the next transaction executed.\n   * @example\n   * ```javascript\n   * contract.interceptor.overrideNextTransaction(() => ({\n   *   gasLimit: 3000000,\n   * }));\n   * ```\n   * @param hook - the hook to add or replace any CallOverrides (gas limit, gas price, nonce, from, value, etc...)\n   * @public\n   */\n  overrideNextTransaction(hook) {\n    this.contractWrapper.withTransactionOverride(hook);\n  }\n}\n\nexport { ContractInterceptor as C };\n","import { a as assertEnabled } from './assertEnabled-f866961a.browser.esm.js';\nimport { C as ContractMetadata, b as ContractAppURI, G as GasCostEstimator, a as ContractEvents, d as detectContractFeature } from './contract-appuri-9892f94f.browser.esm.js';\nimport { dE as MARKETPLACE_CONTRACT_ROLES, dx as FEATURE_DIRECT_LISTINGS, dy as FEATURE_ENGLISH_AUCTIONS, dz as FEATURE_OFFERS, cs as ContractWrapper, bk as AbiSchema, b$ as MarketplaceContractSchema } from './index-42be4209.browser.esm.js';\nimport { C as ContractEncoder } from './fetchCurrencyValue-d99a82ef.browser.esm.js';\nimport { C as ContractInterceptor } from './contract-interceptor-d7b164a7.browser.esm.js';\nimport { C as ContractPlatformFee } from './contract-platform-fee-c14063bd.browser.esm.js';\nimport { C as ContractRoles } from './contract-roles-93079777.browser.esm.js';\nimport { M as MarketplaceV3DirectListings, a as MarketplaceV3EnglishAuctions, b as MarketplaceV3Offers } from './marketplacev3-offers-3766dc6c.browser.esm.js';\nimport { T as Transaction } from './transactions-8e6a03fc.browser.esm.js';\nimport 'ethers';\nimport 'zod';\nimport '@thirdweb-dev/storage';\nimport '@thirdweb-dev/chains';\nimport '@thirdweb-dev/crypto';\nimport 'tiny-invariant';\nimport 'bn.js';\nimport 'bs58';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\nimport './cleanCurrencyAddress-ed9ee77d.browser.esm.js';\nimport './normalizePriceValue-c906d886.browser.esm.js';\nimport './setErc20Allowance-96f7a033.browser.esm.js';\nimport './marketplace-478946cc.browser.esm.js';\nimport './QueryParams-af68a67b.browser.esm.js';\n\n/**\n * Create your own whitelabel marketplace that enables users to buy and sell any digital assets.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"marketplace\");\n * ```\n *\n * @internal\n * @deprecated use contract.directListings / contract.auctions / contract.offers instead\n */\nclass MarketplaceV3 {\n  static contractRoles = MARKETPLACE_CONTRACT_ROLES;\n\n  /**\n   * @internal\n   */\n\n  /**\n   * Direct listings\n   * @remarks Create and manage direct listings in your marketplace.\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // The price to pay per unit of NFTs listed.\n   *   pricePerToken: 1.5,\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(Date.now()),\n   *   // how long the listing will be open for\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   *   // Whether the listing is reserved for a specific set of buyers.\n   *   isReservedListing: false\n   * }\n   *\n   * const tx = await contract.directListings.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   *\n   * // And on the buyers side:\n   * // The ID of the listing you want to buy from\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.directListings.buyFromListing(listingId, quantityDesired);\n   * ```\n   */\n  get directListings() {\n    return assertEnabled(this.detectDirectListings(), FEATURE_DIRECT_LISTINGS);\n  }\n  /**\n   * Auctions\n   * @remarks Create and manage auctions in your marketplace.\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract of the asset you want to auction\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to auction\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to auction\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the auctioned tokens\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // the minimum bid that will be accepted for the token\n   *   minimumBidAmount: \"1.5\",\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutBidAmount: \"10\",\n   *   // If a bid is made less than these many seconds before expiration, the expiration time is increased by this.\n   *   timeBufferInSeconds: \"1000\",\n   *   // A bid must be at least this much bps greater than the current winning bid\n   *   bidBufferBps: \"100\", // 100 bps stands for 1%\n   *   // when should the auction open up for bidding\n   *   startTimestamp: new Date(Date.now()),\n   *   // end time of auction\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   * }\n   *\n   * const tx = await contract.englishAuctions.createAuction(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created auction\n   *\n   * // And on the buyers side:\n   * // The auction ID of the asset you want to bid on\n   * const auctionId = 0;\n   * // The total amount you are willing to bid for auctioned tokens\n   * const bidAmount = 1;\n   *\n   * await contract.englishAuctions.makeBid(auctionId, bidAmount);\n   * ```\n   */\n  get englishAuctions() {\n    return assertEnabled(this.detectEnglishAuctions(), FEATURE_ENGLISH_AUCTIONS);\n  }\n\n  /**\n   * Offers\n   * @remarks Make and manage offers.\n   * @example\n   * ```javascript\n   * // Data of the offer you want to make\n   * const offer = {\n   *   // address of the contract the asset you want to make an offer for\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to buy\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to buy\n   *   quantity: 1,\n   *   // address of the currency contract that you offer to pay in\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // Total price you offer to pay for the mentioned token(s)\n   *   totalPrice: \"1.5\",\n   *   // Offer valid until\n   *   endTimestamp: new Date(),\n   * }\n   *\n   * const tx = await contract.offers.makeOffer(offer);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created offer\n   *\n   * // And on the seller's side:\n   * // The ID of the offer you want to accept\n   * const offerId = 0;\n   * await contract.offers.acceptOffer(offerId);\n   * ```\n   */\n  get offers() {\n    return assertEnabled(this.detectOffers(), FEATURE_OFFERS);\n  }\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options, storage);\n    this._chainId = chainId;\n    this.abi = AbiSchema.parse(abi || []);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new ContractMetadata(this.contractWrapper, MarketplaceContractSchema, this.storage);\n    this.app = new ContractAppURI(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new ContractRoles(this.contractWrapper, MarketplaceV3.contractRoles);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.platformFees = new ContractPlatformFee(this.contractWrapper);\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n\n  /** ********************\n   * FEATURE DETECTION\n   * ********************/\n\n  detectDirectListings() {\n    if (detectContractFeature(this.contractWrapper, \"DirectListings\")) {\n      return new MarketplaceV3DirectListings(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectEnglishAuctions() {\n    if (detectContractFeature(this.contractWrapper, \"EnglishAuctions\")) {\n      return new MarketplaceV3EnglishAuctions(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectOffers() {\n    if (detectContractFeature(this.contractWrapper, \"Offers\")) {\n      return new MarketplaceV3Offers(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n\nexport { MarketplaceV3 };\n","import { cx as BigNumberTransformSchema, cy as FileOrBufferOrStringSchema, cz as HexColor, cs as ContractWrapper } from './index-42be4209.browser.esm.js';\nimport { z } from 'zod';\nimport { i as isNativeToken } from './fetchCurrencyValue-d99a82ef.browser.esm.js';\n\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(z.array(PropertiesInput)).transform(i => i.flat()), z.array(PropertiesInput), PropertiesInput]).optional().nullable())();\n\n/**\n * @internal\n */\nconst BasicNFTInput = /* @__PURE__ */(() => z.object({\n  name: z.union([z.string(), z.number()]).optional().nullable(),\n  description: z.string().nullable().optional().nullable(),\n  image: FileOrBufferOrStringSchema.nullable().optional(),\n  animation_url: FileOrBufferOrStringSchema.optional().nullable()\n}))();\n\n/**\n * @internal\n */\nconst CommonNFTInput = /* @__PURE__ */(() => BasicNFTInput.extend({\n  external_url: FileOrBufferOrStringSchema.nullable().optional(),\n  background_color: HexColor.optional().nullable(),\n  properties: OptionalPropertiesInput,\n  attributes: OptionalPropertiesInput\n}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst NFTInputOrUriSchema = /* @__PURE__ */(() => z.union([CommonNFTInput, z.string()]))();\n\n/**\n * @internal\n */\nconst CommonNFTOutput = /* @__PURE__ */(() => CommonNFTInput.extend({\n  id: z.string(),\n  uri: z.string(),\n  image: z.string().nullable().optional(),\n  external_url: z.string().nullable().optional(),\n  animation_url: z.string().nullable().optional()\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nasync function setErc20Allowance(contractToApprove, value, currencyAddress, overrides) {\n  if (isNativeToken(currencyAddress)) {\n    overrides[\"value\"] = value;\n  } else {\n    const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n    const signer = contractToApprove.getSigner();\n    const provider = contractToApprove.getProvider();\n    const erc20 = new ContractWrapper(signer || provider, currencyAddress, ERC20Abi, contractToApprove.options, contractToApprove.storage);\n    const owner = await contractToApprove.getSignerAddress();\n    const spender = contractToApprove.address;\n    const allowance = await erc20.read(\"allowance\", [owner, spender]);\n    if (allowance.lt(value)) {\n      // approve overrides the previous allowance, set it to the minimum required for this tx\n      await erc20.sendTransaction(\"approve\", [spender, value]);\n    }\n    return overrides;\n  }\n}\n\nexport { BasicNFTInput as B, CommonNFTInput as C, NFTInputOrUriSchema as N, CommonNFTOutput as a, setErc20Allowance as s };\n"],"names":["InterfaceId_IERC721","utils","InterfaceId_IERC1155","FALLBACK_METADATA","name","fetchTokenMetadata","_x","_x2","_x3","_fetchTokenMetadata","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tokenId","tokenUri","storage","base64","_jsonMetadata","parsedUri","jsonMetadata","unparsedTokenIdUri","wrap","_context","prev","next","startsWith","Buffer","split","JSON","parse","from","toString","abrupt","CommonNFTOutput","_objectSpread","id","BigNumber","uri","replace","toHexString","slice","downloadJSON","sent","t0","t1","console","warn","concat","stringify","stop","fetchTokenMetadataForContract","_x4","_x5","_x6","_x7","_fetchTokenMetadataForContract","_callee2","contractAddress","provider","ERC165MetadataAbi","erc165","_yield$Promise$all","_yield$Promise$all2","isERC721","isERC1155","ERC721MetadataAbi","erc721","ERC1155MetadataAbi","erc1155","_context2","default","Contract","Promise","all","supportsInterface","_slicedToArray","tokenURI","Error","uploadOrExtractURI","_x8","_x9","_uploadOrExtractURI","_callee3","metadata","_context3","upload","CommonNFTInput","uploadOrExtractURIs","_x10","_x11","_x12","_x13","_uploadOrExtractURIs","_callee4","metadatas","startNumber","options","uris","_context4","isUriList","isMetadataList","uploadBatch","map","m","rewriteFileNames","fileStartNumber","onProgress","getBaseUriFromBatch","baseUri","substring","lastIndexOf","i","length","undefined","find","DEFAULT_QUERY_ALL_COUNT","RawDateSchema","z","union","date","transform","Math","floor","getTime","number","StartDateSchema","Date","EndDateSchema","now","assertEnabled","namespace","feature","ExtensionNotImplementedError","ContractInterceptor","contractWrapper","_classCallCheck","this","_createClass","key","value","hook","withTransactionOverride","MarketplaceV3","network","address","abi","chainId","ContractWrapper","_chainId","AbiSchema","ContractMetadata","MarketplaceContractSchema","app","ContractAppURI","roles","ContractRoles","contractRoles","encoder","ContractEncoder","estimator","GasCostEstimator","events","ContractEvents","platformFees","ContractPlatformFee","interceptor","get","detectDirectListings","FEATURE_DIRECT_LISTINGS","detectEnglishAuctions","FEATURE_ENGLISH_AUCTIONS","detectOffers","FEATURE_OFFERS","updateSignerOrProvider","_prepare","method","args","overrides","Transaction","fromContractWrapper","_call","functionName","call","detectContractFeature","MarketplaceV3DirectListings","MarketplaceV3EnglishAuctions","MarketplaceV3Offers","_defineProperty","MARKETPLACE_CONTRACT_ROLES","PropertiesInput","object","catchall","BigNumberTransformSchema","unknown","OptionalPropertiesInput","array","flat","optional","nullable","BasicNFTInput","string","description","image","FileOrBufferOrStringSchema","animation_url","extend","external_url","background_color","HexColor","properties","attributes","NFTInputOrUriSchema","setErc20Allowance","_setErc20Allowance","contractToApprove","currencyAddress","ERC20Abi","signer","erc20","owner","spender","isNativeToken","getSigner","getProvider","getSignerAddress","read","lt","sendTransaction"],"sourceRoot":""}